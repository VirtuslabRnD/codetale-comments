[
  {
    "id" : "c00dd227-de8f-4f39-9235-c3890b8a44e3",
    "prId" : 39846,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39846#pullrequestreview-16885926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "378b7265-d2fc-499d-b4a4-47263122dff8",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@liggitt Is this reasonable to do?\r\nI guess we should look if somebody is using this code so we don't break anyone...",
        "createdAt" : "2017-01-16T15:21:55Z",
        "updatedAt" : "2017-01-18T22:03:09Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "077afcd7-fbfe-4b8c-afb3-f460deb8b3a6",
        "parentId" : "378b7265-d2fc-499d-b4a4-47263122dff8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this should absolutely use the data from the cfg, not the ca subject",
        "createdAt" : "2017-01-16T16:07:19Z",
        "updatedAt" : "2017-01-18T22:03:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5fdc16cc-542b-4381-9497-b664d748ed51",
        "parentId" : "378b7265-d2fc-499d-b4a4-47263122dff8",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "+1 then",
        "createdAt" : "2017-01-16T21:35:51Z",
        "updatedAt" : "2017-01-18T22:03:09Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "f46bf42ba0b1cbcb2cb1d0aec0d4097d91572eed",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +91,95 @@\t\tSubject: pkix.Name{\n\t\t\tCommonName:   cfg.CommonName,\n\t\t\tOrganization: cfg.Organization,\n\t\t},\n\t\tDNSNames:     cfg.AltNames.DNSNames,"
  },
  {
    "id" : "fffeb14a-1212-463b-ae25-3bdc369f5746",
    "prId" : 35109,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35109#pullrequestreview-6196547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2961abde-e9d0-4204-a65d-87d92d346d4c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "many clients fail TLS connections if they see two different certs with the same serial number from the same signer (and they have a local memory of previously seen certs from a given signer). we're hard-coding serialnumber:1 here, and host is likely to be the same between local cluster setups. that's why the timestamp was added\n",
        "createdAt" : "2016-10-27T02:57:06Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0a4922aa-b9d2-40c5-86b2-51574bb42c7d",
        "parentId" : "2961abde-e9d0-4204-a65d-87d92d346d4c",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Would a different serial help then? I don't like to set the common name is something invalid as it is used for SNI.\n",
        "createdAt" : "2016-10-27T08:53:50Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "2ddb02bd-d00d-47ff-8844-372040ac23ff",
        "parentId" : "2961abde-e9d0-4204-a65d-87d92d346d4c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "CN is not required to be a hostname in serving certs, and if this is for the default cert, it'll be used for all requests that don't match an explicit cert. We could pick a random serial number instead, but I'd probably leave it as-is. As long as there is a SAN for all the expected domains, the CN can be whatever we want\n",
        "createdAt" : "2016-10-27T14:05:50Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "193ec658-f02b-472c-a274-e0949bc5d4c3",
        "parentId" : "2961abde-e9d0-4204-a65d-87d92d346d4c",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Didn't know CN can be nearly anything (https://tools.ietf.org/html/rfc6125). Will restore the old behaviour.\n",
        "createdAt" : "2016-10-27T14:55:24Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "6d3c560a-2032-446a-85c3-78bf54322790",
        "parentId" : "2961abde-e9d0-4204-a65d-87d92d346d4c",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Restored the old behaviour.\n",
        "createdAt" : "2016-10-28T07:22:05Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c5e354e82a125905e59d822ef3a63d0765465f8",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +139,143 @@\t\tSerialNumber: big.NewInt(1),\n\t\tSubject: pkix.Name{\n\t\t\tCommonName: host,\n\t\t},\n\t\tNotBefore: time.Now(),"
  },
  {
    "id" : "560a1897-ca31-4c85-ab7c-f3d34ce32cf8",
    "prId" : 32876,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32876#pullrequestreview-480489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2845f9f2-5dc4-4b5b-b794-b2de096a7819",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I guess it would be more consistent to take a `CertConfig` as a param instead of alternateIPs and alternateDNS.\n=> `GenerateSelfSignedCert(cfg CertConfig, certPath, keyPath string)`\n",
        "createdAt" : "2016-09-18T15:50:06Z",
        "updatedAt" : "2016-09-19T08:03:26Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "654816c2-a18b-4a7c-a2e9-9fed18ed2a21",
        "parentId" : "2845f9f2-5dc4-4b5b-b794-b2de096a7819",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Sure, but this is an old function and changing it would imply more changes outside of this package.\n",
        "createdAt" : "2016-09-18T18:33:31Z",
        "updatedAt" : "2016-09-19T08:03:26Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "386fae45928ea769c3a7ba92e84ea4c79035257b",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +133,137 @@// If the certificate or key files already exist, they will be overwritten.\n// Any parent directories of the certPath or keyPath will be created as needed with file mode 0755.\nfunc GenerateSelfSignedCert(host, certPath, keyPath string, alternateIPs []net.IP, alternateDNS []string) error {\n\tpriv, err := rsa.GenerateKey(cryptorand.Reader, 2048)\n\tif err != nil {"
  },
  {
    "id" : "5fe8df70-c5ca-4fd1-87dc-173360cce51d",
    "prId" : 32876,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32876#pullrequestreview-788528",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "494ea8a0-37d0-49f6-8602-ec35fb62f5a9",
        "parentId" : null,
        "authorId" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "body" : "nit: This doesn't seem to be used anywhere. \n",
        "createdAt" : "2016-09-20T16:39:13Z",
        "updatedAt" : "2016-09-20T16:48:53Z",
        "lastEditedBy" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "tags" : [
        ]
      }
    ],
    "commit" : "386fae45928ea769c3a7ba92e84ea4c79035257b",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@\n// NewSignedCert creates a signed certificate using the given CA certificate and key\nfunc NewSignedCert(cfg Config, key *rsa.PrivateKey, caCert *x509.Certificate, caKey *rsa.PrivateKey) (*x509.Certificate, error) {\n\tserial, err := cryptorand.Int(cryptorand.Reader, new(big.Int).SetInt64(math.MaxInt64))\n\tif err != nil {"
  },
  {
    "id" : "bd6b57fa-e7d8-47dc-b3de-4e97d1ff3681",
    "prId" : 32876,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32876#pullrequestreview-867492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "858a7056-4f47-4860-8cb5-13f453cdc8be",
        "parentId" : null,
        "authorId" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "body" : "nit: Doesn't look like this is used, but I know during the tls bootstrap discussion, others more versed in security didn't like having both server and client key usage in a single cert.\n",
        "createdAt" : "2016-09-20T16:40:28Z",
        "updatedAt" : "2016-09-20T16:48:53Z",
        "lastEditedBy" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "tags" : [
        ]
      },
      {
        "id" : "e7cc2f15-dc41-4373-baca-a665955a9e4f",
        "parentId" : "858a7056-4f47-4860-8cb5-13f453cdc8be",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Happy to write to funcs for server and client, but not sure what's best for kubelet, I think it needs both. (Or does it?)\n",
        "createdAt" : "2016-09-20T23:22:14Z",
        "updatedAt" : "2016-09-20T23:22:15Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "6bb2477e-89fc-4ab6-a750-0d26cdaf9db6",
        "parentId" : "858a7056-4f47-4860-8cb5-13f453cdc8be",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "I'll add `ServerUsage bool, ClientUsage bool` to `Config` struct to control this, if that'd be okay?\n",
        "createdAt" : "2016-09-20T23:25:51Z",
        "updatedAt" : "2016-09-20T23:25:52Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "c7edd59c-f9e5-4bbd-ac85-bf82f66d88ed",
        "parentId" : "858a7056-4f47-4860-8cb5-13f453cdc8be",
        "authorId" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "body" : "I called it out as a nit because I'm relaying a concern that was expressed during the kubelet tls bootstrap discussion, but now digging back through https://github.com/kubernetes/kubernetes/pull/30094 I'm actually unsure of the final state. However, it seemed @gtank had no personal issue with issuing certs with both usages (and I trust his judgement). So I wouldn't block on changes here - but I'm not a pki infra expert either.\n",
        "createdAt" : "2016-09-21T00:32:41Z",
        "updatedAt" : "2016-09-21T00:32:41Z",
        "lastEditedBy" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "tags" : [
        ]
      },
      {
        "id" : "3a5b3690-46d7-4349-84e3-bc5dce6de510",
        "parentId" : "858a7056-4f47-4860-8cb5-13f453cdc8be",
        "authorId" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "body" : "As a side note -- if you're not adding `--kubelet-client-certificate` `--kubelet-client-key` to the api-server -- the server usage isn't necessary (api-server will not validate the server cert in the kubelet api anyway). \n",
        "createdAt" : "2016-09-21T00:40:23Z",
        "updatedAt" : "2016-09-21T00:40:23Z",
        "lastEditedBy" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "tags" : [
        ]
      },
      {
        "id" : "05d94c5a-34d8-4961-bb04-5e18c20af6dc",
        "parentId" : "858a7056-4f47-4860-8cb5-13f453cdc8be",
        "authorId" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "body" : "Sorry to keep commenting, but I'm actually curious how this will be used in kubeadm in combination with the tls bootstrap? The CSR dance should get you at minimum a cert with client usage -- is this just meant for the kubelet api?\n",
        "createdAt" : "2016-09-21T00:41:46Z",
        "updatedAt" : "2016-09-21T00:41:46Z",
        "lastEditedBy" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "tags" : [
        ]
      }
    ],
    "commit" : "386fae45928ea769c3a7ba92e84ea4c79035257b",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +99,103 @@\t\tNotAfter:     time.Now().Add(duration365d).UTC(),\n\t\tKeyUsage:     x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature,\n\t\tExtKeyUsage:  []x509.ExtKeyUsage{x509.ExtKeyUsageServerAuth, x509.ExtKeyUsageClientAuth},\n\t}\n\tcertDERBytes, err := x509.CreateCertificate(cryptorand.Reader, &certTmpl, caCert, key.Public(), caKey)"
  },
  {
    "id" : "f58da3bc-a27a-4100-8e4c-8a60f8cac4ed",
    "prId" : 32876,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32876#pullrequestreview-1009828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab21ba8a-2ce3-42ad-bc84-6f3686626d79",
        "parentId" : null,
        "authorId" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "body" : "Why does this need to be a CA?\n",
        "createdAt" : "2016-09-20T16:43:26Z",
        "updatedAt" : "2016-09-20T16:48:53Z",
        "lastEditedBy" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "tags" : [
        ]
      },
      {
        "id" : "4eff42fa-bd72-4143-98e8-6a5b11258ea9",
        "parentId" : "ab21ba8a-2ce3-42ad-bc84-6f3686626d79",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "I didn't write this, just copied from bootkube. Happy to remove, thanks for pointing this out.\n",
        "createdAt" : "2016-09-20T23:23:21Z",
        "updatedAt" : "2016-09-20T23:23:21Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "263be8f3-3485-404d-b2eb-282a15d66d0d",
        "parentId" : "ab21ba8a-2ce3-42ad-bc84-6f3686626d79",
        "authorId" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "body" : "There is no `GenerateSelfSignedCert` in bootkube -- but does look like this is from exiting kubernetes code: https://github.com/kubernetes/kubernetes/blob/0986a01f4f2a00dcb5d3e58832c5f269f9788c62/pkg/util/crypto/crypto.go#L65\n\nStill not sure why it would need to be a CA, but this already existed.\n",
        "createdAt" : "2016-09-21T00:36:53Z",
        "updatedAt" : "2016-09-21T00:36:54Z",
        "lastEditedBy" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "tags" : [
        ]
      },
      {
        "id" : "baabda3a-b669-497e-80f3-b49226c43bcd",
        "parentId" : "ab21ba8a-2ce3-42ad-bc84-6f3686626d79",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Yes, thanks for double checking. This is one of the old ones, it's used by apiserver and kubelet. I am only vaguely familiar with what it gets the apiserver - it goes and creates a cert if you didn't specify one, but I am not sure of how much use this behaviour is to anyone really, to me it seems complete useless and has usability bugs like https://github.com/kubernetes/kubernetes/issues/19309 and https://github.com/kubernetes/kubernetes/issues/19310. There is also a comment about how badly uneducated the apiserver is about what it's external names are, as it's not able to do anything about the extra SANs. I'd vote to rip it out completely.\n",
        "createdAt" : "2016-09-21T06:09:11Z",
        "updatedAt" : "2016-09-21T06:09:11Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "81cf2d5a-ed35-48e2-b0f1-6556c905d6dc",
        "parentId" : "ab21ba8a-2ce3-42ad-bc84-6f3686626d79",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "**Warning, not an expert**\n\nMy guess is that since this is also being used to self-sign in the call to `x509.CreateCertificate` below, that `IsCA` was set to true. The docs for the function call out self-signing specifically if both the parameters are the same, so would you get a valid self-signed cert without this? Could you test that?\n\n@mikedanese Do you know more about this than me?\n",
        "createdAt" : "2016-09-21T16:17:03Z",
        "updatedAt" : "2016-09-21T16:25:18Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "74ef8e70-46df-4cd3-8e19-2e4471200b94",
        "parentId" : "ab21ba8a-2ce3-42ad-bc84-6f3686626d79",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "After talking with @mikedanese, this is used to generate a cert authority to sign the rest of the cluster's certs.\n",
        "createdAt" : "2016-09-21T17:26:11Z",
        "updatedAt" : "2016-09-21T17:26:18Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "3d2187c3-2408-4882-a662-b4a13d9d82aa",
        "parentId" : "ab21ba8a-2ce3-42ad-bc84-6f3686626d79",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Ya, at the very least the name of this func isn't good. If this is used to generate the root CA for the cluster, the name should reflect that. Otherwise, we should not be minting a CA if it doesn't need to be.\n",
        "createdAt" : "2016-09-21T18:11:20Z",
        "updatedAt" : "2016-09-21T18:11:20Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "386fae45928ea769c3a7ba92e84ea4c79035257b",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +150,154 @@\t\tExtKeyUsage:           []x509.ExtKeyUsage{x509.ExtKeyUsageServerAuth},\n\t\tBasicConstraintsValid: true,\n\t\tIsCA: true,\n\t}\n"
  }
]