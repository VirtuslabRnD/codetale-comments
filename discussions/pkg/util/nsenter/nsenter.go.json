[
  {
    "id" : "2e36b012-c8ee-41cf-95d1-807b16a4e113",
    "prId" : 63143,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63143#pullrequestreview-123443571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65a0a8f2-b925-472d-9814-2054af731d89",
        "parentId" : null,
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "nit: Is it possible to use [`testing.FakeExec`](https://godoc.org/k8s.io/utils/exec/testing#FakeExec) in `nsenter_test.go`?",
        "createdAt" : "2018-05-25T16:51:51Z",
        "updatedAt" : "2018-05-25T16:51:52Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb5eb25ec197e6bb97c4044effa5e2489b889651",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +215,219 @@}\n\ntype fakeExec struct {\n\trootfsPath string\n}"
  },
  {
    "id" : "1fa9d5ae-b0c0-4de0-9d61-aa853aa804c7",
    "prId" : 62951,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62951#pullrequestreview-114320541",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdf8d414-7fa6-44fe-9f9c-55a4a1153d6f",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "`\"/bin\", \"/usr/sbin\", \"/usr/bin\", \"/\"` is better",
        "createdAt" : "2018-04-23T02:20:18Z",
        "updatedAt" : "2018-04-23T02:20:57Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "c15670ba-ae34-40c4-bf1e-ae8bb6a46c06",
        "parentId" : "bdf8d414-7fa6-44fe-9f9c-55a4a1153d6f",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@andyzhangx  i wanted to keep the existing ordering (pick the one in root first and then loop through)",
        "createdAt" : "2018-04-23T10:15:43Z",
        "updatedAt" : "2018-04-23T10:15:43Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f98d7a3eab4016fe24e5a1d7ef4250f7540f3e7",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +86,90 @@\tfor binary := range ne.paths {\n\t\t// check for binary under the following directories\n\t\tfor _, path := range []string{\"/\", \"/bin\", \"/usr/sbin\", \"/usr/bin\"} {\n\t\t\tbinPath := filepath.Join(path, binary)\n\t\t\tif _, err := os.Stat(filepath.Join(hostRootFsPath, binPath)); err != nil {"
  },
  {
    "id" : "9c09185a-1191-4336-86d4-aa95927d167c",
    "prId" : 62951,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62951#pullrequestreview-116499567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfbf921c-b477-4be7-a79e-0fc6ee100116",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "If the binary file is not found in all the searching paths, the return error will be nil? This does not make sense.\r\n\r\nAddressed this issue in #59786. @dims PTAL.",
        "createdAt" : "2018-05-01T04:23:37Z",
        "updatedAt" : "2018-05-01T04:53:35Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f98d7a3eab4016fe24e5a1d7ef4250f7540f3e7",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +99,103 @@\t\t}\n\t}\n\treturn ne, nil\n}\n"
  }
]