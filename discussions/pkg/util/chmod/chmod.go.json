[
  {
    "id" : "339b7e55-0eb7-4afc-9998-d7e3b188e515",
    "prId" : 15352,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa565404-1485-4ed6-9852-55b7e5e17cb7",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Is this meant to be recursive?  For any volume with files in them it seems like it should be, but godoc for os.Chmod doesn't say it is recursive\n",
        "createdAt" : "2015-10-16T04:33:00Z",
        "updatedAt" : "2015-10-22T20:41:20Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "d4053647-2921-464f-8ce5-d510cc961db5",
        "parentId" : "aa565404-1485-4ed6-9852-55b7e5e17cb7",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "It's meant to, but it's not.  I think the Golang way here is to use it in conjunction with `path/filepath` to walk the tree.  I will change, good catch.\n",
        "createdAt" : "2015-10-20T18:34:31Z",
        "updatedAt" : "2015-10-22T20:41:20Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "ede94b1d-e037-43db-a3e3-86fe19cb23c6",
        "parentId" : "aa565404-1485-4ed6-9852-55b7e5e17cb7",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "I implemented the recursion at a higher level to avoid walking the tree twice.\n",
        "createdAt" : "2015-10-22T15:38:30Z",
        "updatedAt" : "2015-10-22T20:41:20Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "11964fd6-9d4d-49b5-bf99-bfa09895326b",
        "parentId" : "aa565404-1485-4ed6-9852-55b7e5e17cb7",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Godoc comments on these would be nice\n",
        "createdAt" : "2015-10-22T17:41:19Z",
        "updatedAt" : "2015-10-22T20:41:20Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "47e90ee5-4b9e-4c08-91a6-5d37841105cd",
        "parentId" : "aa565404-1485-4ed6-9852-55b7e5e17cb7",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Why didn't you say you wanted _good_ comments to begin with?\n",
        "createdAt" : "2015-10-22T19:57:37Z",
        "updatedAt" : "2015-10-22T20:41:20Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cd12f5e0580e330a77412a6d722fd51d9dfe57f",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@\nfunc (_ *chmodRunner) Chmod(path string, mode os.FileMode) error {\n\treturn os.Chmod(path, mode)\n}"
  },
  {
    "id" : "925ec516-8b4a-4efc-9ee7-f7dffb74d57e",
    "prId" : 15352,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "154d81b0-3012-4e30-9dba-eaa203d2acfb",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I'm not super keen on the factoring of these.  I know it's supposed to be a trivially small util, yet it feels SO small.\n\nI'm asking this, not telling.  would it be cleaner to define the Chmoder and Chowner interfaces at the consumer (kubelet) and define a merged util/fsutil/OwnershipManager struct with Chmod() and Chown() funcs?  Or is that even more artificial?\n",
        "createdAt" : "2015-10-16T04:37:06Z",
        "updatedAt" : "2015-10-22T20:41:20Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "a95566e0-2fe5-4c19-9522-02e3fe6d7b60",
        "parentId" : "154d81b0-3012-4e30-9dba-eaa203d2acfb",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "i factored them this to containerize them similar to mount until propogation mode control lands in docker. \n",
        "createdAt" : "2015-10-16T05:00:02Z",
        "updatedAt" : "2015-10-22T20:41:20Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "04bb1247-7cde-4e2a-a3ff-dc20c3dc588d",
        "parentId" : "154d81b0-3012-4e30-9dba-eaa203d2acfb",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Do we need to containerize chown/chmod?  Mount has a very widely varying implementation.  These, not so much.  I won't block this PR on this issue, but something isn't satisfying here.  \n",
        "createdAt" : "2015-10-16T05:23:10Z",
        "updatedAt" : "2015-10-22T20:41:20Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "ca797448-47a2-4b3e-9b5c-f6749f587438",
        "parentId" : "154d81b0-3012-4e30-9dba-eaa203d2acfb",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Hrm, I had convinced myself that we needed to, but I think I was wrong.  Is it okay if they go in like this and I clean them up in a follow-up?\n",
        "createdAt" : "2015-10-20T18:28:31Z",
        "updatedAt" : "2015-10-22T20:41:20Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "a7832a46-6ec3-4b2d-ab7a-7a31de52d297",
        "parentId" : "154d81b0-3012-4e30-9dba-eaa203d2acfb",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "yes\n",
        "createdAt" : "2015-10-21T04:14:42Z",
        "updatedAt" : "2015-10-22T20:41:20Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "1990e65e-373b-4854-901d-4c5323ccb206",
        "parentId" : "154d81b0-3012-4e30-9dba-eaa203d2acfb",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "To be clear, I am not sure what I think would be better, but I think it's worth some modicum of exploration\n",
        "createdAt" : "2015-10-21T04:27:35Z",
        "updatedAt" : "2015-10-22T20:41:20Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cd12f5e0580e330a77412a6d722fd51d9dfe57f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +23,27 @@// Interface is something that knows how to run the chmod system call.\n// It is non-recursive.\ntype Interface interface {\n\t// Chmod changes the mode of the given file, implementing the same\n\t// semantics as os.Chmod."
  }
]