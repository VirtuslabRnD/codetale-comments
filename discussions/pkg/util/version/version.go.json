[
  {
    "id" : "2a40bd48-086c-422f-ba74-6a436c44cc37",
    "prId" : 47698,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47698#pullrequestreview-57381637",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05cf3615-ded5-40fe-8b1a-afb97bd88d12",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "What I thought of adding yet here is `Major() uint`, `Minor() uint` and `Patch() uint` which would work like this:\r\n```\r\nfunc (v *Version) Patch() uint {\r\n    if len(v.components) < 3 {\r\n        return 0\r\n    }\r\n    return v.components[2]\r\n}\r\n```\r\netc.\r\n\r\nLooks much cleaner in the code...",
        "createdAt" : "2017-08-18T12:47:39Z",
        "updatedAt" : "2017-08-21T20:05:48Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "e2699c1e-689c-46fa-90c7-f6c5e66b4df5",
        "parentId" : "05cf3615-ded5-40fe-8b1a-afb97bd88d12",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "Done!",
        "createdAt" : "2017-08-20T20:25:41Z",
        "updatedAt" : "2017-08-21T20:05:48Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "9730b82fcfa32659233504e6ca3a73eabafae462",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +151,155 @@\n// Components returns the version number components\nfunc (v *Version) Components() []uint {\n\treturn v.components\n}"
  },
  {
    "id" : "f1acdac9-d245-4dd9-9216-5cc8f86585da",
    "prId" : 35436,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35436#pullrequestreview-5668733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cacfe04b-7e28-4197-b49c-5b7039b78fef",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "curiously, this means it can not parse our API versions, e.g. \"v1\".  probably not important.\n",
        "createdAt" : "2016-10-24T21:29:53Z",
        "updatedAt" : "2016-12-13T13:53:37Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "885be84e-2806-49f9-9725-acded9a8924a",
        "parentId" : "cacfe04b-7e28-4197-b49c-5b7039b78fef",
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "I was trying to find a good balance where it would accept all reasonable version numbers, but not every random string that starts with a digit (eg \"0-9A-Za-z\" or \"9:15am\" or \"1. Beat egg, vanilla and cinnamon in shallow dish\"). Maybe we could accept single-digit versions if they don't have any trailing junk after the version number.\n",
        "createdAt" : "2016-10-25T13:15:24Z",
        "updatedAt" : "2016-12-13T13:53:37Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "37293cb0-4eb2-4afc-8612-fd97059f1d5e",
        "parentId" : "cacfe04b-7e28-4197-b49c-5b7039b78fef",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Our API versions don't fit the assumptions here anyway - v1beta1 is not semver compatibles in any way.  Not important\n",
        "createdAt" : "2016-10-25T14:56:23Z",
        "updatedAt" : "2016-12-13T13:53:37Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7887938684377a9a148ad61e2296c6191a5f0c3",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@\n\tcomponents := strings.Split(numbers, \".\")\n\tif (semver && len(components) != 3) || (!semver && len(components) < 2) {\n\t\treturn nil, fmt.Errorf(\"illegal version string %q\", str)\n\t}"
  }
]