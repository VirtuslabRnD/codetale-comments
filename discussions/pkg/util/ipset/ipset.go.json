[
  {
    "id" : "6575231f-6381-4c0e-a7b0-665a8e2f5618",
    "prId" : 68481,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68481#pullrequestreview-154025190",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6d17962-07e5-42ff-a1bf-78e9bb74f27e",
        "parentId" : null,
        "authorId" : "e43f24e2-6fac-4de6-9e06-a6b1f93501a6",
        "body" : "too few %s's",
        "createdAt" : "2018-09-10T18:10:27Z",
        "updatedAt" : "2018-09-11T03:38:24Z",
        "lastEditedBy" : "e43f24e2-6fac-4de6-9e06-a6b1f93501a6",
        "tags" : [
        ]
      },
      {
        "id" : "eebc53fd-dbe1-4076-bfc5-e9377e2e96ee",
        "parentId" : "e6d17962-07e5-42ff-a1bf-78e9bb74f27e",
        "authorId" : "63651353-3ff8-412c-8e42-e695800f30c6",
        "body" : "https://github.com/kubernetes/kubernetes/pull/68263 fixes this but it's ok.",
        "createdAt" : "2018-09-11T01:46:54Z",
        "updatedAt" : "2018-09-11T03:38:24Z",
        "lastEditedBy" : "63651353-3ff8-412c-8e42-e695800f30c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "9865aef21b38fd9d520df6fe6c3b8e31500a124a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +486,490 @@\t\treturn true\n\t}\n\tglog.Errorf(\"Invalid entry's protocol: %s, supported protocols are [%s, %s, %s]\", protocol, ProtocolTCP, ProtocolUDP, ProtocolSCTP)\n\treturn false\n}"
  },
  {
    "id" : "9e3b4652-292c-468d-bebb-149ec0d130e6",
    "prId" : 57317,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57317#pullrequestreview-85244064",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8d2722a-6126-4459-b62c-751be794aef3",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "is there a reference to how these strings can be obtained in the future if something changes?",
        "createdAt" : "2017-12-21T05:27:47Z",
        "updatedAt" : "2017-12-22T05:50:21Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "dfefe1ba-8e1f-45a7-804f-81f5123136c8",
        "parentId" : "c8d2722a-6126-4459-b62c-751be794aef3",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "xref: \r\n\r\nhttps://github.com/Olipro/ipset/blob/master/lib/errcode.c#L32-L33\r\n\r\nhttps://github.com/Olipro/ipset/blob/master/lib/parse.c#L1904\r\n\r\nhttps://github.com/Olipro/ipset/blob/master/lib/parse.c#L1925\r\n\r\n",
        "createdAt" : "2017-12-22T05:43:02Z",
        "updatedAt" : "2017-12-22T05:50:21Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "e9b1f14e-0ea4-47e0-82a9-af23eb532745",
        "parentId" : "c8d2722a-6126-4459-b62c-751be794aef3",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "I added these reference now, PTAL.",
        "createdAt" : "2017-12-22T05:50:56Z",
        "updatedAt" : "2017-12-22T05:50:56Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      }
    ],
    "commit" : "5052f3aed0d8d975bf7745f73141ef96e86862a0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +325,329 @@// IsNotFoundError returns true if the error indicates \"not found\".  It parses\n// the error string looking for known values, which is imperfect but works in\n// practice.\nfunc IsNotFoundError(err error) bool {\n\tes := err.Error()"
  },
  {
    "id" : "491ab304-2b6e-465f-91cc-0cbadd778e16",
    "prId" : 57317,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57317#pullrequestreview-85243574",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37dfb3ec-1bbd-4271-9e2f-97ae5395f6b7",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "is there a way we can write a test to detect if these strings change?",
        "createdAt" : "2017-12-21T05:28:29Z",
        "updatedAt" : "2017-12-22T05:50:21Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "8c15347a-e7b8-4a6f-9ac5-606d9b2b5543",
        "parentId" : "37dfb3ec-1bbd-4271-9e2f-97ae5395f6b7",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "> is there a way we can write a test to detect if these strings change?\r\n\r\nI am not sure fully understand your meaning. Do you mean write a test to watch the ipset message string?\r\n\r\nThese strings are very stable and have not changed for many years.\r\n  ",
        "createdAt" : "2017-12-22T05:44:59Z",
        "updatedAt" : "2018-01-06T01:55:53Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      }
    ],
    "commit" : "5052f3aed0d8d975bf7745f73141ef96e86862a0",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +328,332 @@func IsNotFoundError(err error) bool {\n\tes := err.Error()\n\tif strings.Contains(es, \"does not exist\") {\n\t\t// set with the same name already exists\n\t\t// xref: https://github.com/Olipro/ipset/blob/master/lib/errcode.c#L32-L33"
  },
  {
    "id" : "d6f05a64-165e-466c-a0c5-7cbe1f3b479c",
    "prId" : 57268,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57268#pullrequestreview-91754829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5a4347f-a76b-4c02-b67c-6d15100fb607",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "This code looks semi-fiddly, is there a unit test somewhere? I don't see it in this PR.",
        "createdAt" : "2018-01-26T05:00:14Z",
        "updatedAt" : "2018-02-06T02:17:44Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "dfc2db22-71c8-46d5-adbc-a93a9d74d1d7",
        "parentId" : "b5a4347f-a76b-4c02-b67c-6d15100fb607",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "Yes, I already added a unit test for this function. Please check: https://github.com/kubernetes/kubernetes/pull/57268/files#diff-1e6b0bd1e6429733c0d1633fe4741a98R799",
        "createdAt" : "2018-01-26T06:42:02Z",
        "updatedAt" : "2018-02-06T02:17:44Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      }
    ],
    "commit" : "10a899f31eed0f42bf23aa126351d7888e9c527a",
    "line" : 288,
    "diffHunk" : "@@ -1,1 +495,499 @@// parsePortRange parse the begin and end port from a raw string(format: a-b).  beginPort <= endPort\n// in the return value.\nfunc parsePortRange(portRange string) (beginPort int, endPort int, err error) {\n\tif len(portRange) == 0 {\n\t\tportRange = DefaultPortRange"
  },
  {
    "id" : "50fb0de4-f1fe-4209-9fc0-8e202c1c2b7c",
    "prId" : 57268,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57268#pullrequestreview-94220942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4b7f3cc-3bff-4370-b418-ff25408be85b",
        "parentId" : null,
        "authorId" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "body" : "I'm a little confused on why you need this. It seems like Validate for an Entry does everything you need. Can you describe a chain of events where this function would return false?",
        "createdAt" : "2018-02-05T17:20:27Z",
        "updatedAt" : "2018-02-06T02:17:44Z",
        "lastEditedBy" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "tags" : [
        ]
      },
      {
        "id" : "dd00e544-851b-4747-8440-42183ded0e87",
        "parentId" : "d4b7f3cc-3bff-4370-b418-ff25408be85b",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "This function is called by \r\n\r\n```\r\nfunc (runner *runner) CreateSet(set *IPSet, ignoreExistErr bool) error {\r\n    ...\r\n    // Validate ipset before creating\r\n    valid := set.Validate()\r\n    if !valid {\r\n\treturn fmt.Errorf(\"error creating ipset since it's invalid\")\r\n    }\r\n    return runner.createSet(set, ignoreExistErr)\r\n}\r\n```\r\n\r\nPossibly I need to change the PR title to `validate ipset set and entry - ipvs proxier validate entry before adding it and validate set before creating it`.",
        "createdAt" : "2018-02-06T02:15:29Z",
        "updatedAt" : "2018-02-06T02:17:44Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "8009fe82-5519-450f-8c81-975bc036306d",
        "parentId" : "d4b7f3cc-3bff-4370-b418-ff25408be85b",
        "authorId" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "body" : "What I was asking was when would there be a situation where Validate() returns false? In other words, is there a set of consecutive events that would cause a set to be invalid? I can't think of any which is why I am confused as to why you even need it. ",
        "createdAt" : "2018-02-06T02:42:07Z",
        "updatedAt" : "2018-02-06T02:42:07Z",
        "lastEditedBy" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "tags" : [
        ]
      },
      {
        "id" : "632d0b7c-3887-4fb0-a58a-37f754829778",
        "parentId" : "d4b7f3cc-3bff-4370-b418-ff25408be85b",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "Yes, three are...\r\n\r\n```\r\n// Check if protocol is valid for `HashIPPort`, `HashIPPortIP` and `HashIPPortNet` type set.\r\n\tif set.SetType == HashIPPort || set.SetType == HashIPPortIP || set.SetType == HashIPPortNet {\r\n\t\tif valid := validateHashFamily(set.HashFamily); !valid {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\t// check set type\r\n\tif valid := validateIPSetType(set.SetType); !valid {\r\n\t\treturn false\r\n\t}\r\n\t// check port range for bitmap type set\r\n\tif set.SetType == BitmapPort {\r\n\t\tif valid := validatePortRange(set.PortRange); !valid {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\t// check hash size value of ipset\r\n\tif set.HashSize <= 0 {\r\n\t\treturn false\r\n\t}\r\n\t// check max elem value of ipset\r\n\tif set.MaxElem <= 0 {\r\n\t\tglog.Errorf(\"Invalid maxelem value %d, should be >0\", set.MaxElem)\r\n\t\treturn false\r\n\t}\r\n```\r\n\r\nAll situations above will return false by Validate().\r\n\r\nI am not sure I FULLY understand...",
        "createdAt" : "2018-02-06T02:48:21Z",
        "updatedAt" : "2018-02-06T02:48:21Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "7e5121ed-70b5-45ad-ba78-8522401cdda0",
        "parentId" : "d4b7f3cc-3bff-4370-b418-ff25408be85b",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "We should keep it in mind that this util pkg is public and can be used by other processes...",
        "createdAt" : "2018-02-06T02:49:55Z",
        "updatedAt" : "2018-02-06T02:49:55Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "46ac19ec-5c96-4d88-9846-d81cbd668d82",
        "parentId" : "d4b7f3cc-3bff-4370-b418-ff25408be85b",
        "authorId" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "body" : "I get that since it is a public pkg, you need it. However I am trying to understand at a deeper level why an IPSet would ever be invalid in the ipvs case\r\n\r\n\r\n",
        "createdAt" : "2018-02-06T02:57:56Z",
        "updatedAt" : "2018-02-06T02:57:56Z",
        "lastEditedBy" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "tags" : [
        ]
      },
      {
        "id" : "36ac1602-d231-47b8-acf3-9ff5498f6355",
        "parentId" : "d4b7f3cc-3bff-4370-b418-ff25408be85b",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : ">  However I am trying to understand at a deeper level why an IPSet would ever be invalid in the ipvs case\r\n\r\nAh, ipvs case will not cause error for now.",
        "createdAt" : "2018-02-06T03:22:20Z",
        "updatedAt" : "2018-02-06T03:22:20Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "1e01ff3f-00fb-4370-a39f-ec716953f72f",
        "parentId" : "d4b7f3cc-3bff-4370-b418-ff25408be85b",
        "authorId" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "body" : "Got it, thank you for clarifying :) ",
        "createdAt" : "2018-02-06T04:06:25Z",
        "updatedAt" : "2018-02-06T04:06:26Z",
        "lastEditedBy" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "tags" : [
        ]
      }
    ],
    "commit" : "10a899f31eed0f42bf23aa126351d7888e9c527a",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +92,96 @@\n// Validate checks if a given ipset is valid or not.\nfunc (set *IPSet) Validate() bool {\n\t// Check if protocol is valid for `HashIPPort`, `HashIPPortIP` and `HashIPPortNet` type set.\n\tif set.SetType == HashIPPort || set.SetType == HashIPPortIP || set.SetType == HashIPPortNet {"
  }
]