[
  {
    "id" : "55b4e206-4707-47f6-a038-8cdb38554b9c",
    "prId" : 78428,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78428#pullrequestreview-243645647",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a8de024-c53f-45be-a66e-81894f7120cf",
        "parentId" : null,
        "authorId" : "4138710b-380a-4011-917f-70ce4f4b9717",
        "body" : "Is a panic preferable to introducing an error return?",
        "createdAt" : "2019-05-30T02:14:06Z",
        "updatedAt" : "2019-05-30T02:14:40Z",
        "lastEditedBy" : "4138710b-380a-4011-917f-70ce4f4b9717",
        "tags" : [
        ]
      },
      {
        "id" : "0b2b9c21-b374-4eb4-864b-74fba4228f92",
        "parentId" : "8a8de024-c53f-45be-a66e-81894f7120cf",
        "authorId" : "d83924dd-d70f-4da4-95ce-d99172a9d6f1",
        "body" : "The original code panicked, but with a non-useful message. This change keeps the panic, but improves the message, so it's easier to see what the problem with the iptables-save output is. \r\n\r\nReturning an error would require a bigger change to all the callers. Plus, it's impossible to know how to handle the error.",
        "createdAt" : "2019-05-30T06:33:19Z",
        "updatedAt" : "2019-05-30T06:33:19Z",
        "lastEditedBy" : "d83924dd-d70f-4da4-95ce-d99172a9d6f1",
        "tags" : [
        ]
      }
    ],
    "commit" : "93a549679fcdc949a0fcddb296a70b25197698ae",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +64,68 @@\t\t\tspaceIndex := bytes.Index(line, spaceBytes)\n\t\t\tif spaceIndex == -1 {\n\t\t\t\tpanic(fmt.Sprintf(\"Unexpected chain line in iptables-save output: %v\", string(line)))\n\t\t\t}\n\t\t\tchain := Chain(line[1:spaceIndex])"
  },
  {
    "id" : "c5690b29-8aec-438d-9f54-36768efac375",
    "prId" : 65815,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65815#pullrequestreview-134999621",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "857fbb49-64ab-4bcc-b6a7-b2da0bc363cb",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "FYI: This is WIP PR with how I roughly see that.",
        "createdAt" : "2018-07-06T12:45:37Z",
        "updatedAt" : "2018-07-06T12:45:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "b377e0cc-b217-410d-9289-7a375a81876f",
        "parentId" : "857fbb49-64ab-4bcc-b6a7-b2da0bc363cb",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "https://github.com/kubernetes/kubernetes/pull/65902",
        "createdAt" : "2018-07-06T12:45:49Z",
        "updatedAt" : "2018-07-06T12:45:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d073b2097f213ed449fde387285648f5888ce4c3",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +61,65 @@\t\t\t// space delimited. If there is no space, this line will panic.\n\t\t\t//\n\t\t\t// TODO: Try to avoid these allocations by reusing memory with the input.\n\t\t\tlineString := string(line)\n\t\t\tchain := Chain(line[1:strings.Index(lineString, \" \")])"
  }
]