[
  {
    "id" : "989f7130-6e12-44b3-a572-7d95cb85146b",
    "prId" : 5508,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9f8a370-4456-4fa6-be4a-509007edc19c",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Can you rename it to IsValidIPv4, to make it more explicit.\n",
        "createdAt" : "2015-03-24T10:40:26Z",
        "updatedAt" : "2015-03-24T10:40:26Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "77865df2-397d-4e0b-b97f-c2aa355518b5",
        "parentId" : "d9f8a370-4456-4fa6-be4a-509007edc19c",
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "To be honest I'd prefer to keep the name as is, because from k8s perspective this verifies whether it's a valid IP (because k8s works only for v4). \n",
        "createdAt" : "2015-03-25T11:09:21Z",
        "updatedAt" : "2015-03-25T11:09:21Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      }
    ],
    "commit" : "24eb1a08f3ef28539dbb7018c53b24a4a2b94572",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +98,102 @@\n// IsValidIP tests that the argument is a valid IPv4 address.\nfunc IsValidIP(value string) bool {\n\treturn net.ParseIP(value) != nil && net.ParseIP(value).To4() != nil\n}"
  },
  {
    "id" : "36dd316e-161f-49f3-b0cc-0912e4d4c8df",
    "prId" : 4898,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f57d78ba-91c5-4b18-b1af-6e2718826e68",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Why not define this as \"(\" + qualifiedToken + \")?\" - is that offensive to the purist in you?\n",
        "createdAt" : "2015-03-06T17:09:47Z",
        "updatedAt" : "2015-03-06T17:09:47Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "485759ce-c066-4b4c-aaba-11cba41619db",
        "parentId" : "f57d78ba-91c5-4b18-b1af-6e2718826e68",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Nope:)\n",
        "createdAt" : "2015-03-11T14:10:14Z",
        "updatedAt" : "2015-03-11T14:10:14Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "26b7fbeedfb2602475f98451bd4ace9381bf0db7",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +25,29 @@const qualifiedToken string = \"(\" + kubeChar + extendedKubeChar + \"*)?\" + kubeChar\n\nconst LabelValueFmt string = \"((\" + kubeChar + extendedKubeChar + \"*)?\" + kubeChar + \")?\"\n\nvar labelValueRegexp = regexp.MustCompile(\"^\" + LabelValueFmt + \"$\")"
  },
  {
    "id" : "7f68f9ff-664b-4651-ab08-d559da6ee58a",
    "prId" : 4898,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6411367b-cbd5-4eaa-a71c-3f0cb2597c84",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "minor: the \"qualified\" in \"qualified name\" means it has the prefix.  That makes the name awkward here.  I'd prefer qnameCharFmt, qnameExtCharFmt, and qnameTokenFmt as generic regex variable names\n",
        "createdAt" : "2015-03-06T17:11:40Z",
        "updatedAt" : "2015-03-06T17:11:40Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "26b7fbeedfb2602475f98451bd4ace9381bf0db7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +23,27 @@const kubeChar string = \"[A-Za-z0-9]\"\nconst extendedKubeChar string = \"[-A-Za-z0-9_.]\"\nconst qualifiedToken string = \"(\" + kubeChar + extendedKubeChar + \"*)?\" + kubeChar\n\nconst LabelValueFmt string = \"((\" + kubeChar + extendedKubeChar + \"*)?\" + kubeChar + \")?\""
  },
  {
    "id" : "b9559792-3236-4337-870b-ee79cb31caa1",
    "prId" : 4898,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a5f9d14-a1f0-4d4a-aa18-d804d78765ec",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "You have a problem conflating label and qnames, yet you use DNS's length for qname? :)\n",
        "createdAt" : "2015-03-06T17:13:45Z",
        "updatedAt" : "2015-03-06T17:13:45Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "26b7fbeedfb2602475f98451bd4ace9381bf0db7",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +45,49 @@\nfunc IsQualifiedName(value string) bool {\n\treturn (len(value) <= DNS1123SubdomainMaxLength && qualifiedNameRegexp.MatchString(value))\n}\n"
  },
  {
    "id" : "54a4a076-d8f7-4ee2-9d32-0a4e30f5db8a",
    "prId" : 2514,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23c72f95-b013-4316-acd3-3929c9eb5c8c",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "check if all references to 952 are removed by this PR, and delete dead code if so.\n",
        "createdAt" : "2014-11-25T22:15:17Z",
        "updatedAt" : "2014-12-01T20:30:47Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "01ef5cc8-54bd-4af0-8262-79354ef67cb9",
        "parentId" : "23c72f95-b013-4316-acd3-3929c9eb5c8c",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "952 is still used by services - I did not want to mix that change with this.\n",
        "createdAt" : "2014-11-25T23:57:46Z",
        "updatedAt" : "2014-12-01T20:30:47Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "89875ef09d5358d096863527cc9b99a558d7636d",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +57,61 @@}\n\nconst dns952LabelFmt string = \"[a-z]([-a-z0-9]*[a-z0-9])?\"\n\nvar dns952LabelRegexp = regexp.MustCompile(\"^\" + dns952LabelFmt + \"$\")"
  }
]