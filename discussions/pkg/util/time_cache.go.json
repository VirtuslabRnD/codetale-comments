[
  {
    "id" : "3a922bb1-5d97-45d1-8d7d-c59ad0e156bd",
    "prId" : 3444,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e37c97b5-2c65-43a5-9024-26adaa612a94",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "The desired behavior is for this to block until fillOrWait returns?\n",
        "createdAt" : "2015-01-14T01:34:44Z",
        "updatedAt" : "2015-01-14T02:09:20Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "9d1c9817-bbc9-4cc1-b15c-ead44c6366ea",
        "parentId" : "e37c97b5-2c65-43a5-9024-26adaa612a94",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "No, until the anonymous function called via go returns.\n",
        "createdAt" : "2015-01-14T01:36:23Z",
        "updatedAt" : "2015-01-14T02:09:20Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "7713f936-3a4b-4ceb-90fd-68b5189ac8a0",
        "parentId" : "e37c97b5-2c65-43a5-9024-26adaa612a94",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "You deferred `c.inFlightLock.Unlock()` in fillOrWait. Therefore, the anonymous function can't continue until fillOrWait returns.\n",
        "createdAt" : "2015-01-14T01:39:06Z",
        "updatedAt" : "2015-01-14T02:09:20Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "1e9fdee5-9c48-46ad-9957-f56057f62b6f",
        "parentId" : "e37c97b5-2c65-43a5-9024-26adaa612a94",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Sorry, I misunderstood your question. Yes, the anonymous function can't finish until after fillOrWait returns. This is on purpose.\n",
        "createdAt" : "2015-01-14T01:41:52Z",
        "updatedAt" : "2015-01-14T02:09:20Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "30be0eeac7853f979656238bdbfbadad852036b0",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +126,130 @@\n\t\t// Remove in flight entry\n\t\tc.inFlightLock.Lock()\n\t\tdefer c.inFlightLock.Unlock()\n\t\tdelete(c.inFlight, key)"
  }
]