[
  {
    "id" : "0dc456b3-443b-42d7-9654-0d1cff7ed1c4",
    "prId" : 911,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08e44dc6-5449-4daa-b56d-2c2f9ff667bb",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "here, too.\n",
        "createdAt" : "2014-08-15T17:14:39Z",
        "updatedAt" : "2014-08-15T18:12:14Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c07a0f524377b3ac00177946c9808ab8acb8cd0",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@See the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage util"
  },
  {
    "id" : "b4939cd4-6b09-4d31-879a-2bad4bca44e2",
    "prId" : 856,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "729d6dc1-169c-49ac-8406-cc1f3d9b4c46",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "the time.Time is embedded, so you still get all the methods.\n",
        "createdAt" : "2014-08-19T00:18:40Z",
        "updatedAt" : "2014-08-19T00:18:40Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b9eeb053-9901-475a-8d73-b2c1f32de5f3",
        "parentId" : "729d6dc1-169c-49ac-8406-cc1f3d9b4c46",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "How is this different from \"type Time time.Time\" ?\n",
        "createdAt" : "2014-08-19T00:21:06Z",
        "updatedAt" : "2014-08-19T00:21:06Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "768fcc8b-ec33-4142-8371-1770a0f723e6",
        "parentId" : "729d6dc1-169c-49ac-8406-cc1f3d9b4c46",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think that form would be preferable (omits verbose .Time when using the time), but I thought @pmorie had a reason it didn't work?\n",
        "createdAt" : "2014-08-19T00:23:52Z",
        "updatedAt" : "2014-08-19T00:23:52Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0c00865f-9fba-4dfb-9bbb-e2aedcacf9c2",
        "parentId" : "729d6dc1-169c-49ac-8406-cc1f3d9b4c46",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I'm mostly asking because I don't know go well enough.\n\nOn Mon, Aug 18, 2014 at 5:24 PM, Daniel Smith notifications@github.com\nwrote:\n\n> In pkg/util/time.go:\n> \n> > @@ -0,0 +1,97 @@\n> > +package util\n> > +\n> > +import (\n> > -   \"encoding/json\"\n> > -   \"time\"\n> >   +)\n> >   +\n> >   +// Time is a wrapper around time.Time which supports correct\n> >   +// marshaling to YAML and JSON.  Wrappers are provided for many\n> >   +// of the factory methods that the time package offers.\n> >   +type Time struct {\n> \n> I think that form would be preferable (omits verbose .Time when using the\n> time), but I thought @pmorie https://github.com/pmorie had a reason it\n> didn't work?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/856/files#r16390826\n> .\n",
        "createdAt" : "2014-08-19T00:26:44Z",
        "updatedAt" : "2014-08-19T00:26:44Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "14bcd2f7-12a9-4720-a6a3-e1bc0b8a7b67",
        "parentId" : "729d6dc1-169c-49ac-8406-cc1f3d9b4c46",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Upon thinking about it, i think we can probably change this @thockin\n@lavalamp. I'll try it out. I too am still learning golang.\n\nOn Monday, August 18, 2014, Tim Hockin notifications@github.com wrote:\n\n> In pkg/util/time.go:\n> \n> > @@ -0,0 +1,97 @@\n> > +package util\n> > +\n> > +import (\n> > -   \"encoding/json\"\n> > -   \"time\"\n> >   +)\n> >   +\n> >   +// Time is a wrapper around time.Time which supports correct\n> >   +// marshaling to YAML and JSON.  Wrappers are provided for many\n> >   +// of the factory methods that the time package offers.\n> >   +type Time struct {\n> \n> I'm mostly asking because I don't know go well enough.\n> … <#147eba8dab1c6af0_>\n> On Mon, Aug 18, 2014 at 5:24 PM, Daniel Smith <notifications@github.com\n> <javascript:_e(%7B%7D,'cvml','notifications@github.com');>> wrote: In\n> pkg/util/time.go: > @@ -0,0 +1,97 @@ > +package util > + > +import ( > +\n> \"encoding/json\" > + \"time\" > +) > + > +// Time is a wrapper around\n> time.Time which supports correct > +// marshaling to YAML and JSON.\n> Wrappers are provided for many > +// of the factory methods that the time\n> package offers. > +type Time struct { I think that form would be preferable\n> (omits verbose .Time when using the time), but I thought @pmorie\n> https://github.com/pmorie https://github.com/pmorie had a reason it\n> didn't work? -- Reply to this email directly or view it on GitHub <\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/856/files#r16390826>\n> .\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/856/files#r16390897\n> .\n",
        "createdAt" : "2014-08-19T00:28:39Z",
        "updatedAt" : "2014-08-19T00:28:39Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "eabf1d6e-aad0-4a48-9a10-1df04c2752f0",
        "parentId" : "729d6dc1-169c-49ac-8406-cc1f3d9b4c46",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Cool, yeah, if possible it would be better.\n",
        "createdAt" : "2014-08-19T00:34:14Z",
        "updatedAt" : "2014-08-19T00:34:14Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "c69160059b887ac6cfcaf2ef7769b185d87d301b",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@// marshaling to YAML and JSON.  Wrappers are provided for many\n// of the factory methods that the time package offers.\ntype Time struct {\n\ttime.Time\n}"
  }
]