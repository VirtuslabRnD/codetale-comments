[
  {
    "id" : "22ec9ded-1284-4aa6-9568-c535a807bd44",
    "prId" : 1593,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25fb4a89-7a95-41c4-af16-6b901785ed83",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Nit: I do not approve of this, it means folks can't do `if el, ok := err.(ErrorList)` to access the insides of the error list. Needs at least a reversing function. I won't block on this since I realize you're just moving it.\n",
        "createdAt" : "2014-10-06T20:16:26Z",
        "updatedAt" : "2014-10-06T20:16:26Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "779bdc23-5e4e-4a7f-9fef-481ac86816e2",
        "parentId" : "25fb4a89-7a95-41c4-af16-6b901785ed83",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Fair point.  Let me take a look at alternatives.\n",
        "createdAt" : "2014-10-06T20:17:59Z",
        "updatedAt" : "2014-10-06T20:17:59Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "58bad6a0-b67e-4fcf-b39b-52d939987d2f",
        "parentId" : "25fb4a89-7a95-41c4-af16-6b901785ed83",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Do you have a suggestion that prevents an empty ErrorList from being interpreted as a non-nil error?\n",
        "createdAt" : "2014-10-06T20:29:42Z",
        "updatedAt" : "2014-10-06T20:29:42Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "cf06081e-c662-4777-be0b-8eab2da0535b",
        "parentId" : "25fb4a89-7a95-41c4-af16-6b901785ed83",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Let's see... Easiest is to just make errorListInternal public (called ErrorListErr?).\n\nMore extensive:\n- Delete the ErrorList.ToError() function\n- Remove errorListInternal, and move its Error() function to be on ErrorList\n- Make a `func ToError(errs []error) error` function that returns nil if errs is nil, otherwise an ErrorList\n- I don't feel bad about making folks pass around []error until they want to collapse into a single error, because ErrorList is not really a helpful type at the moment-- it's actually more typing than []error and doesn't offer any features besides ToError.\n",
        "createdAt" : "2014-10-06T21:14:01Z",
        "updatedAt" : "2014-10-06T21:14:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "e87bac8a-01e8-4d52-944c-1326187428f0",
        "parentId" : "25fb4a89-7a95-41c4-af16-6b901785ed83",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I could get behind this last part, but I'd like to get this in so I can charge ahead on more important stuff.  File a bug and we can do this.  Deal?\n",
        "createdAt" : "2014-10-06T23:56:24Z",
        "updatedAt" : "2014-10-06T23:56:24Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "e04e25e1-a9c5-47e1-9363-4f78ee7f3e6d",
        "parentId" : "25fb4a89-7a95-41c4-af16-6b901785ed83",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Sure, I'll file a bug. That's why I said it was just a nit.\n",
        "createdAt" : "2014-10-06T23:57:34Z",
        "updatedAt" : "2014-10-06T23:57:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "954f274f-6d14-448b-b9b9-237102244b33",
        "parentId" : "25fb4a89-7a95-41c4-af16-6b901785ed83",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Great.  Merge away if you're happy :)\n\nOn Mon, Oct 6, 2014 at 4:57 PM, Daniel Smith notifications@github.com\nwrote:\n\n> In pkg/util/error_list.go:\n> \n> > -   if len(list) == 0 {\n> > -       return \"\"\n> > -   }\n> > -   if len(list) == 1 {\n> > -       return list[0].Error()\n> > -   }\n> > -   result := fmt.Sprintf(\"[%s\", list[0].Error())\n> > -   for i := 1; i < len(list); i++ {\n> > -       result += fmt.Sprintf(\", %s\", list[i].Error())\n> > -   }\n> > -   result += \"]\"\n> > -   return result\n> >   +}\n> >   +\n> >   +// ToError converts an ErrorList into a \"normal\" error, or nil if the list is empty.\n> >   +func (list ErrorList) ToError() error {\n> \n> Sure, I'll file a bug. That's why I said it was just a nit.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/1593/files#r18493632\n> .\n",
        "createdAt" : "2014-10-06T23:59:48Z",
        "updatedAt" : "2014-10-06T23:59:48Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e83211840d10cdd555cc8592efce19e10b24e07",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@\n// ToError converts an ErrorList into a \"normal\" error, or nil if the list is empty.\nfunc (list ErrorList) ToError() error {\n\tif len(list) == 0 {\n\t\treturn nil"
  }
]