[
  {
    "id" : "bf4048ec-27c5-4613-842b-48dfc148cb1e",
    "prId" : 102576,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102576#pullrequestreview-677559199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcc62917-cbc9-4b06-8dfc-46f1f3ebf699",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "nit: I would probably move `fd.Close` in a defer after opening the file and and assumning no errors were thrown. ",
        "createdAt" : "2021-06-04T17:56:25Z",
        "updatedAt" : "2021-06-04T17:56:25Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "9392fbc3-e563-4333-958e-3076d3904f14",
        "parentId" : "bcc62917-cbc9-4b06-8dfc-46f1f3ebf699",
        "authorId" : "9d24241f-6d25-4b9f-9d9c-8e5aed00c39d",
        "body" : "This looks like a deliberate decision in the original implementation. The comment right above that (line 96) says:\r\n```\r\n// Close directory, because windows won't remove opened directory.\r\n```\r\nif we were to defer instead, the fd would be closed after the remove() call, which could introduce issues on Windows systems.",
        "createdAt" : "2021-06-07T15:16:17Z",
        "updatedAt" : "2021-06-07T15:16:17Z",
        "lastEditedBy" : "9d24241f-6d25-4b9f-9d9c-8e5aed00c39d",
        "tags" : [
        ]
      },
      {
        "id" : "04bc9ddb-14e2-4676-9d21-20196d32d1c0",
        "parentId" : "bcc62917-cbc9-4b06-8dfc-46f1f3ebf699",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "ah okay. ",
        "createdAt" : "2021-06-07T15:21:16Z",
        "updatedAt" : "2021-06-07T15:21:16Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "01bb0f86b02b6bb4461be861a87012a9f82de2ee",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +95,99 @@\n\t// Close directory, because windows won't remove opened directory.\n\tfd.Close()\n\n\t// Remove directory."
  },
  {
    "id" : "ea1e43ba-2243-4714-9174-0da132c857a7",
    "prId" : 102576,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102576#pullrequestreview-684249720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1338dffa-8e96-4a43-96a1-7755ffae21d4",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "clarify the behavior when files/folders under this path do cross filesystems... is an error returned? can some folders still be removed before that error is returned?",
        "createdAt" : "2021-06-14T15:36:27Z",
        "updatedAt" : "2021-06-14T15:36:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a63361e8-8fa6-4bff-8c6f-151c934e1b06",
        "parentId" : "1338dffa-8e96-4a43-96a1-7755ffae21d4",
        "authorId" : "9d24241f-6d25-4b9f-9d9c-8e5aed00c39d",
        "body" : "Thanks, I've expanded on these comments, and also added an OWNERS file for the `removeall` package.",
        "createdAt" : "2021-06-15T16:43:48Z",
        "updatedAt" : "2021-06-15T16:43:48Z",
        "lastEditedBy" : "9d24241f-6d25-4b9f-9d9c-8e5aed00c39d",
        "tags" : [
        ]
      }
    ],
    "commit" : "01bb0f86b02b6bb4461be861a87012a9f82de2ee",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +124,128 @@// from another filesystem. It removes everything it can but returns the first\n// error it encounters. If the path does not exist, it returns nil (no error).\nfunc RemoveDirsOneFilesystem(mounter mount.Interface, path string) error {\n\treturn RemoveAllOneFilesystemCommon(mounter, path, syscall.Rmdir)\n}"
  },
  {
    "id" : "26b0e178-aa73-4074-9638-0d1328e203c8",
    "prId" : 102576,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102576#pullrequestreview-694364190",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5eb16764-00a3-4672-b124-d1f2a6d8d41b",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "who is the right sig to own this package? it looks like everything under pkg/util bubbles to pkg/owners, which doesn't seem right",
        "createdAt" : "2021-06-14T15:37:17Z",
        "updatedAt" : "2021-06-14T15:37:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "948dee12-0ff6-46f6-8b24-a1d8d92c71ab",
        "parentId" : "5eb16764-00a3-4672-b124-d1f2a6d8d41b",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "sig-storage should be the right sig to own the `removeall` package. But it is just one file.",
        "createdAt" : "2021-06-15T15:58:28Z",
        "updatedAt" : "2021-06-15T15:58:28Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "89f2de1a-159f-4046-bd3a-8806b6de0832",
        "parentId" : "5eb16764-00a3-4672-b124-d1f2a6d8d41b",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "cc @msau42 @jsafrane does sig-storage being approver for `removeall` package seems reasonable ?",
        "createdAt" : "2021-06-28T16:17:51Z",
        "updatedAt" : "2021-06-28T16:17:51Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "5857873a-0050-4bf3-93ef-d8d7179b6b3c",
        "parentId" : "5eb16764-00a3-4672-b124-d1f2a6d8d41b",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "only storage related logic appears to use this function so I think sig-storage as owners makes sense",
        "createdAt" : "2021-06-28T20:26:44Z",
        "updatedAt" : "2021-06-28T20:27:03Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "01bb0f86b02b6bb4461be861a87012a9f82de2ee",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +23,27 @@\t\"syscall\"\n\n\t\"k8s.io/mount-utils\"\n)\n"
  }
]