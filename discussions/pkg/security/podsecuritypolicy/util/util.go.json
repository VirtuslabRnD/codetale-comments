[
  {
    "id" : "77d9def3-907b-40a2-a554-911e23a5dde5",
    "prId" : 92006,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92006#pullrequestreview-436769761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "573003c1-763a-4873-8e26-e808bae63459",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "oh, add `if s.Secret != nil { return false }`, with accompanying tests that show a projected secret volume source returns false",
        "createdAt" : "2020-06-24T14:48:44Z",
        "updatedAt" : "2020-06-24T16:09:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "86489499-893d-453e-a31a-c81c5ab7f3d9",
        "parentId" : "573003c1-763a-4873-8e26-e808bae63459",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "that's right.",
        "createdAt" : "2020-06-24T15:37:18Z",
        "updatedAt" : "2020-06-24T16:09:43Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "613a71271768df45f0558cd0828068ae792e0856",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +245,249 @@\nfunc IsOnlyServiceAccountTokenSources(v *api.ProjectedVolumeSource) bool {\n\tfor _, s := range v.Sources {\n\t\t// reject any projected source that does not match any of our expected source types\n\t\tif s.ServiceAccountToken == nil && s.ConfigMap == nil && s.DownwardAPI == nil {"
  },
  {
    "id" : "ee5365a1-9d99-4b7a-8511-3c4ad8424f3a",
    "prId" : 92006,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92006#pullrequestreview-436825998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "468eb41a-316c-4b46-8b25-3423a8b56e7a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "one last bit, to be future-proof against additional projected sources in the future, return false if this is not a configmap/serviceaccounttoken/downwardAPI source (with a unit test that rejects an empty projected source):\r\n\r\n```go\r\n// reject any projected source that does not match any of our expected source types\r\nif s.ServiceAccountToken == nil && s.ConfigMap == nil && s.DownwardAPI == nil {\r\n  return false\r\n}\r\n```",
        "createdAt" : "2020-06-24T15:46:06Z",
        "updatedAt" : "2020-06-24T16:09:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "7570e750-92e5-418e-b5f0-9e2a0bbe6722",
        "parentId" : "468eb41a-316c-4b46-8b25-3423a8b56e7a",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "done",
        "createdAt" : "2020-06-24T16:09:38Z",
        "updatedAt" : "2020-06-24T16:09:43Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      },
      {
        "id" : "cdf7dabd-fe4d-4ce6-8dcc-da8f444dff9e",
        "parentId" : "468eb41a-316c-4b46-8b25-3423a8b56e7a",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "wait, this is not future proof:\r\n\r\nthis volume source will be allowed.\r\n\r\n```go\r\nSecret: &api.SecretProjection{},\r\nConfigMap: &api.ConfigMapProjection{\r\n    LocalObjectReference: api.LocalObjectReference{\r\n        Name: \"kube-root-ca.crt\",\r\n    },\r\n    Items: []api.KeyToPath{\r\n        {\r\n            Key:  \"ca.crt\",\r\n            Path: \"ca.crt\",\r\n         },\r\n       },\r\n   },\r\n},\r\n```\r\n",
        "createdAt" : "2020-06-24T16:17:08Z",
        "updatedAt" : "2020-06-24T16:21:41Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      },
      {
        "id" : "47411e63-f5ad-4bd8-97b8-4d16046da375",
        "parentId" : "468eb41a-316c-4b46-8b25-3423a8b56e7a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the `if s.Secret != nil { return false }` covers that case",
        "createdAt" : "2020-06-24T16:34:24Z",
        "updatedAt" : "2020-06-24T16:34:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d118a362-f0a9-42da-89ae-d8c5d6d96ac6",
        "parentId" : "468eb41a-316c-4b46-8b25-3423a8b56e7a",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "right. how is this future-proof if we need to add every new projected source here along with secret?\r\n\r\nwe need something smarter in case we forgot this place when new source added.",
        "createdAt" : "2020-06-24T16:39:08Z",
        "updatedAt" : "2020-06-24T16:41:17Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      },
      {
        "id" : "33428d75-5779-40d2-9dcf-98bd486c0a4e",
        "parentId" : "468eb41a-316c-4b46-8b25-3423a8b56e7a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "API validation disallows more than one projected source in a single item:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/apis/core/validation/validation.go#L1084-L1086",
        "createdAt" : "2020-06-24T16:40:55Z",
        "updatedAt" : "2020-06-24T16:40:55Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "736d46aa-1afc-429b-ac81-74e7ff437f75",
        "parentId" : "468eb41a-316c-4b46-8b25-3423a8b56e7a",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "ah. then `if s.Secret != nil { return false` is not needed. thanks. PTAL.\r\n\r\n",
        "createdAt" : "2020-06-24T16:45:09Z",
        "updatedAt" : "2020-06-24T16:45:45Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "613a71271768df45f0558cd0828068ae792e0856",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +265,269 @@\t\t\t}\n\t\t}\n\t}\n\treturn true\n}"
  },
  {
    "id" : "113088ec-1555-4a6c-84a2-84be2c181a99",
    "prId" : 52799,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52799#pullrequestreview-91313748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98aff345-cb75-48e6-80ae-786e546c9714",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Is this faster than `reflect.DeepEqual`? Otherwise, just use DeepEqual.",
        "createdAt" : "2018-01-24T19:46:19Z",
        "updatedAt" : "2018-01-24T19:46:27Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "5b4ded36-a1ed-4bc6-b55a-b4ee00a6c61e",
        "parentId" : "98aff345-cb75-48e6-80ae-786e546c9714",
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "I believe that yes, it's faster. Also this is what @brendanburns and @smarterclayton asked me to do earlier: https://github.com/kubernetes/kubernetes/pull/52799#discussion_r146095101",
        "createdAt" : "2018-01-24T20:08:50Z",
        "updatedAt" : "2018-01-24T20:08:50Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      }
    ],
    "commit" : "09333b3a5d6b0f59272708a9e95bbe4b1493030d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +226,230 @@// EqualStringSlices compares string slices for equality. Slices are equal when\n// their sizes and elements on similar positions are equal.\nfunc EqualStringSlices(a, b []string) bool {\n\tif len(a) != len(b) {\n\t\treturn false"
  },
  {
    "id" : "40df7eae-d7ea-40c5-9b7b-49651fb82765",
    "prId" : 50212,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50212#pullrequestreview-57350538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba5c797d-4c91-497f-a476-09138a7ff7fb",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "I'm having a lot of trouble reasoning about when this condition would be hit. Can you add an example of a path and prefix that this applies to?",
        "createdAt" : "2017-08-18T17:38:49Z",
        "updatedAt" : "2017-08-26T01:39:30Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "1c101af0-2549-4a75-ad48-a869d4b50430",
        "parentId" : "ba5c797d-4c91-497f-a476-09138a7ff7fb",
        "authorId" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "body" : "The test case `match child directory` checks this condition and fails when this if is commented out:\r\n`true == hasPathPrefix(\"/foo/bar\", \"/foo/\")` \r\n\r\nExplanation/walkthrough\r\n```\r\ns = \"/foo/bar\" after trim\r\npathPrefix = \"/foo\" after trim\r\n\r\nHasPrefix check passes\r\n\r\npathPrefixLength = 4\r\n\r\nlengths don't match so continue\r\n\r\ns[4:5] is `/` which equals \"/\" which validates that `/foo/bar` is a valid child directory.\r\n```\r\ni'll add a comment to clarify this.  ",
        "createdAt" : "2017-08-19T13:44:11Z",
        "updatedAt" : "2017-08-26T01:39:30Z",
        "lastEditedBy" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ec738a8ec415f6c626a4737b304dec518372ed5",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +213,217 @@\t}\n\n\tif s[pathPrefixLength:pathPrefixLength+1] == \"/\" {\n\t\t// The next character in s is a path segment boundary\n\t\t// Check this instead of normalizing pathPrefix to avoid allocating on every call"
  }
]