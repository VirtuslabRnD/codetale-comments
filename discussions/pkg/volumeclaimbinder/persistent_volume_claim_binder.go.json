[
  {
    "id" : "93bed491-6640-4b86-a3e8-1035378acd3b",
    "prId" : 9282,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b379218-96a1-47b2-8968-4124b7204695",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "@bgrant0607 re: API changes - how breaking is removing a phase in your eyes?  Should we press to get this in before 1.0?\n",
        "createdAt" : "2015-06-05T05:24:22Z",
        "updatedAt" : "2015-06-05T05:24:22Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "b37afb0c-41db-406f-ab34-a41ccba1bc2a",
        "parentId" : "3b379218-96a1-47b2-8968-4124b7204695",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "My feeling is \"not very breaking\" which means we could drop that phase after 1.0 without much impact\n",
        "createdAt" : "2015-06-05T05:24:50Z",
        "updatedAt" : "2015-06-05T05:24:50Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "627dd86b958e074fc5f7fa7bae4869b191ca2478",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +159,163 @@\t// available volumes await a claim\n\tcase api.VolumeAvailable:\n\t\t// TODO:  remove api.VolumePending phase altogether\n\t\t_, exists, err := volumeIndex.Get(volume)\n\t\tif err != nil {"
  },
  {
    "id" : "36c90627-77cf-4437-97eb-21cf23ab102e",
    "prId" : 7529,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17777068-0bfe-491d-a6f1-1731b6a9d75b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Is this a sufficient test?  I think it's probably an OK sentinel, but i want to ask so you make sure you're happy with it.\n",
        "createdAt" : "2015-05-12T19:04:05Z",
        "updatedAt" : "2015-05-13T18:46:54Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "68d74d70-8b5c-495d-897e-acbff27ce0a9",
        "parentId" : "17777068-0bfe-491d-a6f1-1731b6a9d75b",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "I moved the comment for transferring \"actuals\" to this line and added a bit more that states checking for these accessModes is sufficient to know if we've already set Status on PVC or not.\n",
        "createdAt" : "2015-05-12T19:12:48Z",
        "updatedAt" : "2015-05-13T18:46:54Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b29c569ffb58489cf367f8ba00dac855d12549f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +270,274 @@\t\t// Volumes cannot have zero AccessModes, so checking that a claim has access modes\n\t\t// is sufficient to tell us if these values have already been set.\n\t\tif len(claim.Status.AccessModes) == 0 {\n\t\t\tclaim.Status.Phase = api.ClaimBound\n\t\t\tclaim.Status.AccessModes = volume.Spec.AccessModes"
  },
  {
    "id" : "fae383b3-2e25-4db1-8ede-de9ab9df3563",
    "prId" : 6105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55a6f4ae-63d5-4117-8eb0-eb6e632c1a38",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "regarding pkgs - does it make sense to put all this into pkg/persistentvolume or something?  It's minor, but this feels like a component of some larger things..\n",
        "createdAt" : "2015-04-13T20:11:28Z",
        "updatedAt" : "2015-04-27T19:00:09Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "ce0c447f-28ad-4411-b484-5627190444c1",
        "parentId" : "55a6f4ae-63d5-4117-8eb0-eb6e632c1a38",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "This binder (and the proposed PersistentVolumeControllerManager for provisioning) are intended to be controller plugins.  I think packaging them beneath /controllers/{plugin-name} like Volumes makes sense.\n",
        "createdAt" : "2015-04-13T20:15:17Z",
        "updatedAt" : "2015-04-27T19:00:09Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "dcd1ca71-9f8b-484f-b38d-e2d6fe7b1b73",
        "parentId" : "55a6f4ae-63d5-4117-8eb0-eb6e632c1a38",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "What is the plan for controller plugins?\n",
        "createdAt" : "2015-04-20T17:25:41Z",
        "updatedAt" : "2015-04-27T19:00:09Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "b5f5b2fa-c4e6-47f7-bb93-d3a4a7323620",
        "parentId" : "55a6f4ae-63d5-4117-8eb0-eb6e632c1a38",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "I can package this anywhere you'd like in the meantime, until we have plugins.\n\nI assume, though don't know, that controller plugins would be packaged like volume plugins.  \n",
        "createdAt" : "2015-04-20T17:51:19Z",
        "updatedAt" : "2015-04-27T19:00:09Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "beacd8722af7d1c7e6a72360fdbee00b75e03d4b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@*/\n\npackage volumeclaimbinder\n\nimport ("
  },
  {
    "id" : "da3493df-31f3-4c96-8810-754fb32a38b1",
    "prId" : 6105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70c57d38-6dea-49f6-aa2f-40b11deef289",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "useless blank line\n",
        "createdAt" : "2015-04-13T20:22:59Z",
        "updatedAt" : "2015-04-27T19:00:09Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "beacd8722af7d1c7e6a72360fdbee00b75e03d4b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +272,276 @@\treturn nil\n}\n\nfunc syncClaimStatus(binderClient binderClient, volume *api.PersistentVolume, claim *api.PersistentVolumeClaim) (err error) {\n\tvolumeRef, err := api.GetReference(volume)"
  },
  {
    "id" : "6f53ca5e-3d56-4eef-abf0-193e7905d0af",
    "prId" : 6105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12ddbdc0-f656-4850-9f36-41a1a7159c43",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "no deleteClaim hook?  Can you comment why?\n",
        "createdAt" : "2015-04-27T17:52:24Z",
        "updatedAt" : "2015-04-27T19:00:09Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "4bd06677-7ba6-4cd7-9128-3f801a1ada9c",
        "parentId" : "12ddbdc0-f656-4850-9f36-41a1a7159c43",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "comments added but this line not touched (no collapse)\n",
        "createdAt" : "2015-04-27T18:59:07Z",
        "updatedAt" : "2015-04-27T19:00:09Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "beacd8722af7d1c7e6a72360fdbee00b75e03d4b",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +84,88 @@\t\tframework.ResourceEventHandlerFuncs{\n\t\t\tAddFunc:    binder.addClaim,\n\t\t\tUpdateFunc: binder.updateClaim,\n\t\t\t// no DeleteFunc needed.  a claim requires no clean-up.\n\t\t\t// the missing claim itself is the release of the resource."
  },
  {
    "id" : "c26aa7eb-61e3-4f35-8f3f-771cdbb27880",
    "prId" : 6105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a47147e-c98d-407d-bd90-b3f6257e1071",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Will this trigger an immediate new event which will run this function again?  Comment?\n",
        "createdAt" : "2015-04-27T17:56:49Z",
        "updatedAt" : "2015-04-27T19:00:09Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "beacd8722af7d1c7e6a72360fdbee00b75e03d4b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +206,210 @@\t\t// a change in state will trigger another update through this controller.\n\t\t// each pass through this controller evaluates current phase and decides whether or not to change to the next phase\n\t\tvolume, err := binderClient.UpdatePersistentVolumeStatus(volume)\n\t\tif err != nil {\n\t\t\t// Rollback to previous phase"
  },
  {
    "id" : "2989160d-05f4-42ad-b61b-07afd6c177e9",
    "prId" : 6105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7a32c14-84c4-4463-ad5a-ea0d825de845",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "don't you want to validate that the VolumeRef points back to this volume?  Or is that done somewhere else?  Comment\n",
        "createdAt" : "2015-04-27T18:01:52Z",
        "updatedAt" : "2015-04-27T19:00:09Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "a5c2d049-196a-45f6-9ebc-65ddf62853a0",
        "parentId" : "a7a32c14-84c4-4463-ad5a-ea0d825de845",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "Do you mean that I should have code that validates that the volume just bound to is the volume passed into the func?  Or do you mean that the claim should check that its bound volume still exists?\n\nIf the latter, that would go in the control loop for the claim.  I had a check like that very early on but thought it would be an egregious violation of protocol to have a volume deleted from beneath a claim and that the error would come up through the pod.\n",
        "createdAt" : "2015-04-27T18:52:50Z",
        "updatedAt" : "2015-04-27T19:00:09Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "0bf365fe-79ec-4f53-a086-0580c1af32f0",
        "parentId" : "a7a32c14-84c4-4463-ad5a-ea0d825de845",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "It was a question, not a directive.  This tests that \"I\" have a reference to \"him\", and that \"he\" exists, and that \"he\" has a reference to \"someone\".  I was asking if it is worthwhile to check that \"someone\" is \"me\" ?\n",
        "createdAt" : "2015-04-27T20:04:13Z",
        "updatedAt" : "2015-04-27T20:04:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "beacd8722af7d1c7e6a72360fdbee00b75e03d4b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +183,187 @@\t\t\t\t\t// and does a rollback as needed on claim.Status\n\t\t\t\t\tsyncClaimStatus(binderClient, volume, claim)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif errors.IsNotFound(err) {"
  },
  {
    "id" : "13411275-7248-410e-aa8a-1170d5cb78a0",
    "prId" : 6105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfb6c7b1-7487-4c74-822a-f5c8eaa6b5f5",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "As per the binding sub-resource discussion, I sense that we have this backwards.  PersVolume.Status should host a ClaimRef and PersVolumeClaim.Spec should host a VolumeName (not ref, I think).\n",
        "createdAt" : "2015-04-27T18:15:02Z",
        "updatedAt" : "2015-04-27T19:00:09Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "beacd8722af7d1c7e6a72360fdbee00b75e03d4b",
    "line" : 247,
    "diffHunk" : "@@ -1,1 +245,249 @@\t\t// make a binding reference to the claim.\n\t\t// triggers update of the volume in this controller, which builds claim status\n\t\tvolume.Spec.ClaimRef = claimRef\n\t\tvolume, err = binderClient.UpdatePersistentVolume(volume)\n\t\tif err == nil {"
  },
  {
    "id" : "c1c3a204-8bc7-4242-97e2-428d6159df0b",
    "prId" : 6105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f05f6c6a-42dc-49d8-8a5c-b00ac1546ad9",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Just to be clear, at this point the admin must remove and recreate the PV object or set Phase manually, yes?  There's no other way to revive it?\n",
        "createdAt" : "2015-04-27T20:01:47Z",
        "updatedAt" : "2015-04-27T20:01:47Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "cc6fd10e-3f76-44ba-943f-effd57248fbb",
        "parentId" : "f05f6c6a-42dc-49d8-8a5c-b00ac1546ad9",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "Yes, the current reclamation process is manual.\n",
        "createdAt" : "2015-04-27T20:13:29Z",
        "updatedAt" : "2015-04-27T20:13:29Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "beacd8722af7d1c7e6a72360fdbee00b75e03d4b",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +197,201 @@\t\t\treturn fmt.Errorf(\"PersistentVolume[%s] expected to be bound but found nil claimRef: %+v\", volume)\n\t\t} else {\n\t\t\t// TODO: implement Recycle method on plugins\n\t\t}\n\t}"
  }
]