[
  {
    "id" : "b3f72d4f-3f13-409f-8cd4-e4490ec60183",
    "prId" : 24304,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb3ba252-c45d-4cb3-a999-7add12dd3e78",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I think we'll want to provide people the option for two different methods.  Something like `InteractiveAuthentication(io.Reader, io.Writer, io.Writer) error` and `NonInteractiveAuthentication() error`.  I'm pretty sure that @bobbyrullo's flow doesn't require user interaction in refresh cases (no matter where the refresh token actually lives).\n",
        "createdAt" : "2016-04-22T12:19:09Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "ab2c00ab-5f57-4837-9318-cc7f20cdf943",
        "parentId" : "cb3ba252-c45d-4cb3-a999-7add12dd3e78",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "With that split, how would the caller know which one to call?\n\nI'm guessing that the standard case for Interactive would be Stdin/Stdout. The provider plugin can create its own Reader/Writer if it needs them.\n\nI know that we pass through `os.Stdin` as the \"fallbackReader\" in the interactive basic-auth case. Are their expected cases where we think Stdin/Stdout won't be the right place for an interactive login?\n",
        "createdAt" : "2016-04-22T16:19:30Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "43bb8c39-aa3b-4dd9-a0c9-624c8232d908",
        "parentId" : "cb3ba252-c45d-4cb3-a999-7add12dd3e78",
        "authorId" : "fd53b5b7-d15c-4210-9d0a-9f1a5bf7b5e4",
        "body" : "@deads2k: For the refresh case I don't think we need to add anything to the interface: The `RoundTripper` that is returned by `WrapTransport` should be able to handle that as necessary (eg, when short term creds are about to expire/have expired), as long as it can get a Persister. \n\nSo I think we only need a method for getting the initial credentials, which I would think it's safe to assume, will always require some sort of user interaction.\n",
        "createdAt" : "2016-04-22T21:50:53Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "fd53b5b7-d15c-4210-9d0a-9f1a5bf7b5e4",
        "tags" : [
        ]
      },
      {
        "id" : "fb9891f5-9f36-413f-b704-96e90dac4dec",
        "parentId" : "cb3ba252-c45d-4cb3-a999-7add12dd3e78",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "@deads2k: Ping on this question. Do we need to disambiguate the flows at the plugin level? Can't we just defer to letting the plugin modify its config however it likes (either interactively or non-interactively)?\n",
        "createdAt" : "2016-05-02T21:55:02Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "abc6e418-c214-47e9-819d-b5adc9d2a74f",
        "parentId" : "cb3ba252-c45d-4cb3-a999-7add12dd3e78",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> @deads2k: Ping on this question. Do we need to disambiguate the flows at the plugin level? Can't we just defer to letting the plugin modify its config however it likes (either interactively or non-interactively)?\n\nI feel like I'm missing something.  If this requires user interaction, they'll need an `io.Reader`, right?  I could live with a `nil` reader meaning, \"non-interactive\", but they'll still need one, right?\n",
        "createdAt" : "2016-05-03T12:31:47Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "1c089685-9dc6-427b-b895-a0aa9bffb0ca",
        "parentId" : "cb3ba252-c45d-4cb3-a999-7add12dd3e78",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "I see. You're thinking we may want the option to interactively login through the command line (w/ Readers/Writers provided by kubectl)?\n\nNeither @bobbyrullo's use case or mine would need this right now. Can we defer on adding this to the plugin until we have a user?\n",
        "createdAt" : "2016-05-03T16:15:02Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "2cadce42-82e3-48f4-849e-54986f02f877",
        "parentId" : "cb3ba252-c45d-4cb3-a999-7add12dd3e78",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Neither @bobbyrullo's use case or mine would need this right now. Can we defer on adding this to the plugin until we have a user?\n\nIf you update the comment to say that it \"must not require user interaction\", then ok.\n",
        "createdAt" : "2016-05-03T19:00:18Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "d0f257d4-2207-4020-b1ae-1bd820d27ef3",
        "parentId" : "cb3ba252-c45d-4cb3-a999-7add12dd3e78",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "I'm expecting that it _might_ require user interaction, just not through the command line (passing an io.Reader). I'll change the comment to try to reflect this. I'm mostly going to defer its usage (and any necessary changes) to @bobbyrullo, because it isn't currently used anywhere.\n",
        "createdAt" : "2016-05-03T22:11:44Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "a820e0c1-464d-4965-bc4e-96f55d87cf9a",
        "parentId" : "cb3ba252-c45d-4cb3-a999-7add12dd3e78",
        "authorId" : "fd53b5b7-d15c-4210-9d0a-9f1a5bf7b5e4",
        "body" : "yes that's true - for my case, we'll spawn a browser.\n",
        "createdAt" : "2016-05-03T23:35:06Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "fd53b5b7-d15c-4210-9d0a-9f1a5bf7b5e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "13a7d92d0f50e877edeb4225f73ae106b33bf152",
    "line" : null,
    "diffHunk" : "@@ -1,1 +33,37 @@\t// Login allows the plugin to initialize its configuration. It must not\n\t// require direct user interaction.\n\tLogin() error\n}\n"
  },
  {
    "id" : "1080755d-06b3-4324-9f01-29518fa9d41c",
    "prId" : 24304,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8f1e417-c464-4592-8cfb-405cadf5f2bb",
        "parentId" : null,
        "authorId" : "fd53b5b7-d15c-4210-9d0a-9f1a5bf7b5e4",
        "body" : "Please also document what these args are for - especially the super generic ones - the string and the map.\n",
        "createdAt" : "2016-05-03T21:02:37Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "fd53b5b7-d15c-4210-9d0a-9f1a5bf7b5e4",
        "tags" : [
        ]
      },
      {
        "id" : "65e62b0a-a2e8-4dc1-8704-47964ad64085",
        "parentId" : "f8f1e417-c464-4592-8cfb-405cadf5f2bb",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "Done.\n",
        "createdAt" : "2016-05-03T22:35:39Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "13a7d92d0f50e877edeb4225f73ae106b33bf152",
    "line" : null,
    "diffHunk" : "@@ -1,1 +41,45 @@//  persister allows the plugin to save updated configuration.\ntype Factory func(clusterAddress string, config map[string]string, persister AuthProviderConfigPersister) (AuthProvider, error)\n\n// AuthProviderConfigPersister allows a plugin to persist configuration info\n// for just itself."
  },
  {
    "id" : "478c8a10-f089-43a1-948c-b038687175a7",
    "prId" : 24304,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "baf0499d-eff2-4ac8-82ac-cb88ed31e9d5",
        "parentId" : null,
        "authorId" : "fd53b5b7-d15c-4210-9d0a-9f1a5bf7b5e4",
        "body" : "Would it make sense for the config to be a map[string]interface so that it could support lists of strings as well? I just ran into this case in the work I am doing; I could just as well have a comma-separated list of strings but it's not ideal.\n\nSorry for saying this so late in the game but it didn't occur to me until I started working with it.\n",
        "createdAt" : "2016-05-04T20:05:21Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "fd53b5b7-d15c-4210-9d0a-9f1a5bf7b5e4",
        "tags" : [
        ]
      },
      {
        "id" : "a1722f92-b88d-44cc-94bb-9b0796c7d165",
        "parentId" : "baf0499d-eff2-4ac8-82ac-cb88ed31e9d5",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "I'd eventually (post 1.3) be interested in making the config use runtime.RawExtension/runtime.Object so that plugins could have strongly typed config. Would you be okay w/ `map[string]string` until we move to that? If not, I'd be fine with you making the changes in a following PR.\n",
        "createdAt" : "2016-05-04T23:09:02Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "f6b86119-6630-4567-a258-5dc145dffe86",
        "parentId" : "baf0499d-eff2-4ac8-82ac-cb88ed31e9d5",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Would it make sense for the config to be a map[string]interface so that it could support lists of strings as well?\n\n`map[string]interface{}` won't work well because we're trying to serialize the data out into json.\n\n`map[string]string` works well, `map[string][]string` also works fine.  I don't have any objection to tweaking the type to `map[string][]string` in this pull or in a **very** close followup.  The datatype change would be a breaking serialization change for kubeconfig files, so we'd have to change it before anyone gets a chance to use it.\n",
        "createdAt" : "2016-05-05T12:36:41Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "f6fda947-ece6-455f-8951-ceef6b456ffe",
        "parentId" : "baf0499d-eff2-4ac8-82ac-cb88ed31e9d5",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "Hmmm. I'd rather keep it as `map[string]string` then.\n\n@bobbyrullo, how bad would it be for your case to just use `strings.Split` for a comma-separated list of strings?\n",
        "createdAt" : "2016-05-05T17:26:51Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "dd29eda3-d981-4a44-b3f7-959f437b5889",
        "parentId" : "baf0499d-eff2-4ac8-82ac-cb88ed31e9d5",
        "authorId" : "fd53b5b7-d15c-4210-9d0a-9f1a5bf7b5e4",
        "body" : "`strings.Split` is just fine.\n",
        "createdAt" : "2016-05-06T00:27:27Z",
        "updatedAt" : "2016-05-08T01:15:30Z",
        "lastEditedBy" : "fd53b5b7-d15c-4210-9d0a-9f1a5bf7b5e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "13a7d92d0f50e877edeb4225f73ae106b33bf152",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +41,45 @@//  persister allows the plugin to save updated configuration.\ntype Factory func(clusterAddress string, config map[string]string, persister AuthProviderConfigPersister) (AuthProvider, error)\n\n// AuthProviderConfigPersister allows a plugin to persist configuration info\n// for just itself."
  }
]