[
  {
    "id" : "db8162e9-5d05-490f-9909-a8b2ff26faf4",
    "prId" : 6729,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d7b0508-9d66-4333-9217-0802cd58fdf1",
        "parentId" : null,
        "authorId" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "body" : "Is the \"bool\" return value needed? You could have the presence of the Response object be the signal to override the response.\n",
        "createdAt" : "2015-04-13T17:55:09Z",
        "updatedAt" : "2015-04-13T22:21:23Z",
        "lastEditedBy" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "tags" : [
        ]
      },
      {
        "id" : "efa6f9f7-6597-4699-9800-6e5a2723e5db",
        "parentId" : "3d7b0508-9d66-4333-9217-0802cd58fdf1",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "In general in Go I prefer not to overload the meaning of nil, but in this case I don't think it would be an issue.\n\n----- Original Message -----\n\n> > +\n> > +// chaosrt provides the ability to perform simulations of HTTP client\n> > failures\n> > +// under the Golang http.Transport interface.\n> > +type chaosrt struct {\n> > -   rt     http.RoundTripper\n> > -   notify ChaosNotifier\n> > -   c      []Chaos\n> >   +}\n> >   +\n> >   +// Chaos intercepts requests to a remote HTTP endpoint and can inject\n> >   arbitrary\n> >   +// failures.\n> >   +type Chaos interface {\n> > -   // Intercept should return true if the normal flow should be skipped, and\n> >   the\n> > -   // return response and error used instead. Modifications to the request\n> >   will\n> > -   // be ignored, but may be used to make decisions about types of failures.\n> > -   Intercept(req *http.Request) (bool, *http.Response, error)\n> \n> Is the \"bool\" return value needed? You could have the presence of the\n> Response object be the signal to override the response.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/6729/files#r28261402\n",
        "createdAt" : "2015-04-13T17:56:28Z",
        "updatedAt" : "2015-04-13T22:21:23Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "4d6fc753-ebea-4a66-abb4-1cf5299ee638",
        "parentId" : "3d7b0508-9d66-4333-9217-0802cd58fdf1",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I remember now - we also want to emulate errors, so the return code would check (response != nil || err != nil) which is sufficiently un-Golike that I felt the bool was more accurate.\n\n----- Original Message -----\n\n> In general in Go I prefer not to overload the meaning of nil, but in this\n> case I don't think it would be an issue.\n> \n> ----- Original Message -----\n> \n> > > +\n> > > +// chaosrt provides the ability to perform simulations of HTTP client\n> > > failures\n> > > +// under the Golang http.Transport interface.\n> > > +type chaosrt struct {\n> > > - rt     http.RoundTripper\n> > > - notify ChaosNotifier\n> > > - c      []Chaos\n> > >   +}\n> > >   +\n> > >   +// Chaos intercepts requests to a remote HTTP endpoint and can inject\n> > >   arbitrary\n> > >   +// failures.\n> > >   +type Chaos interface {\n> > > - // Intercept should return true if the normal flow should be skipped,\n> > >   and\n> > >   the\n> > > - // return response and error used instead. Modifications to the request\n> > >   will\n> > > - // be ignored, but may be used to make decisions about types of\n> > >   failures.\n> > > - Intercept(req *http.Request) (bool, *http.Response, error)\n> > \n> > Is the \"bool\" return value needed? You could have the presence of the\n> > Response object be the signal to override the response.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/GoogleCloudPlatform/kubernetes/pull/6729/files#r28261402\n",
        "createdAt" : "2015-04-13T22:01:55Z",
        "updatedAt" : "2015-04-13T22:21:23Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "200229c3-156c-4891-998b-d7475fde8711",
        "parentId" : "3d7b0508-9d66-4333-9217-0802cd58fdf1",
        "authorId" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "body" : "Fair enough. \n",
        "createdAt" : "2015-04-13T22:14:15Z",
        "updatedAt" : "2015-04-13T22:21:23Z",
        "lastEditedBy" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca335d7be9f4507ff509b4f838e1d337b776ec55",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@\t// return response and error used instead. Modifications to the request will\n\t// be ignored, but may be used to make decisions about types of failures.\n\tIntercept(req *http.Request) (bool, *http.Response, error)\n}\n"
  },
  {
    "id" : "a06ffd27-ec14-4675-8c51-3fc13c2e521a",
    "prId" : 6729,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5ce2496-eaea-4943-b128-a2bdf62d72e3",
        "parentId" : null,
        "authorId" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "body" : "May be nice to make the error message clear that it's a Chaos-induced reset.\n",
        "createdAt" : "2015-04-13T17:57:34Z",
        "updatedAt" : "2015-04-13T22:21:23Z",
        "lastEditedBy" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "tags" : [
        ]
      },
      {
        "id" : "85f8ee5f-ee50-4771-a3c9-ca9c7d3244f9",
        "parentId" : "a5ce2496-eaea-4943-b128-a2bdf62d72e3",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "For cases where we detect based on the error type (which simulating real client errors is important) it becomes harder to do that.  ChaosNotifier is really supposed to bear that burden - you should see the message from Chaos in the log, followed by either something printed by the core component (at high debug levels) or the proper behavior.\n\n----- Original Message -----\n\n> > -   if c.s.Float64() < c.p {\n> > -       return c.Chaos.Intercept(req)\n> > -   }\n> > -   return false, nil, nil\n> >   +}\n> >   +\n> >   +func (c pIntercept) String() string {\n> > -   return fmt.Sprintf(\"P{%f %s}\", c.p, c.Chaos)\n> >   +}\n> >   +\n> >   +// ErrSimulatedConnectionResetByPeer emulates the golang net error when a\n> >   connection\n> >   +// is reset by a peer.\n> >   +// TODO: make this more accurate\n> >   +// TODO: add other error types\n> >   +// TODO: add a helper for returning multiple errors randomly.\n> >   +var ErrSimulatedConnectionResetByPeer = Error{errors.New(\"connection reset\n> >   by peer\")}\n> \n> May be nice to make the error message clear that it's a Chaos-induced reset.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/6729/files#r28261672\n",
        "createdAt" : "2015-04-13T17:59:54Z",
        "updatedAt" : "2015-04-13T22:21:23Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca335d7be9f4507ff509b4f838e1d337b776ec55",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +127,131 @@// TODO: add other error types\n// TODO: add a helper for returning multiple errors randomly.\nvar ErrSimulatedConnectionResetByPeer = Error{errors.New(\"connection reset by peer\")}\n\n// Error returns the nested error when C() is invoked."
  }
]