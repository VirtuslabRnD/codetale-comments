[
  {
    "id" : "85655a55-2d2f-4caa-bda7-8718c60147a1",
    "prId" : 30250,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fbb1126-dd63-45cb-8360-5c4f14b9e870",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "hard-coding api.Codecs into this method is fairly wrong - especially since you use nothing but JSON.  You should just be using your own CodecFactory here and only register json.  \n",
        "createdAt" : "2016-08-08T23:17:36Z",
        "updatedAt" : "2016-08-16T05:08:14Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e4976376-f15f-4fa2-882b-9a6123190fe4",
        "parentId" : "0fbb1126-dd63-45cb-8360-5c4f14b9e870",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "This is just a move of what was already there. Would this be an easy fix, or something for another PR?\n",
        "createdAt" : "2016-08-09T17:33:25Z",
        "updatedAt" : "2016-08-16T05:08:14Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "06a793be-d1b7-4018-b60c-96bda5ec4d3d",
        "parentId" : "0fbb1126-dd63-45cb-8360-5c4f14b9e870",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "That's fine for another PR\n",
        "createdAt" : "2016-08-09T17:50:15Z",
        "updatedAt" : "2016-08-16T05:08:14Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5235bccec245c80a729b72cb805b1db6e5f3944",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +241,245 @@\n// ContentConfig returns a restclient.ContentConfig for dynamic types.\nfunc ContentConfig() restclient.ContentConfig {\n\t// TODO: it's questionable that this should be using anything other than unstructured schema and JSON\n\tcodec := dynamicCodec{}"
  },
  {
    "id" : "bf6a1412-57d9-4af4-aa49-1d0867171a53",
    "prId" : 27733,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "159e8eb3-d4e2-4173-bf79-4773b50462c4",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Registering v1.ListOptions in the Policy group will fix #27622. But for thirdparty resources, we still need this versionedParameterEncoderWithV1Fallback codec.\n\nFor the record, API server always treats query parameters sent to a thirdparty resource endpoint as v1: https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/thirdpartyresourcedata/codec.go#L557\n",
        "createdAt" : "2016-06-20T23:12:57Z",
        "updatedAt" : "2016-06-22T20:19:02Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "a0915cfd-ed7a-44c8-b37e-918f845fba00",
        "parentId" : "159e8eb3-d4e2-4173-bf79-4773b50462c4",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Add as comment: \"But for thirdparty resources, we still need this versionedParameterEncoderWithV1Fallback codec. For the record, currently API server always treats query parameters sent to a thirdparty resource endpoint as v1\"\n",
        "createdAt" : "2016-06-22T17:31:43Z",
        "updatedAt" : "2016-06-22T20:19:02Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a6c1ad81-4542-4b92-834c-57f69686a613",
        "parentId" : "159e8eb3-d4e2-4173-bf79-4773b50462c4",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Added to the comment on `VersionedParameterEncoderWithV1Fallback`\n",
        "createdAt" : "2016-06-22T17:44:00Z",
        "updatedAt" : "2016-06-22T20:19:02Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9f07925be40db7b9cfe9c6aa81bbec857a58792",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +272,276 @@var defaultParameterEncoder runtime.ParameterCodec = parameterCodec{}\n\ntype versionedParameterEncoderWithV1Fallback struct{}\n\nfunc (versionedParameterEncoderWithV1Fallback) EncodeParameters(obj runtime.Object, to unversioned.GroupVersion) (url.Values, error) {"
  },
  {
    "id" : "c112aca9-6d56-4725-a6c2-b2c0654819a5",
    "prId" : 27733,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "330f05c4-e01e-4491-b52d-812aa699fc45",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "extra line and godoc\n",
        "createdAt" : "2016-06-21T01:09:20Z",
        "updatedAt" : "2016-06-22T20:19:02Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "c67a5dd9-00d9-4a63-acd9-2894ecc22fc9",
        "parentId" : "330f05c4-e01e-4491-b52d-812aa699fc45",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Extra line added. I think our tradition is keeping the godoc in the interface so I'll omit the godoc.\n",
        "createdAt" : "2016-06-21T04:23:37Z",
        "updatedAt" : "2016-06-22T20:19:02Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9f07925be40db7b9cfe9c6aa81bbec857a58792",
    "line" : null,
    "diffHunk" : "@@ -1,1 +283,287 @@}\n\nfunc (versionedParameterEncoderWithV1Fallback) DecodeParameters(parameters url.Values, from unversioned.GroupVersion, into runtime.Object) error {\n\treturn errors.New(\"DecodeParameters not implemented on versionedParameterEncoderWithV1Fallback\")\n}"
  },
  {
    "id" : "f39a2f0a-db5d-4a12-a935-3a9cd0bcde47",
    "prId" : 26493,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c607a89-2556-42f8-b909-c5ea0ecfff64",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "How about using a wrapper?\n",
        "createdAt" : "2016-06-03T17:29:30Z",
        "updatedAt" : "2016-06-03T18:22:59Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "f0f49f14-a427-4f3b-abdb-56d6d99c4e79",
        "parentId" : "8c607a89-2556-42f8-b909-c5ea0ecfff64",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Maybe for 1.3 the earlier change of passing an optional (nil or not)\nparameter codec moves us in the right direction.  There's probably a lot of\nchanges we can make to dynamic client as it is used in more places (and we\nstart needing to worry about its performance) - I'd be ok with a TODO and\nfollow up in 1.4\n\nOn Jun 3, 2016, at 1:29 PM, Chao Xu notifications@github.com wrote:\n\nIn pkg/client/typed/dynamic/client.go\nhttps://github.com/kubernetes/kubernetes/pull/26493#discussion_r65745313:\n\n> ```\n>   cl:       c.cl,\n>   resource: resource,\n>   ns:       namespace,\n> ```\n> \n>   }\n> - return rc\n>   +}\n>   +\n>   +// ParameterCodec wraps a parameterCodec around the Client.\n>   +func (c *Client) ParameterCodec(parameterCodec runtime.ParameterCodec) *ClientWithParameterCodec {\n\nHow about using a wrapper?\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/kubernetes/kubernetes/pull/26493/files/9e63bbb93387ea03634786063bfdf45197aaf47b#r65745313,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ABG_p18MkMzsOPWtZ7ZA_qXFVuIVfhNlks5qIGSLgaJpZM4IpLXf\n.\n",
        "createdAt" : "2016-06-03T17:34:04Z",
        "updatedAt" : "2016-06-03T18:22:59Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "98268472-83e1-4743-844d-ca3920b44ac8",
        "parentId" : "8c607a89-2556-42f8-b909-c5ea0ecfff64",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "re: mutating in place: make a copy of the resource client, set the codec,\nand return that?\n\nre: parameter codec should vary with group, not resource: I agree, which is\nwhy I was so hard on the version of this that passed the codec into the\nlist call.\n\nOn Fri, Jun 3, 2016 at 10:34 AM, Clayton Coleman notifications@github.com\nwrote:\n\n> In pkg/client/typed/dynamic/client.go\n> https://github.com/kubernetes/kubernetes/pull/26493#discussion_r65746009\n> :\n> \n> > ```\n> >     cl:       c.cl,\n> >     resource: resource,\n> >     ns:       namespace,\n> > }\n> > ```\n> > -   return rc\n> >   +}\n> >   +\n> >   +// ParameterCodec wraps a parameterCodec around the Client.\n> >   +func (c *Client) ParameterCodec(parameterCodec runtime.ParameterCodec) *ClientWithParameterCodec {\n> \n> Maybe for 1.3 the earlier change of passing an optional (nil or not)\n> parameter codec moves us in the right direction. There's probably a lot of\n> changes we can make to dynamic client as it is used in more places (and we\n> start needing to worry about its performance) - I'd be ok with a TODO and\n> follow up in 1.4 On Jun 3, 2016, at 1:29 PM, Chao Xu <\n> notifications@github.com> wrote: In pkg/client/typed/dynamic/client.go <#26493\n> (comment)\n> https://github.com/kubernetes/kubernetes/pull/26493#discussion_r65745313\n> \n> > :\n> > cl: c.cl, resource: resource, ns: namespace, } + return rc +} + +//\n> > ParameterCodec wraps a parameterCodec around the Client. +func (c *Client)\n> > ParameterCodec(parameterCodec runtime.ParameterCodec)\n> > *ClientWithParameterCodec {\n> > How about using a wrapper? — You are receiving this because you were\n> > mentioned. Reply to this email directly, view it on GitHub <\n> > https://github.com/kubernetes/kubernetes/pull/26493/files/9e63bbb93387ea03634786063bfdf45197aaf47b#r65745313>,\n> > or mute the thread <\n> > https://github.com/notifications/unsubscribe/ABG_p18MkMzsOPWtZ7ZA_qXFVuIVfhNlks5qIGSLgaJpZM4IpLXf>\n> > .\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/26493/files/9e63bbb93387ea03634786063bfdf45197aaf47b#r65746009,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AAnglj7HMrYqSQcCK75X2YBK8fsbGCqaks5qIGWYgaJpZM4IpLXf\n> .\n",
        "createdAt" : "2016-06-03T17:38:07Z",
        "updatedAt" : "2016-06-03T18:22:59Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "afb27f59-b086-4f6b-88b9-4feb4ba28f90",
        "parentId" : "8c607a89-2556-42f8-b909-c5ea0ecfff64",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Making a copy sounds heavy, sort of defeated effort of the client pool.\n\nWhat's wrong with this wrapper approach?\n",
        "createdAt" : "2016-06-03T17:42:19Z",
        "updatedAt" : "2016-06-03T18:22:59Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "5271964e-a8f7-41b3-ab35-d71758b062e8",
        "parentId" : "8c607a89-2556-42f8-b909-c5ea0ecfff64",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "A wrapper is fine, too-- basically the same :).\n\nOn Fri, Jun 3, 2016 at 10:42 AM, Chao Xu notifications@github.com wrote:\n\n> In pkg/client/typed/dynamic/client.go\n> https://github.com/kubernetes/kubernetes/pull/26493#discussion_r65747184\n> :\n> \n> > ```\n> >     cl:       c.cl,\n> >     resource: resource,\n> >     ns:       namespace,\n> > }\n> > ```\n> > -   return rc\n> >   +}\n> >   +\n> >   +// ParameterCodec wraps a parameterCodec around the Client.\n> >   +func (c *Client) ParameterCodec(parameterCodec runtime.ParameterCodec) *ClientWithParameterCodec {\n> \n> Make a copy sounds heavy, sort of defeated effort of the client pool.\n> \n> What's wrong with this wrapper approach?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/26493/files/9e63bbb93387ea03634786063bfdf45197aaf47b#r65747184,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AAnglkhzK9hVVrNAbQvQYmV0BdPZhWx_ks5qIGeHgaJpZM4IpLXf\n> .\n",
        "createdAt" : "2016-06-03T17:43:31Z",
        "updatedAt" : "2016-06-03T18:22:59Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "06f49f7ca79989084058a31b6a6ac751ddf30064",
    "line" : null,
    "diffHunk" : "@@ -1,1 +97,101 @@\n// ParameterCodec wraps a parameterCodec around the Client.\nfunc (c *Client) ParameterCodec(parameterCodec runtime.ParameterCodec) *ClientWithParameterCodec {\n\treturn &ClientWithParameterCodec{\n\t\tclient:         c,"
  },
  {
    "id" : "e3c4cad0-af0f-409e-bc48-78c97efc124e",
    "prId" : 20351,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df8142d5-81fa-4a57-93fc-b95b13e22463",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Shallow copy is OK?\n",
        "createdAt" : "2016-01-29T22:51:53Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c45d4e78-28e7-4db9-88ff-9b5bc79ce86a",
        "parentId" : "df8142d5-81fa-4a57-93fc-b95b13e22463",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Precedent: https://github.com/kubernetes/kubernetes/blob/master/pkg/client/unversioned/discovery_client.go#L220\n",
        "createdAt" : "2016-01-29T22:57:15Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "e463becc-5f27-4ca3-b63f-1ce35ee1544e",
        "parentId" : "df8142d5-81fa-4a57-93fc-b95b13e22463",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We should probably be careful on reviews of client config to ensure that holds true.  Probably worth it to add a copy the next time we change client.config.\n",
        "createdAt" : "2016-02-03T03:35:14Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c58302b5b77071f1c798483fc7c44ae8b58378a",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@func NewClient(conf *client.Config) (*Client, error) {\n\t// avoid changing the original config\n\tconfCopy := *conf\n\tconf = &confCopy\n"
  },
  {
    "id" : "4ecee7d8-d74e-40e7-9f7f-0d29747a97c4",
    "prId" : 20351,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cfd9ebc-d3f3-45f6-ab9f-de99a05b651a",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I thought the unversioned client had constants for this...  grep legacyAPIPath, not a big deal though\n",
        "createdAt" : "2016-02-10T22:40:51Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "6f65e52d-330a-42a0-a096-ba1316f61c4b",
        "parentId" : "3cfd9ebc-d3f3-45f6-ab9f-de99a05b651a",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "It does. It's not public. I'm not sure I'd want that public anyways. Would you like it to be a constant instead of a literal?\n",
        "createdAt" : "2016-02-10T22:42:29Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "c54a6747-cccb-422c-8156-0a1120420be1",
        "parentId" : "3cfd9ebc-d3f3-45f6-ab9f-de99a05b651a",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Is it possible to refactor https://github.com/kubernetes/kubernetes/blob/master/pkg/client/unversioned/helper.go#L382 to basically not do the codec piece... mostly, I worry about drift on the default qps and burst values.\n",
        "createdAt" : "2016-02-10T22:43:06Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "1412a05d-3922-42db-90af-82e6a45b18a3",
        "parentId" : "3cfd9ebc-d3f3-45f6-ab9f-de99a05b651a",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "It's not the codec that is the problem. It only sets it if it's non-nil. It's the checking for the registered group. The whole point of this client is that the group doesn't have to be registered.\n",
        "createdAt" : "2016-02-10T22:45:58Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "6a3cb305-209c-4545-ac85-c42f18d1c847",
        "parentId" : "3cfd9ebc-d3f3-45f6-ab9f-de99a05b651a",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "ok\n",
        "createdAt" : "2016-02-10T22:51:29Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "8359cf12-f6cf-44bf-9d88-0c0f16c5addb",
        "parentId" : "3cfd9ebc-d3f3-45f6-ab9f-de99a05b651a",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "That being said, I wouldn't mind if you filed an issue to unify some of this later and assign that to me.\n",
        "createdAt" : "2016-02-11T19:32:20Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c58302b5b77071f1c798483fc7c44ae8b58378a",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@\n\tif conf.APIPath == \"\" {\n\t\tconf.APIPath = \"/api\"\n\t}\n"
  },
  {
    "id" : "e0c27a11-1ea5-4835-8a95-3ee1b8282400",
    "prId" : 20351,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbec291e-ab39-4ced-970e-a2e028670e07",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I kind of expected to see an interface for what ResourceClient supports to help mock use cases...  will have to look at what you have in rest of PR but recording it here as I read through...\n",
        "createdAt" : "2016-02-10T22:46:00Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "7017a1d3-131c-42db-97f9-cc01b42cf9de",
        "parentId" : "cbec291e-ab39-4ced-970e-a2e028670e07",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "This was on purpose. Ideally, you shouldn't need a mock. You should be able to have this talk to a fake server, like I did in the unit tests.\n\nIf this had been an interface, and checked in, and someone mocked it for a unit test, we wouldn't be able to change it without breaking their tests. For example, I would not have been able to add DeleteCollections without adding a DeleteCollections to their mock.\n\nI still suspect that everyone will ask for an interface anyways.\n",
        "createdAt" : "2016-02-10T22:49:49Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "8b918edb-de1a-458b-b253-cbeb72b98fb6",
        "parentId" : "cbec291e-ab39-4ced-970e-a2e028670e07",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "A minor nit, I am not sure its worth changing, but `unversioned.APIResource` has the resource, if its namespaced, and the kind... in practice, you ignore kind, it would be cool if we had an object that excluded kind that was passed in here...  \n",
        "createdAt" : "2016-02-18T23:12:49Z",
        "updatedAt" : "2016-02-18T23:12:49Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "0f297919-7c82-499a-9057-3c79b6339f98",
        "parentId" : "cbec291e-ab39-4ced-970e-a2e028670e07",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "I chose this to match what was returned by the Discovery client. I think in practice, it will be less annoying to just reuse what Discovery client gives us.\n",
        "createdAt" : "2016-02-19T17:16:46Z",
        "updatedAt" : "2016-02-19T17:16:46Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c58302b5b77071f1c798483fc7c44ae8b58378a",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +76,80 @@// this client's group and version. If resource is not a namespaced\n// resource, then namespace is ignored.\nfunc (c *Client) Resource(resource *unversioned.APIResource, namespace string) *ResourceClient {\n\treturn &ResourceClient{\n\t\tcl:       c.cl,"
  }
]