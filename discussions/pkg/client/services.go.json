[
  {
    "id" : "c5120b33-cde0-4d20-a9b7-1c5b046ae136",
    "prId" : 5587,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43e665d8-77b7-41ac-86fb-1f55d9d51507",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Why is this needed?  I think this is a bug in higher level code, and doesn't look right here.\n",
        "createdAt" : "2015-03-20T21:35:21Z",
        "updatedAt" : "2015-03-20T21:35:21Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "0e852f51-5e73-46dc-bc35-453693990f35",
        "parentId" : "43e665d8-77b7-41ac-86fb-1f55d9d51507",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "If not here, then we will need such conditions everywhere at higher level code.\n\n```\nIf (apiVersion = v1beta3 && ns == \"\") {\n  ns = api.NamespaceDefault\n}\nservicesInterface = client.services(ns)\n```\n\nIs that better?\n",
        "createdAt" : "2015-03-20T21:49:30Z",
        "updatedAt" : "2015-03-20T21:49:30Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "6f972920-1c91-429f-a1b9-e1c34a8b3b8b",
        "parentId" : "43e665d8-77b7-41ac-86fb-1f55d9d51507",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I'm saying that anyone who has an empty string either got it from client input (in which case the server will catch it) or it will be caught lower in the code base.  No one should be passing an empty namespace, ever.  I don't think we need to test in the client (I have a pull incoming which normalizes all our clients now that the server is normalized).\n\n----- Original Message -----\n\n> > @@ -77,7 +77,13 @@ func (c *services) Get(name string) (result\n> > *api.Service, err error) {\n> >  // Create creates a new service.\n> >  func (c *services) Create(svc *api.Service) (result *api.Service, err\n> >  error) {\n> >     result = &api.Service{}\n> > -   err =\n> >   c.r.Post().Namespace(c.ns).Resource(\"services\").Body(svc).Do().Into(result)\n> > -   // v1beta3 does not allow POST without a namespace.\n> > -   needNamespace := !api.PreV1Beta3(c.r.APIVersion())\n> \n> If not here, then we will need such conditions everywhere at higher level\n> code.\n> \n> ```\n> If (apiVersion = v1beta3 && ns == \"\") {\n>   ns = api.NamespaceDefault\n> }\n> servicesInterface = client.services(ns)\n> ```\n> \n> Is that better?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/5587/files#r26879365\n",
        "createdAt" : "2015-03-20T21:52:36Z",
        "updatedAt" : "2015-03-20T21:52:36Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "0448098a-4362-4207-9810-8c74d0ef2dec",
        "parentId" : "43e665d8-77b7-41ac-86fb-1f55d9d51507",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "ok. What do you mean by \"normalizing the server and the client\"?\n",
        "createdAt" : "2015-03-20T22:20:55Z",
        "updatedAt" : "2015-03-20T22:20:55Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "fc7018cb-93b8-48f1-b920-333ba0a4c58f",
        "parentId" : "43e665d8-77b7-41ac-86fb-1f55d9d51507",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The RESTStorage objects and the api_installer now properly check a lot of the conditions. If there is client code that is allowing Namespace to be wrong when it passes to the Services code, we should either fix the client code or reject it on the server (the standard api/rest.go code should do that now).\n\nOpened https://github.com/GoogleCloudPlatform/kubernetes/pull/5738 to clean some of this up.\n\n----- Original Message -----\n\n> > @@ -77,7 +77,13 @@ func (c *services) Get(name string) (result\n> > *api.Service, err error) {\n> >  // Create creates a new service.\n> >  func (c *services) Create(svc *api.Service) (result *api.Service, err\n> >  error) {\n> >     result = &api.Service{}\n> > -   err =\n> >   c.r.Post().Namespace(c.ns).Resource(\"services\").Body(svc).Do().Into(result)\n> > -   // v1beta3 does not allow POST without a namespace.\n> > -   needNamespace := !api.PreV1Beta3(c.r.APIVersion())\n> \n> ok. What do you mean by \"normalizing the server and the client\"?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/5587/files#r26881133\n",
        "createdAt" : "2015-03-20T22:26:22Z",
        "updatedAt" : "2015-03-20T22:26:22Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "1a0a1efc-e74b-471b-b696-4e1a2cdf3ab7",
        "parentId" : "43e665d8-77b7-41ac-86fb-1f55d9d51507",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "ok. Thanks for the explanation!\nI looked at the PR and it looks good.\nThanks for working on it.\n",
        "createdAt" : "2015-03-23T21:10:23Z",
        "updatedAt" : "2015-03-23T21:10:23Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e36bbab3c0ff98046a37725233548e6ca304598",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +79,83 @@\tresult = &api.Service{}\n\t// v1beta3 does not allow POST without a namespace.\n\tneedNamespace := !api.PreV1Beta3(c.r.APIVersion())\n\tnamespace := c.ns\n\tif needNamespace && len(namespace) == 0 {"
  }
]