[
  {
    "id" : "a01dbca9-c775-47c4-9866-a769897b2ada",
    "prId" : 3066,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ddd3f2fb-733c-4cda-8787-7b608a83a93a",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "%+v for both this and the next line?\n\noh, nvm, I guess this is test code\n",
        "createdAt" : "2014-12-19T21:52:36Z",
        "updatedAt" : "2014-12-19T21:52:36Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "abb6632d756957dbfb970dd79fd3e005e3ffbecf",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +130,134 @@\trequestBody := body(c.Request.Body, c.Request.RawBody)\n\tactualQuery := c.handler.RequestReceived.URL.Query()\n\tt.Logf(\"got query: %v\", actualQuery)\n\tt.Logf(\"path: %v\", c.Request.Path)\n\t// We check the query manually, so blank it out so that FakeHandler.ValidateRequest"
  },
  {
    "id" : "dc71e3a2-abce-4e94-b7b8-ba838a22ce44",
    "prId" : 3066,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3cd6ac2-7f0a-4bb0-8b91-70d0abfe0e06",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "nit: s/should in/should be in/\n",
        "createdAt" : "2014-12-19T22:38:26Z",
        "updatedAt" : "2014-12-19T22:38:26Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "abb6632d756957dbfb970dd79fd3e005e3ffbecf",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +163,167 @@}\n\n// buildResourcePath is a convenience function for knowing if a namespace should in a path param or not\nfunc buildResourcePath(namespace, resource string) string {\n\tif len(namespace) > 0 {"
  },
  {
    "id" : "93c9004d-1f91-4c53-9fa7-fcf1b76580c6",
    "prId" : 1540,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9ef9c3d-3fe9-4c6d-80c1-604e381d8d1b",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Is this one supposed to be different from all the others? (NewContext vs NewDefaultContext?)\n",
        "createdAt" : "2014-10-02T18:48:15Z",
        "updatedAt" : "2014-10-02T18:48:15Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a290506c240e7fd012161473d3bff2670aa8f9e",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +303,307 @@\t\t},\n\t}\n\treceivedControllerList, err := c.Setup().ListReplicationControllers(api.NewContext(), labels.Everything())\n\tc.Validate(t, receivedControllerList, err)\n"
  },
  {
    "id" : "5e6500a4-3269-4c03-9aaa-65b981da96b9",
    "prId" : 905,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "348b65cf-ee14-4d4a-9a03-3a36ee008e56",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "My mind is just blown that we have testing function which is returning a `*string`. Yes, it'd be an extra few copies to return just a straight string but this is not a good time or place to be optimizing, and if we _really_ wanted to optimize, we should be tossing around []byte, NOT *string.\n\nSo I would recommend scrolling up to the body function above and making it return something sane.\n",
        "createdAt" : "2014-08-15T01:39:37Z",
        "updatedAt" : "2014-08-15T01:39:37Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "f65e784c-60fd-4528-9bd4-4f17c7455bf7",
        "parentId" : "348b65cf-ee14-4d4a-9a03-3a36ee008e56",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "It appears that the use of the pointer is not to optimize, but so that a nil value can be used as a \"don't care\" value in expectations.\n",
        "createdAt" : "2014-08-21T23:32:28Z",
        "updatedAt" : "2014-08-21T23:32:28Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "42b5c5ee-3cfc-4534-86dd-753a1b996fbb",
        "parentId" : "348b65cf-ee14-4d4a-9a03-3a36ee008e56",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I see; I hate it a tiny fraction less. I still think it should be []byte.\n",
        "createdAt" : "2014-08-21T23:36:53Z",
        "updatedAt" : "2014-08-21T23:36:53Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d02700cc879b034cdac6a02c2f0619d47d6a7f6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +362,366 @@\n\tif expected, received := requestBody, c.handler.RequestBody; expected != nil && *expected != received {\n\t\tt.Errorf(\"bad body for request %#v: expected %s, got %s\", c.Request, *expected, received)\n\t}\n"
  },
  {
    "id" : "47256f00-0ef9-4530-b23f-f3e43c8ebb45",
    "prId" : 205,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c556ee0-2325-4227-b1f2-ecfaee4e2955",
        "parentId" : null,
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "consider alsing making `TestClient` private.\n",
        "createdAt" : "2014-06-24T05:02:05Z",
        "updatedAt" : "2014-06-24T17:08:13Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      },
      {
        "id" : "5378795e-a8e4-49e3-8771-9e1312e3e0f3",
        "parentId" : "4c556ee0-2325-4227-b1f2-ecfaee4e2955",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Done.\n",
        "createdAt" : "2014-06-24T16:43:41Z",
        "updatedAt" : "2014-06-24T17:08:13Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "175e998258c68bf48d36ec4297faaa8d29c3a4e3",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +267,271 @@}\n\ntype testRequest struct {\n\tMethod  string\n\tPath    string"
  },
  {
    "id" : "ec8d378a-c398-4d6d-bd91-bb7ba3dcf47b",
    "prId" : 205,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85a617e4-eddf-4335-9299-e119afaf759a",
        "parentId" : null,
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "same comment here\n",
        "createdAt" : "2014-06-24T05:02:44Z",
        "updatedAt" : "2014-06-24T17:08:13Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      },
      {
        "id" : "45d9213d-ed07-4526-ba0f-42f8d18274d8",
        "parentId" : "85a617e4-eddf-4335-9299-e119afaf759a",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'd feel more comfortable changing this in a separate PR. I don't understand testClient well enough to do it quickly.\n",
        "createdAt" : "2014-06-24T17:06:40Z",
        "updatedAt" : "2014-06-24T17:08:13Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "175e998258c68bf48d36ec4297faaa8d29c3a4e3",
    "line" : 266,
    "diffHunk" : "@@ -1,1 +408,412 @@\tstatus := api.Status{Status: api.StatusWorking}\n\texpectedBody, _ := api.Encode(status)\n\tfakeHandler := util.FakeHandler{\n\t\tStatusCode:   202,\n\t\tResponseBody: string(expectedBody),"
  },
  {
    "id" : "4d48fd73-dafd-4568-bc20-a477f4ef2674",
    "prId" : 189,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60baafd0-0119-4655-b2c6-05434b8da885",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can we stick to the term \"selector\" instead of \"query\"?\n",
        "createdAt" : "2014-06-20T16:55:59Z",
        "updatedAt" : "2014-06-20T17:41:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "02cc404e-8ba3-47b4-8fb1-d87f5306d433",
        "parentId" : "60baafd0-0119-4655-b2c6-05434b8da885",
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "Maybe we can move this to the test instead, instead of doing dynamic validation in the Client Validate method.\n",
        "createdAt" : "2014-06-20T16:58:01Z",
        "updatedAt" : "2014-06-20T17:41:22Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      },
      {
        "id" : "8ed7b3e5-1ae2-48d1-8f42-b91a737a4bf7",
        "parentId" : "60baafd0-0119-4655-b2c6-05434b8da885",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "@lavalamp this refers to the URL query params, rather than the label query, so I think Query is right.\n\n@proppy this is the only way to keep your generic \"validate\" method and make this work.\n",
        "createdAt" : "2014-06-20T17:08:34Z",
        "updatedAt" : "2014-06-20T17:41:22Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "6a862e57-b1e8-478b-a12c-40dbb9c8895e",
        "parentId" : "60baafd0-0119-4655-b2c6-05434b8da885",
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "@brendanburns Yes, I was suggesting you might not want to have `Validate()` check the querystring for this particular test.\n\nAnd do the validation yourself in the test instead.\n",
        "createdAt" : "2014-06-20T17:10:11Z",
        "updatedAt" : "2014-06-20T17:41:22Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      },
      {
        "id" : "5d8c8684-8cae-41dc-9ac5-2773b0c214d0",
        "parentId" : "60baafd0-0119-4655-b2c6-05434b8da885",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Sounds good, I'm OK with that usage of query.\n",
        "createdAt" : "2014-06-20T17:22:27Z",
        "updatedAt" : "2014-06-20T17:41:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "9f4234c8-caa8-426d-a5db-795295517026",
        "parentId" : "60baafd0-0119-4655-b2c6-05434b8da885",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "comments addressed. ptal.\n\nthanks!\n--brendan\n\nOn Fri, Jun 20, 2014 at 10:22 AM, Daniel Smith notifications@github.com\nwrote:\n\n> In pkg/client/client_test.go:\n> \n> > @@ -280,6 +299,11 @@ type TestClient struct {\n> >     server   *httptest.Server\n> >     handler  *util.FakeHandler\n> >     Target   interface{}\n> > -   // For query args, an optional function to validate the contents\n> > -   // useful when the contents can change but still be correct.\n> > -   // Maps from query arg key to validator.\n> > -   // If no validator is present, string equality is used.\n> > -   QueryValidator map[string]func(string, string) bool\n> \n> Sounds good, I'm OK with that usage of query.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/189/files#r14030836\n> .\n",
        "createdAt" : "2014-06-20T17:26:59Z",
        "updatedAt" : "2014-06-20T17:41:22Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "0eb2c472-acab-4c66-953b-daa0bfb0f948",
        "parentId" : "60baafd0-0119-4655-b2c6-05434b8da885",
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "Let me be more explicit about what I was suggesting, you could switch r.Request.Query to be a pointer, and not validate it if it's `nil`.\n\nAnd for that particular test, rather that doing the validation in `Validate()` generically, you do it specifically in your test.\n",
        "createdAt" : "2014-06-20T17:35:19Z",
        "updatedAt" : "2014-06-20T17:41:22Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      },
      {
        "id" : "2bbbf4c9-723f-47bb-8a06-7d33348f633f",
        "parentId" : "60baafd0-0119-4655-b2c6-05434b8da885",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Discussed on IM, but given that a lot of the rest is generic, I prefer sticking w/ the generic approach here, rather than doing manual validation in the individual test.\n",
        "createdAt" : "2014-06-20T17:44:03Z",
        "updatedAt" : "2014-06-20T17:44:03Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "b84cc9c895b62c6102b26a247e852454811f9f55",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +294,298 @@\t// Maps from query arg key to validator.\n\t// If no validator is present, string equality is used.\n\tQueryValidator map[string]func(string, string) bool\n}\n"
  },
  {
    "id" : "4c9e4ce9-9cc0-4de0-9493-9d9aae4ae99d",
    "prId" : 189,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84fb08a3-e63c-4c6e-848e-974e9021a506",
        "parentId" : null,
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "FYI, you could inline that in the TestClient literal.\n",
        "createdAt" : "2014-06-20T17:48:15Z",
        "updatedAt" : "2014-06-20T17:48:15Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "b84cc9c895b62c6102b26a247e852454811f9f55",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +95,99 @@\t}\n\tc.Setup()\n\tc.QueryValidator[\"labels\"] = validateLabels\n\tselector := map[string]string{\"foo\": \"bar\", \"name\": \"baz\"}\n\treceivedPodList, err := c.ListPods(selector)"
  }
]