[
  {
    "id" : "ebb7d0d0-1265-4088-b004-3ad7bf710968",
    "prId" : 7128,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63ef1e8e-587a-47f6-890a-f700e994fc8b",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Why not use ResourcePathWithPrefixAndQueryParams?\n",
        "createdAt" : "2015-04-21T21:44:41Z",
        "updatedAt" : "2015-04-24T08:02:12Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "fde0a782-da44-4c39-97dc-cead34b775a1",
        "parentId" : "63ef1e8e-587a-47f6-890a-f700e994fc8b",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Because there is no namespace in the query\n",
        "createdAt" : "2015-04-22T07:20:42Z",
        "updatedAt" : "2015-04-24T08:02:12Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "cee9218f-bd4e-4b84-8bf5-9f0cd4d5e44c",
        "parentId" : "63ef1e8e-587a-47f6-890a-f700e994fc8b",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Renamed the function to ResourcePathWithPrefixAndNamespaceQuery to remove confusion.\n",
        "createdAt" : "2015-04-24T06:19:19Z",
        "updatedAt" : "2015-04-24T08:02:12Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcc368c7814db8187e37d9958a8ad141226a2551",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +735,739 @@\t\tt.Errorf(\"Expected: %#v, got %#v\", expectedObj, obj)\n\t}\n\trequestURL := testapi.ResourcePathWithPrefix(\"foo/bar\", \"\", \"\", \"baz\")\n\trequestURL += \"?timeout=1s\"\n\tfakeHandler.ValidateRequest(t, requestURL, \"POST\", &reqBody)"
  },
  {
    "id" : "09e52407-4efb-470d-82c9-c57571ff1d16",
    "prId" : 7128,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "647e2b8f-3bb5-4bcb-bf90-18418f50ea9d",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "ResourcePathWithPrefixAndQueryParams?\n",
        "createdAt" : "2015-04-21T21:45:40Z",
        "updatedAt" : "2015-04-24T08:02:12Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "ae8022b5-5a58-48d3-ad04-29bfa9150aa8",
        "parentId" : "647e2b8f-3bb5-4bcb-bf90-18418f50ea9d",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "No. That is not required since there is no namespace in the request.\n",
        "createdAt" : "2015-04-22T07:20:28Z",
        "updatedAt" : "2015-04-24T08:02:12Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "0bae6c40-9b43-4701-bba8-e5059f537f40",
        "parentId" : "647e2b8f-3bb5-4bcb-bf90-18418f50ea9d",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Renamed the function to ResourcePathWithPrefixAndNamespaceQuery to remove confusion.\n",
        "createdAt" : "2015-04-24T06:19:32Z",
        "updatedAt" : "2015-04-24T08:02:12Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcc368c7814db8187e37d9958a8ad141226a2551",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +835,839 @@\t}\n\ttmpStr := string(reqBodyExpected)\n\trequestURL := testapi.ResourcePathWithPrefix(\"foo\", \"bar\", \"\", \"baz\")\n\trequestURL += \"?\" + api.LabelSelectorQueryParam(testapi.Version()) + \"=name%3Dfoo&timeout=1s\"\n\tfakeHandler.ValidateRequest(t, requestURL, \"POST\", &tmpStr)"
  },
  {
    "id" : "b9ea9a91-3523-431d-8953-be57bad66e89",
    "prId" : 7128,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae3f69f9-c745-4fa0-8965-cec879c773a8",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Doesn't this break for non-v1beta3 APIs due to namespace already being appended as a query parameter?\n",
        "createdAt" : "2015-04-21T21:46:02Z",
        "updatedAt" : "2015-04-24T08:02:12Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "5c70e57c-bc02-4ca9-b188-20db865caa3c",
        "parentId" : "ae3f69f9-c745-4fa0-8965-cec879c773a8",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "No. There is no namespace in the query. Look at about 8 lines above this. No namespace is being set.\n",
        "createdAt" : "2015-04-22T07:19:53Z",
        "updatedAt" : "2015-04-24T08:02:12Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcc368c7814db8187e37d9958a8ad141226a2551",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +836,840 @@\ttmpStr := string(reqBodyExpected)\n\trequestURL := testapi.ResourcePathWithPrefix(\"foo\", \"bar\", \"\", \"baz\")\n\trequestURL += \"?\" + api.LabelSelectorQueryParam(testapi.Version()) + \"=name%3Dfoo&timeout=1s\"\n\tfakeHandler.ValidateRequest(t, requestURL, \"POST\", &tmpStr)\n\tif fakeHandler.RequestReceived.Header[\"Authorization\"] == nil {"
  },
  {
    "id" : "c30de418-68ec-4486-b71e-ae772491a102",
    "prId" : 6671,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d72507d9-4c80-4746-bbc6-f9d3dd1455ec",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Maybe I'm dense, but how does this actually test that the client closes the body properly?\n",
        "createdAt" : "2015-04-10T17:47:00Z",
        "updatedAt" : "2015-04-10T17:47:00Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b81cd1b3-b674-4dcd-9873-9c1e5c8cdc68",
        "parentId" : "d72507d9-4c80-4746-bbc6-f9d3dd1455ec",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "It's a bad name - I couldn't find a way to reach into the underlying default transport and determine that multiple TCP session have been opened.\n\n----- Original Message -----\n\n> > @@ -748,6 +742,64 @@ func TestDoRequestNewWay(t *testing.T) {\n> >     }\n> >  }\n> > \n> > +func TestCheckRetryClosesBody(t *testing.T) {\n> \n> Maybe I'm dense, but how does this actually test that the client closes the\n> body properly?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/6671/files#r28165287\n",
        "createdAt" : "2015-04-10T17:47:53Z",
        "updatedAt" : "2015-04-10T17:47:53Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "852ef7b63795218d78f38ef8492f563c48009b30",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +743,747 @@}\n\nfunc TestCheckRetryClosesBody(t *testing.T) {\n\tcount := 0\n\tch := make(chan struct{})"
  },
  {
    "id" : "6a7495ab-fe9c-4d26-a0b0-838215c16a19",
    "prId" : 1893,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c78e39f2-c85d-4dce-98ef-947f07612722",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Thanks for the test, I've been wanting to unit test this method for a while now.\n",
        "createdAt" : "2014-10-20T04:14:55Z",
        "updatedAt" : "2014-10-21T17:54:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb2b15a7976d0a07c71b38b4bc0843a7f835ea40",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +272,276 @@}\n\nfunc TestBody(t *testing.T) {\n\tconst data = \"test payload\"\n"
  },
  {
    "id" : "e3510ccd-9bff-49cb-bbe6-8f51b8242928",
    "prId" : 1782,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "136cbfdc-89ec-43d5-bf2a-88110a1aeb05",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Confusing-- shouldn't this be true for POSTs?\n",
        "createdAt" : "2014-10-28T06:12:27Z",
        "updatedAt" : "2014-10-28T06:12:27Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "39ee523a-b042-491e-950a-c21b09a071b4",
        "parentId" : "136cbfdc-89ec-43d5-bf2a-88110a1aeb05",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We're not doing that today - we should, but it's a larger change and may potentially affect naive clients what expect 200 on success.  We should do that as part of v1beta3.\n\n> On Oct 28, 2014, at 2:12 AM, Daniel Smith notifications@github.com wrote:\n> \n> In pkg/client/request_test.go:\n> \n> > @@ -184,6 +185,9 @@ func TestDoRequestNewWayFile(t *testing.T) {\n> >     } else if !reflect.DeepEqual(obj, expectedObj) {\n> >         t.Errorf(\"Expected: %#v, got %#v\", expectedObj, obj)\n> >     }\n> > -   if wasCreated {\n> > -       t.Errorf(\"expected object was not created\")\n> >   Confusing-- shouldn't this be true for POSTs?\n> \n> â€”\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2014-10-28T13:10:52Z",
        "updatedAt" : "2014-10-28T13:10:52Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5ee171410ba2b6af1b1f4f483edced2548525b8",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +187,191 @@\t}\n\tif wasCreated {\n\t\tt.Errorf(\"expected object was not created\")\n\t}\n\ttmpStr := string(reqBodyExpected)"
  }
]