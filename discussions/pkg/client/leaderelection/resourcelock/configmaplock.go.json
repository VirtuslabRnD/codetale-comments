[
  {
    "id" : "eae3f863-a7c9-497d-9eb3-6d88c5437322",
    "prId" : 44338,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44338#pullrequestreview-33117315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61d9eb92-3fcc-4347-a731-76ac6a2f5e19",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Can we pass [corev1client.ConfigMapInterface](https://github.com/kubernetes/kubernetes/blob/master/pkg/client/clientset_generated/clientset/typed/core/v1/configmap.go#L35) around, i.e., passing Client.ConfigMaps(ConfigMapMeta.Namespace) around? It looks like [federation.ConfigMapInterface](https://github.com/kubernetes/kubernetes/blob/master/federation/client/clientset_generated/federation_clientset/typed/core/v1/configmap.go#L35) has the same methods as corev1client.ConfigMapInterface, so you can reuse the leaderelection code for federation.\r\n\r\n",
        "createdAt" : "2017-04-17T20:22:37Z",
        "updatedAt" : "2017-04-19T13:09:30Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "61464aac-aee9-4d3f-8990-e29d850507be",
        "parentId" : "61d9eb92-3fcc-4347-a731-76ac6a2f5e19",
        "authorId" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "body" : "@caesarxuchao, even though ConfigMapInterface is the same, as they are generated. they are 2 different types today as is evident from below error i got when i passed federation corev1 client.\r\n```\r\n# k8s.io/kubernetes/federation/cmd/federation-controller-manager/app\r\nfederation/cmd/federation-controller-manager/app/controllermanager.go:163: cannot use leaderElectionClient.CoreV1() (type \"k8s.io/kubernetes/federation/client/clientset_generated/federation_clientset/typed/core/v1\".CoreV1Interface) as type \"k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/core/v1\".ConfigMapsGetter in field value:\r\n\t\"k8s.io/kubernetes/federation/client/clientset_generated/federation_clientset/typed/core/v1\".CoreV1Interface does not implement \"k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/core/v1\".ConfigMapsGetter (wrong type for ConfigMaps method)\r\n\t\thave ConfigMaps(string) \"k8s.io/kubernetes/federation/client/clientset_generated/federation_clientset/typed/core/v1\".ConfigMapInterface\r\n\t\twant ConfigMaps(string) \"k8s.io/kubernetes/pkg/client/clientset_generated/clientset/typed/core/v1\".ConfigMapInterface\r\n```\r\nwe should start using client-go, then these types will be unique",
        "createdAt" : "2017-04-17T23:40:58Z",
        "updatedAt" : "2017-04-19T13:09:30Z",
        "lastEditedBy" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "tags" : [
        ]
      },
      {
        "id" : "74065fc8-4cb6-4a1f-85d0-26c2de7f916d",
        "parentId" : "61d9eb92-3fcc-4347-a731-76ac6a2f5e19",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "> we should start using client-go, then these types will be unique\r\n\r\nI don't think so, client-go doesn't include any federation code.\r\n\r\nI saw this error message, it's saying federation corev1 cannot be used as clientset's ConfigMapsGetter, because although the two definitions of ConfigMapInterface are the same, to the compiler, they are two different types.\r\n\r\nHowever, if you pass federation.ConfigMapInterface directly, compiler should accept it as a clientset.ConfigMapInterface, because they have the same methods defined.\r\n\r\nI didn't try it though, so i could be wrong :)",
        "createdAt" : "2017-04-17T23:52:22Z",
        "updatedAt" : "2017-04-19T13:09:30Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "2e80a1d7-5b05-416c-8e3b-b76b1c11c86f",
        "parentId" : "61d9eb92-3fcc-4347-a731-76ac6a2f5e19",
        "authorId" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "body" : "Okie, i will try. thanks for suggestion.",
        "createdAt" : "2017-04-17T23:56:01Z",
        "updatedAt" : "2017-04-19T13:09:30Z",
        "lastEditedBy" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e23f1d5bb4ca7888ff32bd26fd8380bcdd1deeb2",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +36,40 @@\t// ConfigMapMeta object that the Leadercmlector will attempt to lead.\n\tConfigMapMeta metav1.ObjectMeta\n\tClient        corev1client.ConfigMapsGetter\n\tLockConfig    ResourceLockConfig\n\tcm            *v1.ConfigMap"
  },
  {
    "id" : "a5620e06-27d9-4056-aa75-ffd659aef5af",
    "prId" : 42666,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42666#pullrequestreview-97646155",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4940c6d3-d215-41fd-b677-ebbeed1c038f",
        "parentId" : null,
        "authorId" : "2d9afee7-a404-4340-8fd9-d3187ed4f1da",
        "body" : "- [ ] Should \"cmlection\" be \"election?\"",
        "createdAt" : "2017-04-07T12:49:02Z",
        "updatedAt" : "2017-04-28T16:41:50Z",
        "lastEditedBy" : "2d9afee7-a404-4340-8fd9-d3187ed4f1da",
        "tags" : [
        ]
      },
      {
        "id" : "e4101a37-aaf1-4b76-81a3-9f1d489ccaf6",
        "parentId" : "4940c6d3-d215-41fd-b677-ebbeed1c038f",
        "authorId" : "2eb6ad87-e305-458f-a360-22c64806994c",
        "body" : "Fixed this and a few other typos in https://github.com/kubernetes/kubernetes/pull/60055 ",
        "createdAt" : "2018-02-19T20:09:05Z",
        "updatedAt" : "2018-02-19T20:09:16Z",
        "lastEditedBy" : "2eb6ad87-e305-458f-a360-22c64806994c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e729c57534bbb9e8f356485366ce4493079ce569",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@}\n\n// Get returns the cmlection record from a ConfigMap Annotation\nfunc (cml *ConfigMapLock) Get() (*LeaderElectionRecord, error) {\n\tvar record LeaderElectionRecord"
  }
]