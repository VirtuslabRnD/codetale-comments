[
  {
    "id" : "40c6f53b-9c78-4aa9-b79c-1b951c632006",
    "prId" : 7432,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44eac658-3704-4fd2-95fe-dd88e398be65",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Add a TODO: to make this reusable in other client libraries\n",
        "createdAt" : "2015-04-30T15:23:22Z",
        "updatedAt" : "2015-04-30T16:00:57Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "11a2dc496fef202470058e439a4983d592cfffba",
    "line" : null,
    "diffHunk" : "@@ -1,1 +72,76 @@func (c *pods) Delete(name string, options *api.DeleteOptions) error {\n\t// TODO: to make this reusable in other client libraries\n\tif options == nil {\n\t\treturn c.r.Delete().Namespace(c.ns).Resource(\"pods\").Name(name).Do().Error()\n\t}"
  },
  {
    "id" : "a7040c7b-d2fa-428e-9f98-bb4a008b508f",
    "prId" : 5555,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1bbb842-4621-4c79-b4be-0606ff101173",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I don't think this is the right implementation - a client should be required to send in an api.Pod to do this.\n",
        "createdAt" : "2015-03-20T21:39:46Z",
        "updatedAt" : "2015-03-20T21:39:46Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "398dbf0e-04e6-47bc-a63c-48e476e25648",
        "parentId" : "f1bbb842-4621-4c79-b4be-0606ff101173",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The reason for this is that you want to be able to force clients to deal with specifying a resource version, and this doesn't allow it (it's basically an overwrite).\n",
        "createdAt" : "2015-03-20T21:41:33Z",
        "updatedAt" : "2015-03-20T21:41:33Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "0a98cb47-4bd0-4225-a8aa-53376640a21d",
        "parentId" : "f1bbb842-4621-4c79-b4be-0606ff101173",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Going to submit a pull that deals with this.\n",
        "createdAt" : "2015-03-20T22:05:13Z",
        "updatedAt" : "2015-03-20T22:05:13Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "0d32c33e-c281-4565-9f31-69d811589339",
        "parentId" : "f1bbb842-4621-4c79-b4be-0606ff101173",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "SGTM, thanks @smarterclayton \n",
        "createdAt" : "2015-03-20T22:06:23Z",
        "updatedAt" : "2015-03-20T22:06:23Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "9e71dd25-bea3-454d-9737-502710832a8b",
        "parentId" : "f1bbb842-4621-4c79-b4be-0606ff101173",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "@smarterclayton, could you hold off on the PR to fix this? UpdateStatus needs to update the status of the mirror pods too. We'll need keep the mirror pods objects and use them here. I am working on a pod manager refactoring which will take care of this.\n",
        "createdAt" : "2015-03-20T22:09:45Z",
        "updatedAt" : "2015-03-20T22:09:45Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "8e129cfe-ee54-4c1b-ac74-9211279e0701",
        "parentId" : "f1bbb842-4621-4c79-b4be-0606ff101173",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I wondered why the mirror status test is failing.  I'll wait until after your change to merge https://github.com/GoogleCloudPlatform/kubernetes/pull/5738.  Note my pull request changes SimpleRunKubelet so we can dial down the sync selector in the integration test.\n\n----- Original Message -----\n\n> > @@ -113,3 +114,15 @@ func (c *pods) Watch(label labels.Selector, field\n> > fields.Selector, resourceVersi\n> >  func (c *pods) Bind(binding *api.Binding) error {\n> >     return\n> >     c.r.Post().Namespace(c.ns).Resource(\"pods\").Name(binding.Name).SubResource(\"binding\").Body(binding).Do().Error()\n> >  }\n> > +\n> > +// UpdateStatus takes the name of the pod and the new status.  Returns the\n> > server's representation of the pod, and an error, if it occurs.\n> > +func (c *pods) UpdateStatus(name string, newStatus *api.PodStatus) (result\n> > *api.Pod, err error) {\n> > -   result = &api.Pod{}\n> \n> @smarterclayton, could you hold off on the PR to fix this? UpdateStatus needs\n> to update the status of the mirror pods too. We'll need keep the mirror pods\n> objects and use them here. I am working on a pod manager refactoring which\n> will take care of this.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/5555/files#r26880558\n",
        "createdAt" : "2015-03-20T22:24:52Z",
        "updatedAt" : "2015-03-20T22:24:52Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a352b74bae91e582f6b24a22d369e46c7047263",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +118,122 @@// UpdateStatus takes the name of the pod and the new status.  Returns the server's representation of the pod, and an error, if it occurs.\nfunc (c *pods) UpdateStatus(name string, newStatus *api.PodStatus) (result *api.Pod, err error) {\n\tresult = &api.Pod{}\n\tpod, err := c.Get(name)\n\tif err != nil {"
  }
]