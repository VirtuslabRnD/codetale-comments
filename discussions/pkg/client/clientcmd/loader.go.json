[
  {
    "id" : "707680fd-567f-445c-8a18-0682c4a9e9a1",
    "prId" : 5541,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5da8fb4b-19cc-4e29-8924-0afcd9c5786d",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Recommended\\* consts for the file names in local and home dirs (`.kubeconfig` and `/.kube/.kubeconfig`)?\n",
        "createdAt" : "2015-03-17T14:08:41Z",
        "updatedAt" : "2015-03-17T14:08:41Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "9d757ca1-af27-4dc4-aa91-9d3bb27d118f",
        "parentId" : "5da8fb4b-19cc-4e29-8924-0afcd9c5786d",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Recommended\\* consts for the file names in local and home dirs (.kubeconfig and /.kube/.kubeconfig)?\n\nI'd prefer not to do that in this pull.  The location of the files isn't necessarily fixed.  https://github.com/GoogleCloudPlatform/kubernetes/issues/4615 proposes new locations (for good reasons) and https://github.com/GoogleCloudPlatform/kubernetes/issues/4428 proposes changes as well.  I don't think we've closed on a recommended location or even whether that location is a file or directory.\n",
        "createdAt" : "2015-03-17T17:03:05Z",
        "updatedAt" : "2015-03-17T17:03:05Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "8555ed3ede001b9c1902f3f2958f8544dc5fa355",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +33,37 @@const (\n\tRecommendedConfigPathFlag   = \"kubeconfig\"\n\tRecommendedConfigPathEnvVar = \"KUBECONFIG\"\n\n\tDefaultEnvVarIndex     = 0"
  },
  {
    "id" : "1247d4d4-ef33-4ca9-bd7e-67bcea153aaa",
    "prId" : 5541,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b838568-f4fb-478c-b651-233cbe4c33d6",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "I'd like a method that takes the precedence as argument, say `NewClientConfigLoadingRules(precedence []string)`, so if I'm creating a completely custom set of precedence rules I don't get the default ones created before setting `Precedence`. \n",
        "createdAt" : "2015-03-17T14:14:52Z",
        "updatedAt" : "2015-03-17T14:14:52Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "fed6e5ec-0acf-4471-9e38-6630d77804c3",
        "parentId" : "2b838568-f4fb-478c-b651-233cbe4c33d6",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> I'd like a method that takes the precedence as argument, say NewClientConfigLoadingRules(precedence []string)\n\nYou can do that by creating the object directly: `ClientConfigLoadingRules{Precedence: []string{\"my\", \"favorite\", \"order\", \"here\"}}`.  The default is valuable because it's setting a sequence that is correct for most internal consumers of the API.\n",
        "createdAt" : "2015-03-17T17:04:36Z",
        "updatedAt" : "2015-03-17T17:06:32Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "047c3a66-4ad1-4864-a964-350a6edabef3",
        "parentId" : "2b838568-f4fb-478c-b651-233cbe4c33d6",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Sounds reasonable.\n",
        "createdAt" : "2015-03-17T18:06:37Z",
        "updatedAt" : "2015-03-17T18:06:37Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8555ed3ede001b9c1902f3f2958f8544dc5fa355",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +53,57 @@// NewDefaultClientConfigLoadingRules returns a ClientConfigLoadingRules object with default fields filled in.  You are not required to\n// use this constructor\nfunc NewDefaultClientConfigLoadingRules() *ClientConfigLoadingRules {\n\treturn &ClientConfigLoadingRules{\n\t\tPrecedence: []string{os.Getenv(RecommendedConfigPathEnvVar), \".kubeconfig\", os.Getenv(\"HOME\") + \"/.kube/.kubeconfig\"},"
  },
  {
    "id" : "fd27dea5-653a-43a3-afeb-f54a001a13fe",
    "prId" : 3983,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f2e76d8-c2ab-4479-a2c9-f3d7cc15c3c8",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Add a note to the function doc mentioning that relative paths in files are made absolute, relative to the referencing file\n",
        "createdAt" : "2015-01-30T18:58:33Z",
        "updatedAt" : "2015-01-30T19:01:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "69acd724-063b-468c-bd87-2c119b356c99",
        "parentId" : "6f2e76d8-c2ab-4479-a2c9-f3d7cc15c3c8",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "done\n",
        "createdAt" : "2015-01-30T19:01:38Z",
        "updatedAt" : "2015-01-30T19:01:38Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "aba73493de90470836964cc5aad92f0092ef467c",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +64,68 @@// and only absolute file paths are returned.\nfunc (rules *ClientConfigLoadingRules) Load() (*clientcmdapi.Config, error) {\n\tconfig := clientcmdapi.NewConfig()\n\n\tmergeConfigWithFile(config, rules.CommandLinePath)"
  },
  {
    "id" : "8d0d6292-1c1f-4ef5-add1-7eb88e0a8d68",
    "prId" : 3983,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39538439-b8d8-445f-b219-d21ccadd3bfd",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Not a big deal, since these aren't exported, but having `resolveLocalPaths` take a filepath and `resolveLocalPath` take a dirpath is a little unexpected. If the asymmetry bothers you, change it :)\n",
        "createdAt" : "2015-01-30T19:04:17Z",
        "updatedAt" : "2015-01-30T19:04:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "aba73493de90470836964cc5aad92f0092ef467c",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +100,104 @@// this cannot be done directly inside of LoadFromFile because doing so there would make it impossible to load a file without\n// modification of its contents.\nfunc resolveLocalPaths(filename string, config *clientcmdapi.Config) error {\n\tif len(filename) == 0 {\n\t\treturn nil"
  }
]