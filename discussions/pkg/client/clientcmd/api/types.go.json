[
  {
    "id" : "416d5e89-cc0b-43e0-8470-243aaefd4cc3",
    "prId" : 8344,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3230cdc7-c76a-400a-a780-745731a5abae",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "do you need API version?  My hacking showed that only Kind was needed.  Might have missed something\n",
        "createdAt" : "2015-05-15T22:42:36Z",
        "updatedAt" : "2015-05-16T02:03:43Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "7656a391-4277-4bc1-afe1-85ea702ed264",
        "parentId" : "3230cdc7-c76a-400a-a780-745731a5abae",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "From a design point of view, I think APIVersion is more important to keep than kind. Clients that consume kubeconfig generally don't consume other objects. But the practical reason for keeping both is to avoid breaking downstream clients/consumers of kubeconfig, in particular gcloud.\n",
        "createdAt" : "2015-05-15T23:07:03Z",
        "updatedAt" : "2015-05-16T02:03:43Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "574fa7ff-8cfc-4b86-a539-ca1a7477954c",
        "parentId" : "3230cdc7-c76a-400a-a780-745731a5abae",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I don't understand - if this object is not versioned with the API, what\ndoes APIVersion represent?  if it is versioned, it should live with the\nversioned APIs, no?\n\nOn Fri, May 15, 2015 at 4:07 PM, Jeff Lowdermilk notifications@github.com\nwrote:\n\n> In pkg/client/clientcmd/api/types.go\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/8344#discussion_r30452914\n> :\n> \n> > @@ -26,7 +25,11 @@ import (\n> > \n> >  // Config holds the information needed to build connect to remote kubernetes clusters as a given user\n> >  type Config struct {\n> > -   api.TypeMeta `json:\",inline\"`\n> > -   // Legacy field from pkg/api/types.go TypeMeta.\n> > -   // TODO(jlowdermilk): remove this after eliminating downstream dependencies.\n> > -   Kind string `json:\"kind,omitempty\"`\n> > -   // Version of the schema for this config object.\n> > -   APIVersion string `json:\"apiVersion,omitempty\"`\n> \n> From a design point of view, I think APIVersion is more important to keep\n> than kind. Clients that consume kubeconfig generally don't consume other\n> objects. But the practical reason for keeping both is to avoid breaking\n> downstream clients/consumers of kubeconfig, in particular gcloud.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/8344/files#r30452914\n> .\n",
        "createdAt" : "2015-05-16T03:14:35Z",
        "updatedAt" : "2015-05-16T03:14:35Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "59897f50-4451-4c51-8158-cc283aecc2e2",
        "parentId" : "3230cdc7-c76a-400a-a780-745731a5abae",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "The config has its own separate version. Think of it as a different api group.\n",
        "createdAt" : "2015-05-16T03:30:01Z",
        "updatedAt" : "2015-05-16T03:30:01Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "7a209663-9cb2-4782-b6ac-b47396d8b0a5",
        "parentId" : "3230cdc7-c76a-400a-a780-745731a5abae",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "OK\n\nOn Fri, May 15, 2015 at 8:30 PM, Brian Grant notifications@github.com\nwrote:\n\n> In pkg/client/clientcmd/api/types.go\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/8344#discussion_r30458049\n> :\n> \n> > @@ -26,7 +25,11 @@ import (\n> > \n> >  // Config holds the information needed to build connect to remote kubernetes clusters as a given user\n> >  type Config struct {\n> > -   api.TypeMeta `json:\",inline\"`\n> > -   // Legacy field from pkg/api/types.go TypeMeta.\n> > -   // TODO(jlowdermilk): remove this after eliminating downstream dependencies.\n> > -   Kind string `json:\"kind,omitempty\"`\n> > -   // Version of the schema for this config object.\n> > -   APIVersion string `json:\"apiVersion,omitempty\"`\n> \n> The config has its own separate version. Think of it as a different api\n> group.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/8344/files#r30458049\n> .\n",
        "createdAt" : "2015-05-16T04:27:01Z",
        "updatedAt" : "2015-05-16T04:27:01Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "db09ceae25e80f6c5fb140c111cc6f114b837a4b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +30,34 @@\tKind string `json:\"kind,omitempty\"`\n\t// Version of the schema for this config object.\n\tAPIVersion string `json:\"apiVersion,omitempty\"`\n\t// Preferences holds general information to be use for cli interactions\n\tPreferences Preferences `json:\"preferences\"`"
  },
  {
    "id" : "a17c38c0-f158-45c4-b15a-de5b91bd286d",
    "prId" : 3470,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cc2cc6d-09bb-4605-bdad-e0cdcb2ac311",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We need to add a comment somewhere in here that we want to nuke this.  I'd prefer it be on client_config.go.  We also need a decision on when we can nuke backwards compatibility with .kubernetes_ns now that we have context, and that all the use cases are covered.  @brendandburns do you think we could reasonably just nuke namespace-path right now?\n",
        "createdAt" : "2015-01-19T16:25:43Z",
        "updatedAt" : "2015-01-20T21:07:57Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "44864efb-5242-44de-8912-06f0422c1ad0",
        "parentId" : "4cc2cc6d-09bb-4605-bdad-e0cdcb2ac311",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> do you think we could reasonably just nuke namespace-path right now?\n\nMy preference would be to have a second pull request so that any ripples from a breaking change are more self-contained.\n",
        "createdAt" : "2015-01-19T16:31:25Z",
        "updatedAt" : "2015-01-20T21:07:57Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "a3e70fbf-f131-40c1-b0c9-432d179431c7",
        "parentId" : "4cc2cc6d-09bb-4605-bdad-e0cdcb2ac311",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "+1 to nuking namespace-path. I don't think we have anything using it now, but removing it in a separate PR sgtm.\n",
        "createdAt" : "2015-01-20T20:56:55Z",
        "updatedAt" : "2015-01-20T21:07:57Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "cc671ba6-4f3a-43e5-abc5-4b66b3c2cb17",
        "parentId" : "4cc2cc6d-09bb-4605-bdad-e0cdcb2ac311",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I think we should remove it when we remove kubecfg.  I thought they used the same file. \n\nSent from my iPhone\n\n> On Jan 20, 2015, at 3:57 PM, Jeff Lowdermilk notifications@github.com wrote:\n> \n> In pkg/client/clientcmd/api/types.go:\n> \n> > @@ -83,6 +83,8 @@ type Context struct {\n> >     AuthInfo string `json:\"user\"`\n> >     // Namespace is the default namespace to use on unspecified requests\n> >     Namespace string `json:\"namespace,omitempty\"`\n> > -   // NamespacePath is the path to a kubernetes ns file (~/.kubernetes_ns)\n> >   +1 to nuking namespace-path. I don't think we have anything using it now, but removing it in a separate PR sgtm.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2015-01-21T05:33:00Z",
        "updatedAt" : "2015-01-21T05:33:00Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd011371385a297310d69576564cf2f13d0a7533",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +84,88 @@\t// Namespace is the default namespace to use on unspecified requests\n\tNamespace string `json:\"namespace,omitempty\"`\n\t// NamespacePath is the path to a kubernetes ns file (~/.kubernetes_ns)\n\tNamespacePath string `json:\"namespace-path,omitempty\"`\n\t// Extensions holds additional information. This is useful for extenders so that reads and writes don't clobber unknown fields"
  },
  {
    "id" : "a2ba561e-bcb8-436d-8d79-64e6b366671d",
    "prId" : 3275,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72e3dba7-4192-4cb2-abdd-a895737c3154",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Use a list of keys with values, not maps.\n",
        "createdAt" : "2015-01-09T01:11:58Z",
        "updatedAt" : "2015-01-13T21:30:57Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "a4e20d5a-1ec4-4398-9e84-36ab398958eb",
        "parentId" : "72e3dba7-4192-4cb2-abdd-a895737c3154",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Use a list of keys with values, not maps.\n\nI'm not quite clear on this.  I want to support an arbitrary number of potential extenders that all obey the EmbeddedObject rules.  I want those extenders to be able to quickly find their EmbeddedObject which may not be unique in type.  Why wouldn't I use a map to express that?  How could an extender reliably find their EmbeddedObject (not unique in type) without having a key of their choosing to select it?\n",
        "createdAt" : "2015-01-09T13:00:41Z",
        "updatedAt" : "2015-01-13T21:30:57Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "5e4c81d7-2e7f-4d1b-95cd-27cf93931501",
        "parentId" : "72e3dba7-4192-4cb2-abdd-a895737c3154",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The external (versioned) data structure shouldn't be map[string]runtime.EmbeddedObject, it should be:\n\n```\n[]struct{\n  Name string\n  Object runtime.EmbeddedObject\n}\n```\n\nThere were several issues where we agreed that maps in general are not easy for someone to understand the schema of when presented as yaml, and are much harder to describe in an automated fashion to end users.  That's it.\n\n----- Original Message -----\n\n> > -   // Extensions holds additional information. This is useful for extenders\n> >   so that reads and writes don't clobber unknown fields\n> > -   Extensions map[string]runtime.EmbeddedObject\n> >   `json:\"extensions,omitempty\"`\n> >   +}\n> >   +\n> >   +// AuthInfo contains information that describes identity information.\n> >   This is use to tell the kubernetes cluster who you are.\n> >   +type AuthInfo struct {\n> > -   // AuthPath is the path to a kubernetes auth file (~/.kubernetes_auth).\n> >   If you provide an AuthPath, the other options specified are ignored\n> > -   AuthPath string `json:\"auth-path,omitempty\"`\n> > -   // ClientCertificate is the path to a client cert file for TLS.\n> > -   ClientCertificate string `json:\"client-certificate,omitempty\"`\n> > -   // ClientKey is the path to a client key file for TLS.\n> > -   ClientKey string `json:\"client-key,omitempty\"`\n> > -   // Token is the bearer token for authentication to the kubernetes\n> >   cluster.\n> > -   Token string `json:\"token,omitempty\"`\n> > -   // Extensions holds additional information. This is useful for extenders\n> >   so that reads and writes don't clobber unknown fields\n> > -   Extensions map[string]runtime.EmbeddedObject\n> >   `json:\"extensions,omitempty\"`\n> > \n> > Use a list of keys with values, not maps.\n> \n> I'm not quite clear on this.  I want to support an arbitrary number of\n> potential extenders that all obey the EmbeddedObject rules.  I want those\n> extenders to be able to quickly find their EmbeddedObject which may not be\n> unique in type.  Why wouldn't I use a map to express that?  How could an\n> extender reliably find their EmbeddedObject (not unique in type) without\n> having a key of their choosing to select it?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/3275/files#r22714410\n",
        "createdAt" : "2015-01-09T16:20:34Z",
        "updatedAt" : "2015-01-13T21:30:57Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "b51a717f6ebc931b8eddd7ed7ee2673819a6a80e",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@\tToken string `json:\"token,omitempty\"`\n\t// Extensions holds additional information. This is useful for extenders so that reads and writes don't clobber unknown fields\n\tExtensions map[string]runtime.EmbeddedObject `json:\"extensions,omitempty\"`\n}\n"
  }
]