[
  {
    "id" : "1667c232-d018-4b90-ab5e-bbd5786b8957",
    "prId" : 12721,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e81f6e3-2eda-43d5-8a90-d9984be42b03",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I'm starting to get concerned that we are building many layers now within the code that very few people will understand why they are there.  Unless there is some picture to tie it together.   \n",
        "createdAt" : "2015-08-17T14:31:07Z",
        "updatedAt" : "2015-08-18T07:33:54Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "da47cb4c-55bf-44ea-866a-1e44f8461ca0",
        "parentId" : "7e81f6e3-2eda-43d5-8a90-d9984be42b03",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm afraid I don't understand what are you suggesting. The whole watch in apiserver is a very local change and in general people shouldn't worry about it all (I would consider it as part of storage, which generally developers don't care about while implementing higher-level features).\n",
        "createdAt" : "2015-08-17T14:36:35Z",
        "updatedAt" : "2015-08-18T07:33:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "16057ec6-7bda-43c7-8ba1-8e7acf541577",
        "parentId" : "7e81f6e3-2eda-43d5-8a90-d9984be42b03",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "In other words, what I was trying to say is that I think that only few people understand how our internal storage works (I mean pkg/storage + pkg/registry) and I think that's fine, since this is just an infrastructure for others.\n",
        "createdAt" : "2015-08-17T14:46:46Z",
        "updatedAt" : "2015-08-18T07:33:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "3aa2b3c4-768f-4b3a-a1ee-3f23dda6b8d5",
        "parentId" : "7e81f6e3-2eda-43d5-8a90-d9984be42b03",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "But maybe the whole \"WatchCache\" class shouldn't be under pkg/client/cache, but should be a private class under pkg/storage (since this is in fact an implementation detail).\n",
        "createdAt" : "2015-08-17T14:53:39Z",
        "updatedAt" : "2015-08-18T07:33:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "8f66bb83-b02d-49dc-a9b8-cf49972a0741",
        "parentId" : "7e81f6e3-2eda-43d5-8a90-d9984be42b03",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I like the idea of putting all the elements under storage so it is more self contained. \n",
        "createdAt" : "2015-08-17T17:49:59Z",
        "updatedAt" : "2015-08-18T07:33:54Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "35839afa-4529-44fd-af71-1e10f5cda35e",
        "parentId" : "7e81f6e3-2eda-43d5-8a90-d9984be42b03",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "OK - I remember now why it is here - there is a reference to WatchCache in reflector.go:\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/client/cache/reflector.go#L238\n\nThe fix for it is to change the signature of Replace() method in Store interface to take \"resource version\" and get rid of this hack.\nI would like to avoid fixing it in this PR, so I'm adding a TODO and will fix that in a separate PR later this week.\n",
        "createdAt" : "2015-08-18T07:31:04Z",
        "updatedAt" : "2015-08-18T07:33:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a71eb1bcc34bef98ed63273d80df0a8ee942eb9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +36,40 @@// WatchCache. Additionally to a typical \"watch.Event\" it contains\n// the previous value of the object to enable proper filtering in the\n// upper layers.\ntype WatchCacheEvent struct {\n\tType       watch.EventType"
  },
  {
    "id" : "f70fdf93-45ce-4429-a784-73e8efdc9df5",
    "prId" : 12268,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed9000f4-c3a0-4dba-b44d-6c5aee6ede20",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "It looks like a lot of the code in Add, Update, and Delete is duplicated. I'd suggest factoring that code out into a separate function. I think it's fine to leave that for a subsequent PR, though.\n",
        "createdAt" : "2015-08-06T19:41:43Z",
        "updatedAt" : "2015-08-07T06:29:49Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "b3d0ae80-a06a-4260-8afc-ae7dccda88a6",
        "parentId" : "ed9000f4-c3a0-4dba-b44d-6c5aee6ede20",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Done.\n",
        "createdAt" : "2015-08-07T06:30:00Z",
        "updatedAt" : "2015-08-07T06:30:00Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "52e3af4e9358cb59852544cf0e6d90a3611ee58c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +93,97 @@}\n\nfunc (w *WatchCache) Update(obj interface{}) error {\n\tobject, resourceVersion, err := objectToVersionedRuntimeObject(obj)\n\tif err != nil {"
  },
  {
    "id" : "e61575fc-54d0-4863-8240-a25278dee4e0",
    "prId" : 12268,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62646398-84ad-4b69-84ab-25b2c5a43ef5",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Late to the party, maybe done already-- can you document the behavior if you ask for e.g. 4 and 4 & 5 are in the list? Do you get both 4 and 5, or just 4? This behavior has to match etcd's behavior.\n",
        "createdAt" : "2015-08-25T18:12:41Z",
        "updatedAt" : "2015-08-25T18:12:41Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0903f0fe-ac81-4463-962c-0498e3b6c733",
        "parentId" : "62646398-84ad-4b69-84ab-25b2c5a43ef5",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yes - you will get both 4 and 5 - it doesn't change the currently existing behavior. I can add a comment to it tomorrow.\n",
        "createdAt" : "2015-08-25T18:34:40Z",
        "updatedAt" : "2015-08-25T18:34:40Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "52e3af4e9358cb59852544cf0e6d90a3611ee58c",
    "line" : 221,
    "diffHunk" : "@@ -1,1 +219,223 @@}\n\nfunc (w *WatchCache) GetAllEventsSince(resourceVersion uint64) ([]watch.Event, error) {\n\tw.RLock()\n\tdefer w.RUnlock()"
  }
]