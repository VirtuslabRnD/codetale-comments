[
  {
    "id" : "7bc9eee8-09bd-4c3a-9a00-f7b74023550b",
    "prId" : 17131,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd531782-aa1c-419c-a42a-8ad845bb140a",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I have an extremely minor preference for `var _ = Store(&cache{})`-- I think that's more common in our code base?\n",
        "createdAt" : "2015-11-11T22:07:01Z",
        "updatedAt" : "2015-11-11T22:07:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "9c3fd420-f0bf-4920-ab05-d83bdf4059e8",
        "parentId" : "dd531782-aa1c-419c-a42a-8ad845bb140a",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Hrm, I will do a quick, highly unscientific analysis\n",
        "createdAt" : "2015-11-11T23:47:01Z",
        "updatedAt" : "2015-11-11T23:47:01Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "ba7db78d-dad8-441e-9510-ec77de55fb7c",
        "parentId" : "dd531782-aa1c-419c-a42a-8ad845bb140a",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@lavalamp looks like your style is in the minority from this:\n\n```\n$ grep -nr 'var _ ' pkg/ | grep '(' | wc -l\n36\n\n★ pmorie:~/code/kubernetes (master) \n$ grep -nr 'var _ ' pkg/ | grep -v '(' | wc -l\n113\n```\n",
        "createdAt" : "2015-11-11T23:50:24Z",
        "updatedAt" : "2015-11-11T23:50:24Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "7486cca3-f302-4484-bba8-56f849f5a345",
        "parentId" : "dd531782-aa1c-419c-a42a-8ad845bb140a",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "hm, that leaves out `var ( ... )` blocks, but it probably doesn't matter if\nthe difference is that big. Never mind, then.\n\nOn Wed, Nov 11, 2015 at 3:50 PM, Paul Morie notifications@github.com\nwrote:\n\n> In pkg/client/cache/store.go\n> https://github.com/kubernetes/kubernetes/pull/17131#discussion_r44604621\n> :\n> \n> > @@ -116,6 +116,8 @@ type cache struct {\n> >     keyFunc KeyFunc\n> >  }\n> > \n> > +var _ Store = &cache{}\n> \n> @lavalamp https://github.com/lavalamp looks like your style is in the\n> minority from this:\n> \n> $ grep -nr 'var _ ' pkg/ | grep '(' | wc -l\n> 36\n> \n> ★ pmorie:~/code/kubernetes (master)\n> $ grep -nr 'var _ ' pkg/ | grep -v '(' | wc -l\n> 113\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/17131/files#r44604621.\n",
        "createdAt" : "2015-11-11T23:55:07Z",
        "updatedAt" : "2015-11-11T23:55:07Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "2377bada68947ca20a2755a7f93adc6d3573050a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +117,121 @@}\n\nvar _ Store = &cache{}\n\n// Add inserts an item into the cache."
  },
  {
    "id" : "61395392-f6bf-4fcd-a92d-625bcda6aa5b",
    "prId" : 4125,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba8d84be-5280-4aa1-8549-cdae30a15fc2",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Can you build the index before the lock and then swap it in to limit contention?  (Similar to above)\n",
        "createdAt" : "2015-02-06T16:11:17Z",
        "updatedAt" : "2015-02-09T21:45:05Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "53f1efa484e03f417e1faddb5ce33a45f1f2afbd",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +240,244 @@\tdefer c.lock.Unlock()\n\tc.items = items\n\n\t// rebuild any index\n\tc.indices = Indices{}"
  },
  {
    "id" : "6bf3b043-235f-4146-ae3c-201a87aca017",
    "prId" : 3810,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c935f66-7c48-4137-90ca-dc5161a088aa",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Describe keyFunc in godoc\n",
        "createdAt" : "2015-01-29T20:51:16Z",
        "updatedAt" : "2015-01-29T22:39:57Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ee943d683134f7233c80110b7ae0586f3be4119",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +147,151 @@}\n\n// NewStore returns a Store implemented simply with a map and a lock.\nfunc NewStore(keyFunc KeyFunc) Store {\n\treturn &cache{items: map[string]interface{}{}, keyFunc: keyFunc}"
  },
  {
    "id" : "108427c8-9f8f-4784-877b-45dc549ce744",
    "prId" : 3810,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dcda696-41e8-4b76-a927-64e65e6adaad",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "ignored errors should have comment with an explanation...\n",
        "createdAt" : "2015-10-21T19:29:13Z",
        "updatedAt" : "2015-10-21T19:29:13Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ee943d683134f7233c80110b7ae0586f3be4119",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +118,122 @@// Get is completely threadsafe as long as you treat all items as immutable.\nfunc (c *cache) Get(obj interface{}) (item interface{}, exists bool, err error) {\n\tid, _ := c.keyFunc(obj)\n\tif err != nil {\n\t\treturn nil, false, fmt.Errorf(\"couldn't create key for object: %v\", err)"
  }
]