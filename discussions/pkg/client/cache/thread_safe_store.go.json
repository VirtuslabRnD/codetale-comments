[
  {
    "id" : "4561cfd0-64fa-403a-99b2-2cb85c72c5bc",
    "prId" : 25141,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45ae907d-6c36-4ec7-8c7e-c3f45a3a3f2b",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Add godoc\n",
        "createdAt" : "2016-05-04T16:53:10Z",
        "updatedAt" : "2016-05-04T16:53:10Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "d34e5e0f-3057-403f-ae97-90f9bbc5a984",
        "parentId" : "45ae907d-6c36-4ec7-8c7e-c3f45a3a3f2b",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Add an assertion that `threadSafeMap` is a `ThreadSafeStore`, too\n",
        "createdAt" : "2016-05-04T16:53:45Z",
        "updatedAt" : "2016-05-04T16:53:45Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "ad954d4a-fa11-4714-a410-009c3dbe8e86",
        "parentId" : "45ae907d-6c36-4ec7-8c7e-c3f45a3a3f2b",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't see a test for this function, either. I'm not 100% sure this function makes any sense at all. but at least this seems like an improvement.\n",
        "createdAt" : "2016-05-04T20:50:17Z",
        "updatedAt" : "2016-05-04T20:50:18Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "42d940735baccc0dbd82cb23d7f2f9f9f33ffff1",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +179,183 @@}\n\nfunc (c *threadSafeMap) ListIndexFuncValues(indexName string) []string {\n\tc.lock.RLock()\n\tdefer c.lock.RUnlock()"
  },
  {
    "id" : "3820bae7-9056-4e64-942c-ce52e7862a9f",
    "prId" : 6179,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f808c96f-998b-4f5f-a26d-79a32960809c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "In order to be truly thread safe, this actually needs to do a deep copy of item before returning it. :(\n",
        "createdAt" : "2015-03-30T21:17:41Z",
        "updatedAt" : "2015-04-08T22:07:35Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "79cd5fec-cf29-472e-8ad2-85fd3e7fc513",
        "parentId" : "f808c96f-998b-4f5f-a26d-79a32960809c",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Are you just suggesting a rename, or stricter enforcing of thread safety? I was going for: If you store a pointer you get a pointer, that pointer may have other guarantees. \n",
        "createdAt" : "2015-03-30T21:30:29Z",
        "updatedAt" : "2015-04-08T22:07:35Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "d0c71866-1800-4eb3-9ef9-8b5b7d4b8d7a",
        "parentId" : "f808c96f-998b-4f5f-a26d-79a32960809c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "After more thought (this affects my PR, too) I'm suggesting a comment: this is threadsafe only if you treat items returned by Get/List as read-only.\n",
        "createdAt" : "2015-03-31T20:33:02Z",
        "updatedAt" : "2015-04-08T22:07:35Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "aa109ce5-0077-4fea-b685-f4c3232b83f1",
        "parentId" : "f808c96f-998b-4f5f-a26d-79a32960809c",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "done\n",
        "createdAt" : "2015-04-03T19:05:32Z",
        "updatedAt" : "2015-04-08T22:07:35Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7864aa230183d830b810ef3128b176d2f732ad9",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@\tc.lock.RLock()\n\tdefer c.lock.RUnlock()\n\titem, exists = c.items[key]\n\treturn item, exists\n}"
  }
]