[
  {
    "id" : "473d7a26-a385-4942-a1ce-679a26743e6f",
    "prId" : 26013,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f877643a-57f2-4e30-b658-28c60adb2d0d",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "It seems that this error is never returned from [ListAndWatch](https://github.com/kubernetes/kubernetes/blob/8f104a7b0f2298caaf5f8a4ab901855646172886/pkg/client/cache/reflector.go#L336).\n",
        "createdAt" : "2016-05-23T11:03:55Z",
        "updatedAt" : "2016-05-23T11:03:55Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "077184b6-1db1-49c3-a80b-da7c4c62bd9b",
        "parentId" : "f877643a-57f2-4e30-b658-28c60adb2d0d",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "https://github.com/kubernetes/kubernetes/issues/26065\n",
        "createdAt" : "2016-05-23T11:08:04Z",
        "updatedAt" : "2016-05-23T11:08:04Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f31ec95f058c7a3efaf0ae503d19237b7048ec32",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +361,365 @@\t\t\titeration++\n\t\t\tif iteration == 2 {\n\t\t\t\treturn rerr\n\t\t\t}\n\t\t\treturn nil"
  },
  {
    "id" : "8fb2deaf-3e90-4493-82c6-e60a5c8ff65f",
    "prId" : 16266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fa7ad04-2a63-4b7b-9022-4caf0cb2c92a",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Would like to see a reflector test exercising the force resync, watching timeout, and resync loop behavior.\n",
        "createdAt" : "2015-10-26T13:53:14Z",
        "updatedAt" : "2015-10-26T18:35:37Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "b4d109a5-ec56-4254-9aaf-cad82255dd04",
        "parentId" : "3fa7ad04-2a63-4b7b-9022-4caf0cb2c92a",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Sure - will do it.\n",
        "createdAt" : "2015-10-26T14:37:09Z",
        "updatedAt" : "2015-10-26T18:35:37Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "1e390997-ba87-4037-a7b1-4795e7948fc0",
        "parentId" : "3fa7ad04-2a63-4b7b-9022-4caf0cb2c92a",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "OK - test added.\n",
        "createdAt" : "2015-10-26T15:29:25Z",
        "updatedAt" : "2015-10-26T18:35:37Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d47e21f19feeb5322de51fb25ee8ce51d0e0ea1c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +38,42 @@func (t *testLW) List() (runtime.Object, error) { return t.ListFunc() }\nfunc (t *testLW) Watch(options api.ListOptions) (watch.Interface, error) {\n\treturn t.WatchFunc(options.ResourceVersion)\n}\n"
  },
  {
    "id" : "6582975d-ffe8-4640-940b-c2d109501b54",
    "prId" : 16266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17fb694f-53d2-4597-a6c7-a9f4dac8342f",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is it possible to write a test that verifies that the connection actually gets reused? I worry that someone who breaks this test is going to be able to fix it while still not managing to get the connection reused.\n",
        "createdAt" : "2015-10-27T04:25:54Z",
        "updatedAt" : "2015-10-27T04:25:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "543ef7d2-f5a2-4b78-a52d-b970dc6e7f7c",
        "parentId" : "17fb694f-53d2-4597-a6c7-a9f4dac8342f",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I thought about it, but I didn't come up with anything reasonable.\nThe only way to do it that came to my mind is some kind of integration test with modified Transport layer performing some checks. I will try to do something like that in a separate PR.\n",
        "createdAt" : "2015-10-27T07:56:38Z",
        "updatedAt" : "2015-10-27T07:56:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d47e21f19feeb5322de51fb25ee8ce51d0e0ea1c",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +362,366 @@}\n\nfunc TestReflectorResync(t *testing.T) {\n\ts := NewStore(MetaNamespaceKeyFunc)\n"
  }
]