[
  {
    "id" : "8108f442-8112-44a0-b9ec-ac33b1fb0069",
    "prId" : 37003,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37003#pullrequestreview-9103141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a79b1559-6ec8-4ab2-839c-7f9c1871c444",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Can you add comments on what the username, groups and extra should be?\n",
        "createdAt" : "2016-11-17T19:26:58Z",
        "updatedAt" : "2016-12-05T13:19:01Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "c1cebf27-c0e5-4417-be5d-a9e8a6c52a30",
        "parentId" : "a79b1559-6ec8-4ab2-839c-7f9c1871c444",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "added\n",
        "createdAt" : "2016-11-17T19:46:26Z",
        "updatedAt" : "2016-12-05T13:19:01Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "61b5585bac93caf90dd00ecf19319ad15d2277dc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +96,100 @@// In order to faithfully round-trip through an impersonation flow, these keys\n// MUST be lowercase.\nfunc NewAuthProxyRoundTripper(username string, groups []string, extra map[string][]string, rt http.RoundTripper) http.RoundTripper {\n\treturn &authProxyRoundTripper{\n\t\tusername: username,"
  },
  {
    "id" : "d6e2ba8a-078f-4efb-bb75-33e3e0890f4d",
    "prId" : 36755,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36755#pullrequestreview-8598293",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72b621fc-5087-4fb5-b497-0d6caca28acc",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "note that these correspond to the headers used in `pkg/apis/authentication`... I assume you're not importing those because you don't want the package dependency\n",
        "createdAt" : "2016-11-15T03:31:38Z",
        "updatedAt" : "2016-11-15T13:10:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a771bec1-3cf6-4cdd-9d67-343d70d80a0e",
        "parentId" : "72b621fc-5087-4fb5-b497-0d6caca28acc",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> note that these correspond to the headers used in pkg/apis/authentication... I assume you're not importing those because you don't want the package dependency\n\nRight.  You're saying you want a comment saying that or that you're noting it in the review?\n",
        "createdAt" : "2016-11-15T12:51:35Z",
        "updatedAt" : "2016-11-15T13:10:37Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "4067c8ed-b8fa-43e9-9a1a-45e004c22a32",
        "parentId" : "72b621fc-5087-4fb5-b497-0d6caca28acc",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Comment, or someone will try to use the constants or change the values. \n",
        "createdAt" : "2016-11-15T12:58:17Z",
        "updatedAt" : "2016-11-15T13:10:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "18e6ed96-4242-4b77-a5c4-70f13b8bfca1",
        "parentId" : "72b621fc-5087-4fb5-b497-0d6caca28acc",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "added\n",
        "createdAt" : "2016-11-15T13:10:40Z",
        "updatedAt" : "2016-11-15T13:10:40Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbcf06167e6c4a767c793d902ad504f8f7602c29",
    "line" : null,
    "diffHunk" : "@@ -1,1 +139,143 @@// but you must not change the values.\nconst (\n\t// ImpersonateUserHeader is used to impersonate a particular user during an API server request\n\tImpersonateUserHeader = \"Impersonate-User\"\n"
  },
  {
    "id" : "e0d48853-82ad-4192-96c1-e6528089c3d3",
    "prId" : 16126,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74016554-579d-4f2d-a189-0188f122e55e",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "We need to delete these from debugging.go.\n",
        "createdAt" : "2015-11-04T00:12:38Z",
        "updatedAt" : "2015-11-19T22:56:56Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "74890f05-70d1-45b7-b625-9deca3bcc50d",
        "parentId" : "74016554-579d-4f2d-a189-0188f122e55e",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "This is addressed.\n",
        "createdAt" : "2015-11-04T00:56:14Z",
        "updatedAt" : "2015-11-19T22:56:56Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75b88d4e9eb3f3b07cc1459c9b052543250bf2",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +156,160 @@\n// newRequestInfo creates a new RequestInfo based on an http request\nfunc newRequestInfo(req *http.Request) *requestInfo {\n\treturn &requestInfo{\n\t\tRequestURL:     req.URL.String(),"
  },
  {
    "id" : "ca31de0a-5632-487a-994c-fe30f001a42a",
    "prId" : 16126,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ac3f612-6ce6-40b8-949d-7a0b0e9fcfbb",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "The old HTTPWrappersForConfig doesn't wrap a debuggingRoundTripper, what if callers like https://github.com/kubernetes/kubernetes/blob/master/pkg/client/unversioned/remotecommand/remotecommand.go#L68 doesn't want to wrap a debuggerRoundTripper?\n",
        "createdAt" : "2015-11-04T00:23:11Z",
        "updatedAt" : "2015-11-19T22:56:56Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "c0b6ba1c-12d8-4ab4-8ab6-a8a8f80ddb77",
        "parentId" : "0ac3f612-6ce6-40b8-949d-7a0b0e9fcfbb",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "It only triggers when debug levels are really high. I don't think it will be an issue in practice.\n",
        "createdAt" : "2015-11-04T01:00:18Z",
        "updatedAt" : "2015-11-19T22:56:56Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75b88d4e9eb3f3b07cc1459c9b052543250bf2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +55,59 @@func DebugWrappers(rt http.RoundTripper) http.RoundTripper {\n\tswitch {\n\tcase bool(glog.V(9)):\n\t\trt = newDebuggingRoundTripper(rt, debugCurlCommand, debugURLTiming, debugResponseHeaders)\n\tcase bool(glog.V(8)):"
  }
]