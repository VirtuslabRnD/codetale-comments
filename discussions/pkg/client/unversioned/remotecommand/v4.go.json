[
  {
    "id" : "db9cfa40-17fe-4ed8-8fd2-c63378112286",
    "prId" : 26541,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcb4ca07-c0fa-400f-aea6-04e85b110a14",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "dead line\n",
        "createdAt" : "2016-08-16T12:56:27Z",
        "updatedAt" : "2016-08-20T13:59:09Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "a0fbaa19-dfa0-4771-b381-d831f3cbd08c",
        "parentId" : "dcb4ca07-c0fa-400f-aea6-04e85b110a14",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Copy and paste from V3. Here the dead line actually makes sense as it describes the flow of the whole func, not only the next block.\n",
        "createdAt" : "2016-08-16T13:05:22Z",
        "updatedAt" : "2016-08-20T13:59:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e792d4117d8735784f4d830ad1c9d4f68cfee145",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@\n\t// now that all the streams have been created, proceed with reading & copying\n\n\terrorChan := watchErrorStream(p.errorStream, &errorDecoderV4{})\n"
  },
  {
    "id" : "0370070e-b411-4b0b-aa75-a27d236bde3c",
    "prId" : 26541,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ff9a4b9-9ef7-4f90-a4db-0a32261622cb",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Is there a unit test that covers this function?  I did not see one.\n",
        "createdAt" : "2016-08-18T13:55:44Z",
        "updatedAt" : "2016-08-20T13:59:09Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "8ac689a7-b59c-45d1-a1fc-baf42af30f78",
        "parentId" : "8ff9a4b9-9ef7-4f90-a4db-0a32261622cb",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "No there isn't, but well worth it.\n",
        "createdAt" : "2016-08-18T13:57:27Z",
        "updatedAt" : "2016-08-20T13:59:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "8872387e-7315-4c33-a5d6-ed6aba517ca8",
        "parentId" : "8ff9a4b9-9ef7-4f90-a4db-0a32261622cb",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "done\n",
        "createdAt" : "2016-08-19T07:35:47Z",
        "updatedAt" : "2016-08-20T13:59:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e792d4117d8735784f4d830ad1c9d4f68cfee145",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +79,83 @@// and creates an exec.ExitError from it.\ntype errorDecoderV4 struct{}\n\nfunc (d *errorDecoderV4) decode(message []byte) error {\n\tstatus := unversioned.Status{}"
  }
]