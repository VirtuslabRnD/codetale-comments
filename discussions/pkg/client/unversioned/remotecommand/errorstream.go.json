[
  {
    "id" : "b5f488ea-4973-4860-b7e5-30c3939eab19",
    "prId" : 26541,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2e1ef0e-6cac-44e9-8463-408fa8c78efc",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "godoc\n",
        "createdAt" : "2016-08-16T12:52:02Z",
        "updatedAt" : "2016-08-20T13:59:09Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "dc381002-b7aa-4da4-a005-b71636cc0e20",
        "parentId" : "d2e1ef0e-6cac-44e9-8463-408fa8c78efc",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "done\n",
        "createdAt" : "2016-08-16T13:02:17Z",
        "updatedAt" : "2016-08-20T13:59:09Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e792d4117d8735784f4d830ad1c9d4f68cfee145",
    "line" : null,
    "diffHunk" : "@@ -1,1 +34,38 @@// command exited successfully) to the returned error channel, and closes it.\n// This function returns immediately.\nfunc watchErrorStream(errorStream io.Reader, d errorStreamDecoder) chan error {\n\terrorChan := make(chan error)\n"
  }
]