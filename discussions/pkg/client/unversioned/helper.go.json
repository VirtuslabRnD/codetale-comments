[
  {
    "id" : "5d842d8c-237f-4857-abe6-fdd54279f449",
    "prId" : 45743,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45743#pullrequestreview-38403113",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb9f8358-052a-4f56-a397-336e864ec714",
        "parentId" : null,
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "do we want to glog when this is nil to help tracing?",
        "createdAt" : "2017-05-16T12:17:42Z",
        "updatedAt" : "2017-05-17T11:18:37Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      },
      {
        "id" : "af25288e-71cc-4aca-847e-ebffa018187c",
        "parentId" : "eb9f8358-052a-4f56-a397-336e864ec714",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> do we want to glog when this is nil to help tracing?\r\n\r\nI think we want to go the other way around.  Someday, someone will allow the groupVersion to be nil and chase the panics.",
        "createdAt" : "2017-05-16T14:24:29Z",
        "updatedAt" : "2017-05-17T11:18:37Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "edd2d973a3c777afd691d6abe7b1e6420ad43cba",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +38,42 @@\t}\n\t// TODO chase down uses and tolerate nil\n\tif config.GroupVersion == nil {\n\t\tconfig.GroupVersion = &schema.GroupVersion{}\n\t}"
  },
  {
    "id" : "07df419b-cce5-49fd-9998-91acc8e74560",
    "prId" : 29187,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2765e6c-5c5e-44af-91c1-d20c8bfd7162",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Why are you doing this check?  Why is the core group different from other groups?\n",
        "createdAt" : "2016-07-26T12:40:03Z",
        "updatedAt" : "2016-07-26T12:40:03Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e496fd8ce0af1ffb124332055383b4ab05ccf6d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +259,263 @@\t\tconfig.APIPath = legacyAPIPath\n\t}\n\tif config.GroupVersion == nil || config.GroupVersion.Group != api.GroupName {\n\t\tg, err := registered.Group(api.GroupName)\n\t\tif err != nil {"
  },
  {
    "id" : "78be4d92-eb4a-45d5-859e-d2f51c8d02e1",
    "prId" : 29187,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3aa6187-9878-42fc-8527-753fd1237c29",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Same question here.  If you're trying to say \"the user didn't specify a group because it was empty\", you should be checking for empty group version equality.\n",
        "createdAt" : "2016-07-26T12:40:45Z",
        "updatedAt" : "2016-07-26T12:40:45Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "0e116b24-15c3-4332-be49-31f794f3545b",
        "parentId" : "e3aa6187-9878-42fc-8527-753fd1237c29",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "When we're creating a client [here](https://github.com/kubernetes/kubernetes/blob/ed3a29bd6aeb9874db4479e00fd2644176f01798/pkg/client/unversioned/helper.go#L49-L127) we are initiating all group clients at once, iow. batch, apps, rbac, etc. Currently `restclient.Config` has only one `GroupVersion` defined. This means that if I pass `batch/v2alpha1` I want only `batch` group to pick version `v2alpha1`. Others should use their defaults. Without this check I'll end up with a apps client trying to hit batch endpoints or others different combinations. As an example of such error see this listing, which was done without that check:\n\n```\n$ kubectl describe scheduledjob/pi\nW0725 20:24:15.733731   19649 request.go:341] Field selector: batch/v2alpha1 - events - involvedObject.kind - ScheduledJob: need to check if this is versioned correctly.\nW0725 20:24:15.733778   19649 request.go:341] Field selector: batch/v2alpha1 - events - involvedObject.name - pi: need to check if this is versioned correctly.\nW0725 20:24:15.733783   19649 request.go:341] Field selector: batch/v2alpha1 - events - involvedObject.namespace - default: need to check if this is versioned correctly.\nW0725 20:24:15.733790   19649 request.go:341] Field selector: batch/v2alpha1 - events - involvedObject.uid - aacdaafd-52a5-11e6-be6a-525400f25e34: need to check if this is versioned correctly.\nName:               pi\nNamespace:          default\nSchedule:           * * * * * ?\n...\n```\n",
        "createdAt" : "2016-07-26T13:07:43Z",
        "updatedAt" : "2016-07-26T20:15:13Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "1bdf1091-f88f-4f5d-9d82-49b9ae3e2fc7",
        "parentId" : "e3aa6187-9878-42fc-8527-753fd1237c29",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The clients code (that calls into that) needs to be the one doing that defaulting.  RestClient.config should know nothing about registered.\n",
        "createdAt" : "2016-07-26T20:12:07Z",
        "updatedAt" : "2016-07-26T20:12:07Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "fc496a9a-2f5d-437a-b8d9-75d32c2bdd95",
        "parentId" : "e3aa6187-9878-42fc-8527-753fd1237c29",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Also, checking group name == empty string is wrong because group name empty is a valid group.  You can only check against nil.\n",
        "createdAt" : "2016-07-26T20:15:18Z",
        "updatedAt" : "2016-07-26T20:15:18Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "d2d3b4f9-60ff-4166-85ff-1724c5fc799f",
        "parentId" : "e3aa6187-9878-42fc-8527-753fd1237c29",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Ok, this is fine.  \n",
        "createdAt" : "2016-08-01T16:28:31Z",
        "updatedAt" : "2016-08-01T16:28:31Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e496fd8ce0af1ffb124332055383b4ab05ccf6d",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +278,282 @@\t\tconfig.UserAgent = restclient.DefaultKubernetesUserAgent()\n\t}\n\tif config.GroupVersion == nil || config.GroupVersion.Group != groupName {\n\t\tg, err := registered.Group(groupName)\n\t\tif err != nil {"
  },
  {
    "id" : "3c80eb6d-1861-4209-a258-84d1d743d421",
    "prId" : 20312,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db90d3d3-0c45-463e-886c-af1d11e8189c",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@lavalamp fixed. May I get the label? Thanks for reviewing it!\n",
        "createdAt" : "2016-01-30T00:33:26Z",
        "updatedAt" : "2016-01-31T23:42:10Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "7722a50647e4285d607ccdd0c9be2038fee5371d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +622,626 @@}\n\nfunc AddUserAgent(config *Config, userAgent string) *Config {\n\tfullUserAgent := DefaultKubernetesUserAgent() + \"/\" + userAgent\n\tconfig.UserAgent = fullUserAgent"
  },
  {
    "id" : "ce5e5aef-2b2d-4ad2-98c1-89c9a3bd88d0",
    "prId" : 17535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecfc601c-3e97-4edc-8966-9b27a334984c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "@caesarxuchao is this struct ever serialized to disk?\n",
        "createdAt" : "2016-01-08T17:22:44Z",
        "updatedAt" : "2016-01-20T00:39:11Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "75f487f7bfbe0fa2d6ba23933b1a2e80e1939509",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +55,59 @@\tHost string\n\t// APIPath is a sub-path that points to an API root.\n\tAPIPath string\n\t// GroupVersion is the API version to talk to. Must be provided when initializing\n\t// a RESTClient directly. When initializing a Client, will be set with the default"
  },
  {
    "id" : "89f5140e-e017-4bcb-acc0-40ddf41a91b8",
    "prId" : 17316,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27b6ff97-e381-4cc9-805f-553ab543f8ad",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "comment explaining copy so it doesn't get removed in the future\n",
        "createdAt" : "2015-11-17T05:21:34Z",
        "updatedAt" : "2015-11-21T13:29:44Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a87d927588e5fb391ce71f79e97648ba4452bdc4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +283,287 @@\tswitch {\n\tcase requestedGV != nil:\n\t\tt := *requestedGV\n\t\tpreferredGV = &t\n\tcase c.GroupVersion != nil:"
  },
  {
    "id" : "1eb84093-0cfe-4a9f-ac90-538a648a6f6e",
    "prId" : 16082,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7602dc2f-13a6-4890-90e7-b5d8b6d7984f",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@deads2k \nI forked another constructor that doesn't do the empty version check.\n",
        "createdAt" : "2015-10-23T20:18:17Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "270f2370-219d-47ef-8dc8-53552b43435b",
        "parentId" : "7602dc2f-13a6-4890-90e7-b5d8b6d7984f",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "cc @krousey another thing to fix by splitting layers...\n",
        "createdAt" : "2015-10-26T20:35:11Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "69932aecb032de4b7e1e140ad0b8ad7e326bb7c5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +419,423 @@// UnversionedRESTClientFor is the same as RESTClientFor, except that it allows\n// the config.Version to be empty.\nfunc UnversionedRESTClientFor(config *Config) (*RESTClient, error) {\n\tif config.Codec == nil {\n\t\treturn nil, fmt.Errorf(\"Codec is required when initializing a RESTClient\")"
  },
  {
    "id" : "b36857a1-7af5-4684-b661-872a4a7afbb8",
    "prId" : 14941,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4243059a-a1d2-49a8-99ac-6548f6742607",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Maybe just set `baseURL.Path = \"/api\"` instead of doing the concatenation?\n",
        "createdAt" : "2015-10-06T19:23:57Z",
        "updatedAt" : "2015-10-07T23:19:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "efe7d30a6474e410c9b5f73ac960fa5c3e68c4cd",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +205,209 @@\t\treturn nil, err\n\t}\n\t// Get the groupVersions exposed at /api\n\tbaseURL.Path = \"/api\"\n\tresp, err := client.Get(baseURL.String())"
  }
]