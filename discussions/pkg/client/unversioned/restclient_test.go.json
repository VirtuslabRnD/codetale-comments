[
  {
    "id" : "72c5482e-4968-4987-8c42-df7ed0c65259",
    "prId" : 17529,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3f1ae66-0d86-4cd7-b647-83837af04a71",
        "parentId" : null,
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Change from last PR iteration: This test is now just confirming backoff in an isolated context since we dont expose functionality for parsing parameters separately...  Sorta overlaps with request_test.go.... in that indirectly tests  the parsing rather than direct.... \n but I think its still good to keep around. \n",
        "createdAt" : "2015-11-25T00:15:18Z",
        "updatedAt" : "2015-12-08T01:20:13Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "76e6281168c40521a45aba813c39702bcede3bdf",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +144,148 @@}\n\nfunc TestCreateBackoffManager(t *testing.T) {\n\n\ttheUrl, _ := url.Parse(\"http://localhost\")"
  },
  {
    "id" : "ea969a7c-eac4-4a41-8faf-ac0e4b327b8d",
    "prId" : 17529,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc4facff-b01b-4a92-bf1a-0222d1a0415d",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Again, I'd prefer to not have to manipulate env variables for testing.\n",
        "createdAt" : "2015-12-02T21:07:23Z",
        "updatedAt" : "2015-12-08T01:20:13Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "6985f585-4b90-4ba4-b1b9-a595d671ad0a",
        "parentId" : "dc4facff-b01b-4a92-bf1a-0222d1a0415d",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Id like to push back on this... unless you insist, because:\n\nnow that we've coupled the reading of env vars to the creation of the struct, we really need this test. \n\n**I agree** its an unwanted system side effect, but we need a good unit test for this functionality, and the cost of **not** having such a test is much higher than the cost of having a short lived environment var side effect.  \n\nif folks insist, i can remove it but then i think maybe we should consider moving the \"read..\" into two separate functions to keep test coverage ratio.... or i guess we will not have a test for this function...  not the end of the world... but i think its better that we have a test that includes the inputs (which unfortunately are only created via this side-effect)\n",
        "createdAt" : "2015-12-02T23:39:48Z",
        "updatedAt" : "2015-12-08T01:20:13Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "82a24937-2a6b-47ae-a0fa-7faf92d7494b",
        "parentId" : "dc4facff-b01b-4a92-bf1a-0222d1a0415d",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "OK I'm fine with this then.\n",
        "createdAt" : "2015-12-03T17:49:31Z",
        "updatedAt" : "2015-12-08T01:20:13Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "76e6281168c40521a45aba813c39702bcede3bdf",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +150,154 @@\t// 1 second base backoff + duration of 2 seconds -> exponential backoff for requests.\n\tos.Setenv(envBackoffBase, \"1\")\n\tos.Setenv(envBackoffDuration, \"2\")\n\tbackoff := readExpBackoffConfig()\n\tbackoff.UpdateBackoff(theUrl, nil, 500)"
  }
]