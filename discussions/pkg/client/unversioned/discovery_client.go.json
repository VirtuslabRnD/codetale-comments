[
  {
    "id" : "ce37d5cc-9085-4720-8338-49b6e1083321",
    "prId" : 16082,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "714630e6-0d0f-4210-a154-9e7b28ff8ce9",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Not all errors are ignorable.  You probably only want to ignore 404's, right?\n",
        "createdAt" : "2015-10-22T18:51:20Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "e1d045f5-de3b-42e7-a5b3-911d828e5660",
        "parentId" : "714630e6-0d0f-4210-a154-9e7b28ff8ce9",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yes. I will fix it.\n",
        "createdAt" : "2015-10-22T20:21:00Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "ce69f2a4-433c-437e-91e7-e235562826cd",
        "parentId" : "714630e6-0d0f-4210-a154-9e7b28ff8ce9",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@deads2k this is fixed. PTAL. Thank you.\n",
        "createdAt" : "2015-10-22T23:39:56Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "69932aecb032de4b7e1e140ad0b8ad7e326bb7c5",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +77,81 @@\terr = d.Get().AbsPath(\"/api\").Do().Into(v)\n\tapiGroup := unversioned.APIGroup{}\n\tif err == nil {\n\t\tapiGroup = apiVersionsToAPIGroup(v)\n\t}"
  },
  {
    "id" : "a15b4961-a252-4250-af57-67b270dbb9e7",
    "prId" : 16082,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81b7485b-f6f5-45db-830f-6ccf08ab6ebe",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Code like this is worrying me.  Is the next version of the kube API going to have a group?\n",
        "createdAt" : "2015-10-22T18:53:05Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "6d0206a1-1304-41d9-9e23-6dba239efaf3",
        "parentId" : "81b7485b-f6f5-45db-830f-6ccf08ab6ebe",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I don't follow your question, could you clarify?\n",
        "createdAt" : "2015-10-22T20:23:28Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "eeb095bd-3872-4c00-b46b-a758a4a706fa",
        "parentId" : "81b7485b-f6f5-45db-830f-6ccf08ab6ebe",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> I don't follow your question, could you clarify?\n\nWhen kube gets a `v2`, will this code have to become?\n\n``` go\nif groupVersion == \"v1\" || groupVersion == \"v2\"{\n```\n",
        "createdAt" : "2015-10-22T20:28:10Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "aaad245d-e2ef-43df-8dcc-4e858732ae05",
        "parentId" : "81b7485b-f6f5-45db-830f-6ccf08ab6ebe",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "No. I think the plan is breaking the kube API to smaller groups and each group evolves in their own pace. We won't have a monolithic v2 API.\n",
        "createdAt" : "2015-10-22T20:40:12Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "e2c8115b-9ea5-47c7-a565-8037a0e3669f",
        "parentId" : "81b7485b-f6f5-45db-830f-6ccf08ab6ebe",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Does `/api/v1` return a list of server resources in 1.0? Is this expected to work against 1.0 servers?\n",
        "createdAt" : "2015-10-22T23:49:36Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2ffe03c2-23c2-4e46-b645-eb62878201f3",
        "parentId" : "81b7485b-f6f5-45db-830f-6ccf08ab6ebe",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "No, that won't work. I will fix it in another PR.\n",
        "createdAt" : "2015-10-22T23:52:07Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "f75ad617-133e-43c0-98ee-2ece9a2f9fc4",
        "parentId" : "81b7485b-f6f5-45db-830f-6ccf08ab6ebe",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yes, \"v1\" is the only exception to the group/version format we ever intend to have.\n",
        "createdAt" : "2015-10-22T23:56:51Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "69932aecb032de4b7e1e140ad0b8ad7e326bb7c5",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +103,107 @@func (d *DiscoveryClient) ServerResourcesForGroupVersion(groupVersion string) (resources *unversioned.APIResourceList, err error) {\n\turl := url.URL{}\n\tif groupVersion == \"v1\" {\n\t\turl.Path = \"/api/\" + groupVersion\n\t} else {"
  },
  {
    "id" : "e8e5833b-9bc4-4e2b-9a9b-53b87190f733",
    "prId" : 16082,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2e224fc-e4be-403f-aec9-5e731fa3a2d8",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "If an error happens, does this get our nice status error type? If not that'd be a reason to switch to a more complicated codec.\n",
        "createdAt" : "2015-10-22T23:58:33Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c068a4b4-79aa-41f0-bd11-b6be7e715567",
        "parentId" : "a2e224fc-e4be-403f-aec9-5e731fa3a2d8",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Consider eating NotFound errors here, too?\n",
        "createdAt" : "2015-10-23T00:05:25Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "912d1cc1-763b-4f9f-97df-1411432ffbab",
        "parentId" : "a2e224fc-e4be-403f-aec9-5e731fa3a2d8",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "We have to. But I prefer to make that another PR.\n",
        "createdAt" : "2015-10-23T05:14:33Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "7abd9a9f-3608-43a3-9847-864b97e40862",
        "parentId" : "a2e224fc-e4be-403f-aec9-5e731fa3a2d8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> I prefer to make that another PR\n\nIf it's a small change that's easier to understand in the context of this PR, let's go ahead and fold it in\n",
        "createdAt" : "2015-10-23T05:16:59Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5ca83cbc-38ce-4c0a-b1f7-cbf39fedc79b",
        "parentId" : "a2e224fc-e4be-403f-aec9-5e731fa3a2d8",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "> If an error happens, does this get our nice status error type?\n\nYes.\n\nv1.1 server does not encode Status, so the unmarshal the json will decode it.\n\nin v1.0, Status is in v1 types.go, server will encode Status to v1. jsonCodec will decode it to unversioned.Status and ignore the TypeMeta. So it still works.\n",
        "createdAt" : "2015-10-23T05:21:36Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "0cefab67-cc61-49bb-b260-01ae82f0985b",
        "parentId" : "a2e224fc-e4be-403f-aec9-5e731fa3a2d8",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@liggitt ok :)\n",
        "createdAt" : "2015-10-23T05:24:14Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "0046c925-c82a-4315-a4c5-cccca18a06ef",
        "parentId" : "a2e224fc-e4be-403f-aec9-5e731fa3a2d8",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "added.\n",
        "createdAt" : "2015-10-23T05:54:18Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "69932aecb032de4b7e1e140ad0b8ad7e326bb7c5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +109,113 @@\t}\n\tresources = &unversioned.APIResourceList{}\n\terr = d.Get().AbsPath(url.String()).Do().Into(resources)\n\tif err != nil {\n\t\t// ignore 403 or 404 error to be compatible with an v1.0 server."
  },
  {
    "id" : "78c29c8c-f742-4e13-9db8-94ff83f56cc5",
    "prId" : 16082,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5aa1973e-7492-4651-ac7a-60f51b49647a",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "move this before the the `if err == nil` and you won't need to conditionally set `apiGroup`\n",
        "createdAt" : "2015-10-23T18:46:14Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "d61330a6-a356-43f7-aa41-0f12a2d31a7f",
        "parentId" : "5aa1973e-7492-4651-ac7a-60f51b49647a",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> move this before the the if err == nil and you won't need to conditionally set apiGroup\n\nnm, that was wrong.\n",
        "createdAt" : "2015-10-23T18:46:45Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "69932aecb032de4b7e1e140ad0b8ad7e326bb7c5",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +80,84 @@\t\tapiGroup = apiVersionsToAPIGroup(v)\n\t}\n\tif err != nil && !errors.IsNotFound(err) && !errors.IsForbidden(err) {\n\t\treturn nil, err\n\t}"
  },
  {
    "id" : "d43aa04c-6b9c-47e1-a3ec-c6fa42936632",
    "prId" : 16082,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9290ff25-cdbc-4080-a508-6379e0d6a857",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@deads2k Version is set to empty. The base URL will be to the host root.\n",
        "createdAt" : "2015-10-23T20:19:54Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "69932aecb032de4b7e1e140ad0b8ad7e326bb7c5",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +141,145 @@func setDiscoveryDefaults(config *Config) error {\n\tconfig.Prefix = \"\"\n\tconfig.Version = \"\"\n\t// Discovery client deals with unversioned objects, so we use api.Codec.\n\tconfig.Codec = api.Codec"
  },
  {
    "id" : "409274d5-4298-4ce1-9649-1b98e2d4c81f",
    "prId" : 16082,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83f1ac49-9d2c-4563-b124-d2cfbdbff597",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "changed to api.Codec\n",
        "createdAt" : "2015-10-27T23:10:52Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "69932aecb032de4b7e1e140ad0b8ad7e326bb7c5",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +143,147 @@\tconfig.Version = \"\"\n\t// Discovery client deals with unversioned objects, so we use api.Codec.\n\tconfig.Codec = api.Codec\n\treturn nil\n}"
  },
  {
    "id" : "3b592786-96d5-4c20-b131-f0a10be7d2a2",
    "prId" : 15659,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e4ef5c6-278b-42bc-9f2c-cb6524ec60f6",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "ServerGroupsInterface\n",
        "createdAt" : "2015-10-16T18:59:09Z",
        "updatedAt" : "2015-10-16T21:20:28Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "b74af4fc-3470-4117-b972-6624775085ad",
        "parentId" : "7e4ef5c6-278b-42bc-9f2c-cb6524ec60f6",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Thanks. BTW, do you have any preference over these names? Are they too verbose?\n",
        "createdAt" : "2015-10-16T19:00:44Z",
        "updatedAt" : "2015-10-16T21:20:28Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "06df349a-8861-4a75-9b6d-7d72704f0636",
        "parentId" : "7e4ef5c6-278b-42bc-9f2c-cb6524ec60f6",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "> Are they too verbose?\n\nYes. But, that matches with the style of the rest of the package. In my ideal world, these interfaces wouldn't exist. It's a long rant of mine nicely summarized by [this article](https://medium.com/@rakyll/interface-pollution-in-go-7d58bccec275), so I won't repeat it here. If I were to define an interface, I wouldn't put Interface in it's name.\n\nBut more importantly this matches the current style of this package, so I probably wouldn't change it too much.\n",
        "createdAt" : "2015-10-16T19:32:35Z",
        "updatedAt" : "2015-10-16T21:20:28Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "5859da3e1fd8ad3ac927fab8a412e06255f40ace",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@}\n\n// GroupsInterface has methods for obtaining supported groups on the API server\ntype ServerGroupsInterface interface {\n\t// ServerGroups returns the supported groups, with information like supported versions and the"
  },
  {
    "id" : "6ba49469-b5f2-49df-99a5-c526b1045bee",
    "prId" : 15659,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8c66ead-626b-4a76-9db6-14c39bc6ea2f",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Document\n",
        "createdAt" : "2015-10-16T19:00:56Z",
        "updatedAt" : "2015-10-16T21:20:28Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "5859da3e1fd8ad3ac927fab8a412e06255f40ace",
    "line" : null,
    "diffHunk" : "@@ -1,1 +28,32 @@// DiscoveryInterface holds the methods that discover server-supported API groups,\n// versions and resources.\ntype DiscoveryInterface interface {\n\tServerGroupsInterface\n\tServerResourcesInterface"
  },
  {
    "id" : "8f805fcd-b05d-4784-844c-ed65512aabff",
    "prId" : 15659,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a68c18f-184e-4ff0-a413-617565715cbf",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@krousey I made a copy of d.baseURL to avoid race condition\n",
        "createdAt" : "2015-10-16T21:08:33Z",
        "updatedAt" : "2015-10-16T21:20:28Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "5859da3e1fd8ad3ac927fab8a412e06255f40ace",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +84,88 @@func (d *DiscoveryClient) ServerGroups() (apiGroupList *unversioned.APIGroupList, err error) {\n\t// Get the groupVersions exposed at /api\n\turl := d.baseURL\n\turl.Path = \"/api\"\n\tresp, err := d.get(url.String())"
  },
  {
    "id" : "acc47cf8-b5eb-40c0-9c42-3d14b3a1330d",
    "prId" : 15659,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "058302c2-47a4-4851-8762-14bf88855443",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Is APIGroups the function name? Many of the comments in this file contains incorrect function name. \n",
        "createdAt" : "2015-10-19T23:03:51Z",
        "updatedAt" : "2015-10-19T23:03:51Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "d92cf2f9-e594-45a9-9b92-ac0357a1dfb9",
        "parentId" : "058302c2-47a4-4851-8762-14bf88855443",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Thanks. I submitted a commit to fix these, I guess the commit is lost during the squash. I'll submit a patch.\n",
        "createdAt" : "2015-10-19T23:05:59Z",
        "updatedAt" : "2015-10-19T23:05:59Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "5859da3e1fd8ad3ac927fab8a412e06255f40ace",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +80,84 @@}\n\n// APIGroups returns the supported groups, with information like supported versions and the\n// preferred version.\nfunc (d *DiscoveryClient) ServerGroups() (apiGroupList *unversioned.APIGroupList, err error) {"
  }
]