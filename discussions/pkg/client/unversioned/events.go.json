[
  {
    "id" : "d61515b8-66f0-4a31-ab30-94c8cce844f3",
    "prId" : 19307,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4133d43-2814-4b89-b90a-6d374578e1a0",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "What about the unnamespaced LIST and WATCH?\n",
        "createdAt" : "2016-01-06T00:25:03Z",
        "updatedAt" : "2016-01-07T00:21:15Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "009a45a2-f691-4571-a19e-d67ec3638213",
        "parentId" : "d4133d43-2814-4b89-b90a-6d374578e1a0",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "When building the URL, if `len(e.namespace)==0`, the namespace won't be shown in the path. That's how all other clients (e.g., the client for Pod) work.\n",
        "createdAt" : "2016-01-06T00:29:24Z",
        "updatedAt" : "2016-01-07T00:21:15Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "579cabea-5fe8-45a4-b9c2-7885d38bd2a0",
        "parentId" : "d4133d43-2814-4b89-b90a-6d374578e1a0",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "https://github.com/kubernetes/kubernetes/blob/master/pkg/client/unversioned/request.go#L558\n",
        "createdAt" : "2016-01-06T00:29:58Z",
        "updatedAt" : "2016-01-07T00:21:15Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea0086468ccd283e1cd7f3268d7fb076a206a0a8",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +121,125 @@\tresult := &api.EventList{}\n\terr := e.client.Get().\n\t\tNamespace(e.namespace).\n\t\tResource(\"events\").\n\t\tVersionedParams(&opts, api.Scheme)."
  },
  {
    "id" : "ca963d63-4f85-4636-ad94-8ca3e32b0dfe",
    "prId" : 19307,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d727b3b-b39a-4986-9e03-73373177ef60",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Same - What about the unnamespaced LIST and WATCH?\n",
        "createdAt" : "2016-01-06T00:25:11Z",
        "updatedAt" : "2016-01-07T00:21:15Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea0086468ccd283e1cd7f3268d7fb076a206a0a8",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +145,149 @@\treturn e.client.Get().\n\t\tPrefix(\"watch\").\n\t\tNamespace(e.namespace).\n\t\tResource(\"events\").\n\t\tVersionedParams(&opts, api.Scheme)."
  },
  {
    "id" : "2afc997e-cc2c-4d92-9e25-33a2aba2ad89",
    "prId" : 18290,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d4259be-3a5c-41e8-9983-6c38643d62c5",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Maybe I missed it, but what prevents multiple overlapping deletes of the same collection?\n",
        "createdAt" : "2015-12-07T22:28:16Z",
        "updatedAt" : "2015-12-10T08:46:34Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "5a6af983-3bd3-46e3-9462-61060883f3fe",
        "parentId" : "7d4259be-3a5c-41e8-9983-6c38643d62c5",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Actually nothing. But I don't think it's a problem - if the second one will try to delete object that is already deleted, it will return an error.\n",
        "createdAt" : "2015-12-08T08:24:57Z",
        "updatedAt" : "2015-12-10T08:46:34Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f28bb68d8ce42ac803ec22574d5c3c19affeb0b9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +188,192 @@\n// DeleteCollection deletes a collection of objects.\nfunc (e *events) DeleteCollection(options *api.DeleteOptions, listOptions unversioned.ListOptions) error {\n\t// TODO: to make this reusable in other client libraries\n\tif options == nil {"
  },
  {
    "id" : "041893d5-5260-4945-80a7-8bcda4e76bca",
    "prId" : 18290,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9f7c278-0bb6-401f-9a15-12e93d65f183",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "nit Godoc please\n",
        "createdAt" : "2015-12-10T00:03:27Z",
        "updatedAt" : "2015-12-10T08:46:34Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "c312bdb5-05cf-48dc-9e50-9c47edf2869f",
        "parentId" : "b9f7c278-0bb6-401f-9a15-12e93d65f183",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "done\n",
        "createdAt" : "2015-12-10T08:40:12Z",
        "updatedAt" : "2015-12-10T08:46:34Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f28bb68d8ce42ac803ec22574d5c3c19affeb0b9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +44,48 @@\tDelete(name string) error\n\t// DeleteCollection deletes a collection of events.\n\tDeleteCollection(options *api.DeleteOptions, listOptions unversioned.ListOptions) error\n\t// Returns the appropriate field selector based on the API version being used to communicate with the server.\n\t// The returned field selector can be used with List and Watch to filter desired events."
  },
  {
    "id" : "434f224a-d084-458f-9bef-7214a6ae3c3f",
    "prId" : 18229,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4b34ebb-305c-4d73-9b4d-d2fbb92f80e7",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "events_test.go needs this, so I made it public.\n",
        "createdAt" : "2015-12-04T21:46:53Z",
        "updatedAt" : "2015-12-09T18:40:15Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f0eb521a63020b41358c6b0744608f1699e944c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +206,210 @@\n// Returns the appropriate field label to use for name of the involved object as per the given API version.\nfunc GetInvolvedObjectNameFieldLabel(version string) string {\n\treturn \"involvedObject.name\"\n}"
  }
]