[
  {
    "id" : "1888fb19-cbc4-45bc-8f64-c0eddd6f1ecb",
    "prId" : 7556,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "650e5171-6f95-48a4-bf49-5e56b3df8a2c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'm a little nervous that the else of this doesn't set out.%s = nil; out could be a pre-existing object...\n",
        "createdAt" : "2015-05-04T18:54:54Z",
        "updatedAt" : "2015-05-07T07:28:08Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a88be022-bb8e-4ddc-b98d-fbce653d2af8",
        "parentId" : "650e5171-6f95-48a4-bf49-5e56b3df8a2c",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Done (here are in few other places).\n",
        "createdAt" : "2015-05-05T07:29:04Z",
        "updatedAt" : "2015-05-07T07:28:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "156795f29845b43583d496aa77ec67887ada9bed",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +534,538 @@\t}\n\n\tifFormat := \"if in.%s != nil {\\n\"\n\tifStmt := fmt.Sprintf(ifFormat, inField.Name)\n\tif err := writeLine(w, indent, ifStmt); err != nil {"
  },
  {
    "id" : "5658c2c9-5355-42f6-a45f-abcebfb2867f",
    "prId" : 7354,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cf1c7a0-b9de-466a-97a0-9f2c907d2174",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Check out http://golang.org/pkg/go/format/#Source for auto-formatting of this code. Then you could ignore tabbing.\n",
        "createdAt" : "2015-04-27T17:19:28Z",
        "updatedAt" : "2015-04-27T17:19:28Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "922555f048677c291524ff8e86f0df1d49650ab6",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +411,415 @@\t\treturn err\n\t}\n\tif err := writeLine(w, indent+1, \"return err\\n\"); err != nil {\n\t\treturn err\n\t}"
  },
  {
    "id" : "ddbc1000-5fb6-4111-8b9c-5f426ab4243a",
    "prId" : 7354,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "514644d0-1994-4eb9-9aca-728d89da421f",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Maybe `if out.%s == nil { out.%s = new(%s) } \\n` ?\n",
        "createdAt" : "2015-04-27T17:23:45Z",
        "updatedAt" : "2015-04-27T17:23:45Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "922555f048677c291524ff8e86f0df1d49650ab6",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +379,383 @@\t\t\t\treturn err\n\t\t\t}\n\t\t\tnewFormat := \"out.%s = new(%s)\\n\"\n\t\t\tnewStmt := fmt.Sprintf(newFormat, outField.Name, g.typeName(outField.Type.Elem()))\n\t\t\tif err := writeLine(w, indent+1, newStmt); err != nil {"
  },
  {
    "id" : "8fc15388-6aa5-4698-b2da-e4ca94a25b6a",
    "prId" : 7107,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fe338cb-cd08-489c-bc22-09ee28c63922",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Suggestion: look into the template library... I expect these would be much easier to understand as templates than this way, although I could be wrong.\n",
        "createdAt" : "2015-04-25T00:11:26Z",
        "updatedAt" : "2015-04-25T00:11:26Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "7c8baa64-05bc-4588-ab39-cc7b893a72f4",
        "parentId" : "0fe338cb-cd08-489c-bc22-09ee28c63922",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "> On Apr 24, 2015, at 8:11 PM, Daniel Smith notifications@github.com wrote:\n> \n> In pkg/conversion/generator.go:\n> \n> > -   format := \"func(in *%s, out *%s, s conversion.Scope) error {\\n\"\n> > -   stmt := fmt.Sprintf(format, inType, outType)\n> > -   return writeLine(w, indent, stmt)\n> >   +}\n> >   +\n> >   +func writeFooter(w io.Writer, indent int) error {\n> > -   if err := writeLine(w, indent+1, \"return nil\\n\"); err != nil {\n> > -       return err\n> > -   }\n> > -   if err := writeLine(w, indent, \"},\\n\"); err != nil {\n> > -       return err\n> > -   }\n> > -   return nil\n> >   +}\n> >   +\n> >   +func (g *generator) writeConversionForMap(w io.Writer, inField, outField reflect.StructField, indent int) error {\n> >   Suggestion: look into the template library... I expect these would be much easier to understand as templates than this way, although I could be wrong.\n> \n> There seems to be an interesting mix.  ugorji uses templates and gogoprotobuf uses this pattern.\n> â€”\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2015-04-25T00:54:01Z",
        "updatedAt" : "2015-04-25T00:54:01Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "c82b22ca-c847-43fe-82a5-96c07883fe5f",
        "parentId" : "0fe338cb-cd08-489c-bc22-09ee28c63922",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah I was playing around with templates over the weekend and they're perhaps marginally better, but they leave a lot to be desired.\n",
        "createdAt" : "2015-04-27T18:22:22Z",
        "updatedAt" : "2015-04-27T18:22:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f919a44c234c806582a5997c6b880075e90d52a",
    "line" : 235,
    "diffHunk" : "@@ -1,1 +233,237 @@}\n\nfunc (g *generator) writeConversionForMap(w io.Writer, inField, outField reflect.StructField, indent int) error {\n\tifFormat := \"if in.%s != nil {\\n\"\n\tifStmt := fmt.Sprintf(ifFormat, inField.Name)"
  }
]