[
  {
    "id" : "203b005c-ea8e-4bda-bf36-10129b6172b2",
    "prId" : 6736,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1962e405-2a3e-472c-a632-bae4f7dfd115",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "minor nit-- fuzzing isn't cheap, you'll probably get slightly more accurate times if you reset the timer here.\n",
        "createdAt" : "2015-04-13T17:41:43Z",
        "updatedAt" : "2015-04-13T17:52:42Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "016d74de-3bc3-4c97-9d78-a4377fb82cae",
        "parentId" : "1962e405-2a3e-472c-a632-bae4f7dfd115",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Good point.\n\n----- Original Message -----\n\n> > -       \"hello world\",\n> > -       struct {\n> > -           A, B, C struct {\n> > -               D map[string]int\n> > -           }\n> > -           X []int\n> > -           Y []byte\n> > -       }{},\n> > -   }\n> > -   f :=\n> >   fuzz.New().RandSource(rand.NewSource(1)).NilChance(.5).NumElements(0, 100)\n> > -   for i := range table {\n> > -       out := table[i]\n> > -       obj := reflect.New(reflect.TypeOf(out)).Interface()\n> > -       f.Fuzz(obj)\n> > -       table[i] = obj\n> > -   }\n> \n> minor nit-- fuzzing isn't cheap, you'll probably get slightly more accurate\n> times if you reset the timer here.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/6736/files#r28260120\n",
        "createdAt" : "2015-04-13T17:50:23Z",
        "updatedAt" : "2015-04-13T17:52:42Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "00142fef-c98f-4711-abb4-c4fb489b6bc2",
        "parentId" : "1962e405-2a3e-472c-a632-bae4f7dfd115",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Nits addressed, will wait for your race fix.\n\n----- Original Message -----\n\n> Good point.\n> \n> ----- Original Message -----\n> \n> > > -     \"hello world\",\n> > > -     struct {\n> > > -         A, B, C struct {\n> > > -             D map[string]int\n> > > -         }\n> > > -         X []int\n> > > -         Y []byte\n> > > -     }{},\n> > > - }\n> > > - f :=\n> > >   fuzz.New().RandSource(rand.NewSource(1)).NilChance(.5).NumElements(0,\n> > >   100)\n> > > - for i := range table {\n> > > -     out := table[i]\n> > > -     obj := reflect.New(reflect.TypeOf(out)).Interface()\n> > > -     f.Fuzz(obj)\n> > > -     table[i] = obj\n> > > - }\n> > \n> > minor nit-- fuzzing isn't cheap, you'll probably get slightly more accurate\n> > times if you reset the timer here.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/GoogleCloudPlatform/kubernetes/pull/6736/files#r28260120\n",
        "createdAt" : "2015-04-13T17:52:57Z",
        "updatedAt" : "2015-04-13T17:52:57Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "f95cc2b8f2c6fdbae4e7f2fc4ee369510f129dcb",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +131,135 @@\t\tf.Fuzz(obj)\n\t\ttable[i] = obj\n\t}\n\n\tb.ResetTimer()"
  },
  {
    "id" : "4a8e4282-5730-400b-a979-1fe214a29d06",
    "prId" : 6435,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e809ec7-427b-4b77-aab6-f525e108ad5f",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "interesting cases:\n\nmap with values\nslice with value\narray\n",
        "createdAt" : "2015-04-10T19:42:32Z",
        "updatedAt" : "2015-04-10T20:27:22Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "a307586e-9761-4b77-83a3-1640a5b8f219",
        "parentId" : "3e809ec7-427b-4b77-aab6-f525e108ad5f",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "the fuzz step adds values; I'll add an array type.\n",
        "createdAt" : "2015-04-10T20:14:22Z",
        "updatedAt" : "2015-04-10T20:27:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "f591873af7c12668c06736eb12f71ab8f325fc8c",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@\tf := fuzz.New().NilChance(.5).NumElements(0, 100)\n\ttable := []interface{}{\n\t\tmap[string]string{},\n\t\tint(5),\n\t\t\"hello world\","
  },
  {
    "id" : "ecf95f9c-b028-46d6-82ff-ca7f587bc8dd",
    "prId" : 6435,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26fe2940-156c-46d0-a2bb-9fd4dfdc046b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This doesn't prove things like non-aliasing of slices\n",
        "createdAt" : "2015-04-10T19:43:11Z",
        "updatedAt" : "2015-04-10T20:27:22Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "5ebdc275-438a-4874-8490-1ae8dab603d2",
        "parentId" : "26fe2940-156c-46d0-a2bb-9fd4dfdc046b",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "hm, yes, that should be tested. One moment...\n",
        "createdAt" : "2015-04-10T20:18:24Z",
        "updatedAt" : "2015-04-10T20:27:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "f591873af7c12668c06736eb12f71ab8f325fc8c",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@\t\t\tcontinue\n\t\t}\n\t\tif e, a := obj, obj2; !semantic.DeepEqual(e, a) {\n\t\t\tt.Errorf(\"expected %#v\\ngot %#v\", e, a)\n\t\t}"
  },
  {
    "id" : "aa04aa97-b4cb-40cc-9f67-8153f7302ddb",
    "prId" : 6435,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "584f6468-60a8-4694-98e4-a9c97598ce38",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "What are you trying to exercise here?\n",
        "createdAt" : "2015-04-10T19:43:44Z",
        "updatedAt" : "2015-04-10T20:27:22Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "df183965-b1f9-440c-bc04-9bb6a1bbb031",
        "parentId" : "584f6468-60a8-4694-98e4-a9c97598ce38",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is just making a new object to fuzz.\n",
        "createdAt" : "2015-04-10T20:18:11Z",
        "updatedAt" : "2015-04-10T20:27:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "f591873af7c12668c06736eb12f71ab8f325fc8c",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@\t\t}\n\n\t\tobj3 := reflect.New(reflect.TypeOf(obj)).Interface()\n\t\tf.Fuzz(obj3)\n\t\tobj4, err := DeepCopy(obj3)"
  }
]