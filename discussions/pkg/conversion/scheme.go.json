[
  {
    "id" : "38dc2fbc-b73b-4334-9088-a8ff70ebf53a",
    "prId" : 17922,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d184690d-90d9-473a-8122-ad77fa786a5e",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Do the functions replace or get appended to the existing ones?\n",
        "createdAt" : "2015-12-02T00:24:17Z",
        "updatedAt" : "2016-01-22T18:27:33Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "045714d1-7650-4ac9-be84-b9c87738a307",
        "parentId" : "d184690d-90d9-473a-8122-ad77fa786a5e",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Replace, although in the specific case there is no overlap (runtime.Object\nis defined as a conversion only for one path)\n\nOn Dec 1, 2015, at 7:24 PM, Daniel Smith notifications@github.com wrote:\n\nIn pkg/conversion/scheme.go\nhttps://github.com/kubernetes/kubernetes/pull/17922#discussion_r46361588:\n\n> @@ -375,6 +380,14 @@ func (s *Scheme) Converter() *Converter {\n>   return s.converter\n>  }\n> \n> +// WithConversions returns a scheme with additional conversion functions\n\nDo the functions replace or get appended to the existing ones?\n\nâ€”\nReply to this email directly or view it on GitHub\nhttps://github.com/kubernetes/kubernetes/pull/17922/files#r46361588.\n",
        "createdAt" : "2015-12-02T04:33:19Z",
        "updatedAt" : "2016-01-22T18:27:33Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "f8f18d8d-60ba-4003-861f-63f19b64b5f0",
        "parentId" : "d184690d-90d9-473a-8122-ad77fa786a5e",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Please change the comment, then...\n",
        "createdAt" : "2015-12-02T21:58:26Z",
        "updatedAt" : "2016-01-22T18:27:33Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "3262d8efd8ddbd90b0f938c0ebf4dd03d470a1fb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +407,411 @@}\n\n// WithConversions returns a scheme with additional conversion functions\nfunc (s *Scheme) WithConversions(fns ConversionFuncs) *Scheme {\n\tc := s.converter.WithConversions(fns)"
  },
  {
    "id" : "555ca85c-9fe4-4cc7-89e8-8e25bb32b083",
    "prId" : 17796,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cdef9c7-17dd-4256-9a9c-0dff2d7fbc38",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "??? what's this stuff\n",
        "createdAt" : "2015-12-11T22:47:58Z",
        "updatedAt" : "2015-12-11T22:47:58Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f764e0099c48de55f6f2dfbffd00e9aeb2bb37c1",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +367,371 @@\t// \t\t\treturn nil, err\n\t// \t\t}\n\t// =======\n\tif err := s.SetVersionAndKind(outGV.String(), outGVK.Kind, out); err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "50bc6a4f-7fe0-43f8-834b-1dac7ff3f72c",
    "prId" : 17515,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6e6889a-1009-4488-b392-598fc346e7aa",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I would prefer we avoid acronyms if possible:  groupVersionKindToType\n\nIf unversioned.GroupVersionKind is too much of a mouthful, we should shorten that into more abstract term ;-)\n",
        "createdAt" : "2015-11-19T19:45:42Z",
        "updatedAt" : "2015-11-25T17:15:52Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e9b9f2da3224daa67fa3610185b5a51d7713839",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +28,32 @@\t// versionMap allows one to figure out the go type of an object with\n\t// the given version and name.\n\tgvkToType map[unversioned.GroupVersionKind]reflect.Type\n\n\t// typeToGroupVersion allows one to find metadata for a given go object."
  },
  {
    "id" : "829d1dd6-7e22-4d08-8358-23ce53c56972",
    "prId" : 17515,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "030008dc-059f-4320-a15a-c4935bb6b917",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "same general comment here on acronyms.\n\ni think the api server code is hard enough to follow that abbreviating GroupVersionKind makes it worse for new eyes.\n\nalso would need to align the name with teh comment.\n",
        "createdAt" : "2015-11-19T19:46:34Z",
        "updatedAt" : "2015-11-25T17:15:52Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "4bd7cf18-cc67-4212-b2c0-cdd0405a6fe5",
        "parentId" : "030008dc-059f-4320-a15a-c4935bb6b917",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I am going to withhold comments on the general usage of 'gvk' throughout the rest of the PR, but want to record my general distaste for abbreviaion, and believe it makes it harder for new folks tor reason about in the long run.\n",
        "createdAt" : "2015-11-19T19:49:22Z",
        "updatedAt" : "2015-11-25T17:15:52Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e9b9f2da3224daa67fa3610185b5a51d7713839",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +32,36 @@\t// typeToGroupVersion allows one to find metadata for a given go object.\n\t// The reflect.Type we index by should *not* be a pointer.\n\ttypeToGVK map[reflect.Type][]unversioned.GroupVersionKind\n\n\t// converter stores all registered conversion functions. It also has"
  },
  {
    "id" : "3eb34a49-3feb-44ac-b5a8-b3f9cb42ef4b",
    "prId" : 17515,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fce6569d-f61a-4fba-a206-bd2c66ae60c3",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "any chance we would need to protect for non len(0) above?\n",
        "createdAt" : "2015-11-19T19:50:23Z",
        "updatedAt" : "2015-11-25T17:15:52Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "369aa049-094c-40ad-8b40-6a40a853caeb",
        "parentId" : "fce6569d-f61a-4fba-a206-bd2c66ae60c3",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> any chance we would need to protect for non len(0) above?\n\nNo.  If it exists in the map, we have at least one element.\n",
        "createdAt" : "2015-11-19T19:55:44Z",
        "updatedAt" : "2015-11-25T17:15:52Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e9b9f2da3224daa67fa3610185b5a51d7713839",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +105,109 @@\t}\n\n\treturn gvks[0].Kind\n}\n"
  },
  {
    "id" : "fc8f06ac-1ced-486e-8201-24fffd0e2d4f",
    "prId" : 17515,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8307f784-1d37-47bb-bbd2-f277663d58be",
        "parentId" : null,
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "Should this method signature be changed to return a GroupVersion instead of a string?\n",
        "createdAt" : "2015-11-19T20:44:25Z",
        "updatedAt" : "2015-11-25T17:15:52Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "87bfc4f2-c712-4046-acd1-72fbf051273b",
        "parentId" : "8307f784-1d37-47bb-bbd2-f277663d58be",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Should this method signature be changed to return a GroupVersion instead of a string?\n\nYes, but I have to limit ripples.  That forces updates in another 300 spots.\n",
        "createdAt" : "2015-11-19T21:03:47Z",
        "updatedAt" : "2015-11-25T17:15:52Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e9b9f2da3224daa67fa3610185b5a51d7713839",
    "line" : 266,
    "diffHunk" : "@@ -1,1 +405,409 @@\t\treturn \"\", \"\", &notRegisteredErr{t: t}\n\t}\n\tapiVersion = gvks[0].GroupVersion().String()\n\tkind = gvks[0].Kind\n\treturn"
  }
]