[
  {
    "id" : "3f7eeeff-bcbf-42bb-9c91-6815ada57e99",
    "prId" : 17515,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8c48101-8141-4f6e-8aa2-453f95ac26c6",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "+1 to getting rid of named return arguments ;-)\n",
        "createdAt" : "2015-11-19T19:40:49Z",
        "updatedAt" : "2015-11-25T17:15:52Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e9b9f2da3224daa67fa3610185b5a51d7713839",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +49,53 @@\t\treturn nil, \"\", \"\", fmt.Errorf(\"kind not set in '%s'\", string(data))\n\t}\n\tobj, err := s.NewObject(version, kind)\n\tif err != nil {\n\t\treturn nil, \"\", \"\", err"
  },
  {
    "id" : "0c0a3991-2fc5-443b-bef1-70e46a40a6f1",
    "prId" : 16082,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17d575c3-6b8d-42f7-acf0-493369bc3e34",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "This is not necessary, but the change is consistent with other files, so I kept this change.\n",
        "createdAt" : "2015-10-27T23:11:51Z",
        "updatedAt" : "2015-10-29T16:55:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "69932aecb032de4b7e1e140ad0b8ad7e326bb7c5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +20,24 @@\t\"errors\"\n\t\"fmt\"\n\n\t\"github.com/ugorji/go/codec\"\n)"
  },
  {
    "id" : "1b3425ec-86dc-4bdd-9b49-d949eccdfe27",
    "prId" : 10200,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f7c3aee-70e4-4365-a8f1-8acebd3c57df",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Nice. Much cleaner approach.\n",
        "createdAt" : "2015-06-27T01:17:47Z",
        "updatedAt" : "2015-08-03T22:30:11Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "664d20c572498fd443a678160ff6a49fd9d4d22a",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +99,103 @@\t\treturn err\n\t}\n\tif dataVersion == \"\" {\n\t\tdataVersion = specifiedVersion\n\t}"
  },
  {
    "id" : "edd993e0-0b94-4fcd-87c1-b4dcce1ba776",
    "prId" : 10200,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2cb9887a-deef-4156-b874-4e08768ca5ad",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Please add godoc comment; are specifiedVersion and specifiedKind allowed to be \"\"? (I suggest disallowing this, but up to you.)\n",
        "createdAt" : "2015-07-30T22:07:52Z",
        "updatedAt" : "2015-08-03T22:30:11Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "664d20c572498fd443a678160ff6a49fd9d4d22a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +91,95 @@// If specifiedVersion and specifiedKind are empty, the function degenerates to\n// DecodeInto.\nfunc (s *Scheme) DecodeIntoWithSpecifiedVersionKind(data []byte, obj interface{}, specifiedVersion, specifiedKind string) error {\n\tif len(data) == 0 {\n\t\treturn errors.New(\"empty input\")"
  },
  {
    "id" : "917f1b68-2e3b-462f-8e1e-e6b569c9bc16",
    "prId" : 10200,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c860b3f-1f9d-43a7-8681-b93c99aab909",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@nikhiljindal, I add the comments here. PTAL. Thank you.\n",
        "createdAt" : "2015-08-03T17:04:16Z",
        "updatedAt" : "2015-08-03T22:30:11Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "76f33f19-0f26-4ffc-88cb-de3a940268a1",
        "parentId" : "2c860b3f-1f9d-43a7-8681-b93c99aab909",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "nit: We put a space between the comment and \"//\". So the comments should be\n\n```\n// DecodeInto...\n```\n\ninstead of \n\n```\n//DecodeInto...\n```\n",
        "createdAt" : "2015-08-03T21:57:59Z",
        "updatedAt" : "2015-08-03T22:30:11Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "9addd85d-c3b5-4982-b7bf-3d1681c752bb",
        "parentId" : "2c860b3f-1f9d-43a7-8681-b93c99aab909",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Fixed. Thanks.\n",
        "createdAt" : "2015-08-03T22:30:29Z",
        "updatedAt" : "2015-08-03T22:30:29Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "664d20c572498fd443a678160ff6a49fd9d4d22a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +91,95 @@// If specifiedVersion and specifiedKind are empty, the function degenerates to\n// DecodeInto.\nfunc (s *Scheme) DecodeIntoWithSpecifiedVersionKind(data []byte, obj interface{}, specifiedVersion, specifiedKind string) error {\n\tif len(data) == 0 {\n\t\treturn errors.New(\"empty input\")"
  }
]