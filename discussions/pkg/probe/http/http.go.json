[
  {
    "id" : "25708221-9b80-4d30-9974-b756b35cee81",
    "prId" : 99702,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99702#pullrequestreview-605658809",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54e69098-7519-4558-b222-a1c449d5ec15",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "it is not really necessary as the if statement will work without issue even when `headers` is `nil`.",
        "createdAt" : "2021-03-05T22:22:36Z",
        "updatedAt" : "2021-03-05T22:22:36Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "cf952bcf-994b-4ae1-a688-8355ee3ddd20",
        "parentId" : "54e69098-7519-4558-b222-a1c449d5ec15",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "this is on the edge of being a trivial unnecessary edit. I agree the code is better this way so it's lgtm\r\n\r\n/lgtm\r\n/hold cancel",
        "createdAt" : "2021-03-05T22:25:24Z",
        "updatedAt" : "2021-03-05T22:25:24Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "b152001f459d67fd4c8951c01ef2c5b0fb6e5667",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +95,99 @@\t\treturn probe.Failure, err.Error(), nil\n\t}\n\tif headers == nil {\n\t\theaders = http.Header{}\n\t}"
  },
  {
    "id" : "41fd93d8-b3a9-46a2-8c02-158011423509",
    "prId" : 96127,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96127#pullrequestreview-528590992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76ee7447-2ede-41c3-bbd7-f3a6cd64d5b6",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "interesting... So you disable the header using `DisableCompression`, but can add header by simply adding it to the headers collection. After a brief internet search I wonder if Accept-Encoding needs to be set to `identity` as well (https://groups.google.com/g/golang-nuts/c/ms8QNCzew8Q)? Cannot find any call to dumping http request anywhere, maybe you saw it somewhere?",
        "createdAt" : "2020-11-09T20:18:20Z",
        "updatedAt" : "2020-11-09T22:21:41Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "a7f623a6-f8f7-4e0e-9643-848ca6165bdc",
        "parentId" : "76ee7447-2ede-41c3-bbd7-f3a6cd64d5b6",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "`If no Accept-Encoding field is in the request, any content-coding is considered acceptable by the user agent.`\r\n\r\nWe should not need to set \"Accept-Encoding: identity\", ~~in fact my understanding is that having no Accept-Encoding is different from \"Accept-Encoding: identify\" , as with the former should be equivalent to \"Accept-Encoding: *\"~~ \r\n~~> \"give-me no-compression\" vs \"give-me anything\" (?)~~\r\n\r\n\r\n~~Also to me, it seems we may have 2 different questions:~~\r\n~~* do we just want to reduce the payload ?~~\r\n~~* do we want to disable the compression by default ?~~\r\n\r\nEdit: After some more reading, This may not be 100% accurate\r\n\r\n\r\nI'll think a bit more on the edge cases / possible breaking changes\r\n",
        "createdAt" : "2020-11-09T21:14:54Z",
        "updatedAt" : "2020-11-09T22:21:41Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      },
      {
        "id" : "088ed97f-a634-4484-a9f5-58f83328e26f",
        "parentId" : "76ee7447-2ede-41c3-bbd7-f3a6cd64d5b6",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "got it. Thank you. I misunderstood the article than,\r\n\r\nWith your explanation I think removing the headers benefits both - less payload on request and response can still be gzip for apps worried about network and non-gzip for ones that are CPU bound.",
        "createdAt" : "2020-11-09T21:33:59Z",
        "updatedAt" : "2020-11-09T22:21:41Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "a8563994-b54f-4845-9513-9e4c96ad6b55",
        "parentId" : "76ee7447-2ede-41c3-bbd7-f3a6cd64d5b6",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "yeah, i think so. Seems server should fallback to gzip if no \"identify\" is available, so basically means that it should not break in case the server only knows to respond with gzip encoding ðŸ¤” \r\n\r\n> Note: If the request does not include an Accept-Encoding field,\r\n>       and if the \"identity\" content-coding is unavailable, then\r\n>       content-codings commonly understood by HTTP/1.0 clients (i.e.,\r\n>       \"gzip\" and \"compress\") are preferred; some older clients\r\n>       improperly display messages sent with other content-codings.  The\r\n>       server might also make this decision based on information about\r\n>       the particular user-agent or client\r\n\r\nhttps://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\r\n\r\n",
        "createdAt" : "2020-11-09T21:48:05Z",
        "updatedAt" : "2020-11-09T22:21:41Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      },
      {
        "id" : "e6d2ef3d-84df-4b4d-bdc8-fc172416b441",
        "parentId" : "76ee7447-2ede-41c3-bbd7-f3a6cd64d5b6",
        "authorId" : "0c5a8fe3-d7c6-4fc1-9a85-a0a659bef1d4",
        "body" : "*aside* If you want to go wild, send `TE: gzip` and allow HTTP/1.1 gzip _transfer encoding_.\r\n(Not many origins support that). More details in https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/TE",
        "createdAt" : "2020-11-11T22:48:01Z",
        "updatedAt" : "2020-11-11T22:48:01Z",
        "lastEditedBy" : "0c5a8fe3-d7c6-4fc1-9a85-a0a659bef1d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba514718da1a9f84e6be18cf52f8b9ca2b86aa1f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +71,75 @@// Probe returns a ProbeRunner capable of running an HTTP check.\nfunc (pr httpProber) Probe(url *url.URL, headers http.Header, timeout time.Duration) (probe.Result, string, error) {\n\tpr.transport.DisableCompression = true // removes Accept-Encoding header\n\tclient := &http.Client{\n\t\tTimeout:       timeout,"
  },
  {
    "id" : "fc83715d-55b7-43e6-b4f3-ff6a816a08ee",
    "prId" : 95641,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95641#pullrequestreview-517422635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f55a3e7-07ea-448e-b10b-a0a461a85ea8",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "this is just a theoretical possibility, correct?",
        "createdAt" : "2020-10-27T00:18:01Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "b1eae8cb-84c2-4905-923d-fc2f2f93d123",
        "parentId" : "6f55a3e7-07ea-448e-b10b-a0a461a85ea8",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "oh, taking it back. Why do you think we need to override the explicit setting of Accept header to the empty value?",
        "createdAt" : "2020-10-27T00:22:49Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "b979b7d8-3486-4082-98ef-310e06e0475e",
        "parentId" : "6f55a3e7-07ea-448e-b10b-a0a461a85ea8",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "is it intended as a way to explicitly delete the header from the yaml?",
        "createdAt" : "2020-10-27T00:24:29Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "5837e20a-340d-4ee5-901a-ee43742eb44d",
        "parentId" : "6f55a3e7-07ea-448e-b10b-a0a461a85ea8",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "Yes, the idea was to apply the same logic as with the User-Agent and allow the user to explicitly remove the header if he wants to",
        "createdAt" : "2020-10-27T07:51:37Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      }
    ],
    "commit" : "0794bf65bcde0e42fc3e5178f640bc12aec12ea0",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +106,110 @@\t\theaders.Set(\"Accept\", \"*/*\")\n\t}\n\tif headers.Get(\"Accept\") == \"\" {\n\t\t// Accept header was overridden but is empty. removing\n\t\theaders.Del(\"Accept\")"
  },
  {
    "id" : "1a5a5272-f720-40da-bd6d-d940807f70a5",
    "prId" : 95641,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95641#pullrequestreview-520170938",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "943482b3-4dbb-4fab-b142-964a528b094e",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "unrelated, I'm surprised that Host is not being removed from the collection here.",
        "createdAt" : "2020-10-29T23:03:10Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "3ca257da-136e-49d1-be17-3c8b56139c6a",
        "parentId" : "943482b3-4dbb-4fab-b142-964a528b094e",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "The Host header is required for HTTP 1.1 from what I read. So this should be OK ",
        "createdAt" : "2020-10-29T23:42:25Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      },
      {
        "id" : "c6eb58d3-f08d-49e4-8475-627c149ff3b9",
        "parentId" : "943482b3-4dbb-4fab-b142-964a528b094e",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "setting `req.Host` must be enough =). It looks like `Host` header in the headers collection will be ignored (https://github.com/golang/go/blob/cad6d1fef5147d31e94ee83934c8609d3ad150b7/src/net/http/request.go#L92). I wasn't sure about whether the header in the collection will be ignored, thus the comment. From code understanding, removing it from the collection would be logical for me here.",
        "createdAt" : "2020-10-29T23:47:28Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "b06c95b7-5126-4dc4-bd55-a3a2772f7caa",
        "parentId" : "943482b3-4dbb-4fab-b142-964a528b094e",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "again, totally irrelevant to this PR. ",
        "createdAt" : "2020-10-29T23:47:46Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "6df390f3-88a7-4f95-8ec3-bfa93df681fa",
        "parentId" : "943482b3-4dbb-4fab-b142-964a528b094e",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "Got it, you mean the condition can be removed because the Headers will always have a Host. Yeah, if you prefer I can remove the condition here or let it for a new PR.",
        "createdAt" : "2020-10-29T23:54:27Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      },
      {
        "id" : "34472d5c-a63e-45ba-8e5b-6e68d0efd887",
        "parentId" : "943482b3-4dbb-4fab-b142-964a528b094e",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "no, let's not touch this to minimize changes",
        "createdAt" : "2020-10-29T23:57:12Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "0794bf65bcde0e42fc3e5178f640bc12aec12ea0",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +112,116 @@\treq.Header = headers\n\tif headers.Get(\"Host\") != \"\" {\n\t\treq.Host = headers.Get(\"Host\")\n\t}\n\tres, err := client.Do(req)"
  },
  {
    "id" : "93a7e155-c976-4218-945c-330203b20aab",
    "prId" : 75416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75416#pullrequestreview-215709988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d21dd2c-d7cd-4a47-844b-2d9676ecad89",
        "parentId" : null,
        "authorId" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "body" : "AFAIK relative redirects can have no hostname, just \"Location: /another/endpoint\" , does go http client normalize them to have same hostname?",
        "createdAt" : "2019-03-16T07:05:56Z",
        "updatedAt" : "2019-03-16T08:07:21Z",
        "lastEditedBy" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "tags" : [
        ]
      },
      {
        "id" : "2c9ba9be-fd76-4b3e-a95e-16b541186559",
        "parentId" : "9d21dd2c-d7cd-4a47-844b-2d9676ecad89",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Yes, the URL in the request is parsed relative to the previous request: https://golang.org/src/net/http/client.go?s=18538:18870#L563\r\n\r\nThis case is also verified by the unit test.",
        "createdAt" : "2019-03-18T16:28:07Z",
        "updatedAt" : "2019-03-18T16:28:08Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "691a3013686fcd337756cadc19f3f363a11139a3",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +131,135 @@\n\treturn func(req *http.Request, via []*http.Request) error {\n\t\tif req.URL.Hostname() != via[0].URL.Hostname() {\n\t\t\treturn http.ErrUseLastResponse\n\t\t}"
  },
  {
    "id" : "02a93258-843d-4f1c-9f99-abe1169d6b18",
    "prId" : 47729,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47729#pullrequestreview-45188747",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45463ebc-6b12-4766-99b7-5e5e4a0a5a54",
        "parentId" : null,
        "authorId" : "948c8bee-49af-46ed-93a8-309275b51d61",
        "body" : "should this check be moved to L71?",
        "createdAt" : "2017-06-20T10:05:34Z",
        "updatedAt" : "2017-06-21T14:50:35Z",
        "lastEditedBy" : "948c8bee-49af-46ed-93a8-309275b51d61",
        "tags" : [
        ]
      },
      {
        "id" : "a6b0f07e-1275-40b9-8fb7-0ea4e54fd4c2",
        "parentId" : "45463ebc-6b12-4766-99b7-5e5e4a0a5a54",
        "authorId" : "87108680-ef1d-4693-9564-cb0fb733e508",
        "body" : "https://play.golang.org/p/Uob2yTGKhj\r\n\r\nUnnecessary for a go map",
        "createdAt" : "2017-06-20T16:12:40Z",
        "updatedAt" : "2017-06-21T14:50:35Z",
        "lastEditedBy" : "87108680-ef1d-4693-9564-cb0fb733e508",
        "tags" : [
        ]
      }
    ],
    "commit" : "a990e60193565d8433e21141e182093b3b602763",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +71,75 @@\t}\n\tif _, ok := headers[\"User-Agent\"]; !ok {\n\t\tif headers == nil {\n\t\t\theaders = http.Header{}\n\t\t}"
  }
]