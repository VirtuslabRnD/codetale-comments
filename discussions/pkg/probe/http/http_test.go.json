[
  {
    "id" : "a8229355-63a5-4be7-8c99-64f75e3a5c06",
    "prId" : 102615,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102615#pullrequestreview-676788410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9c718a0-54e2-4e3d-ae48-2aa9ae49c6f2",
        "parentId" : null,
        "authorId" : "c2702f95-b5ab-4472-9b9b-a3e60465f10f",
        "body" : "It seems good",
        "createdAt" : "2021-06-05T15:23:38Z",
        "updatedAt" : "2021-06-05T15:23:45Z",
        "lastEditedBy" : "c2702f95-b5ab-4472-9b9b-a3e60465f10f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8e91ab7275d6f0e348804954cc89b37ac51888c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +510,514 @@\t\tassert.NoError(t, err)\n\t\tassert.Equal(t, probe.Success, result)\n\t\tassert.Equal(t, string(truncatedPayload), body)\n\t})\n}"
  },
  {
    "id" : "34ff3cd3-5be9-4a57-a6b4-9297c7843b83",
    "prId" : 96127,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96127#pullrequestreview-526728869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9f73c51-b118-471d-8d20-c0dac70e84be",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "what will happen with the empty string for the `Accept-Encoding`? I wonder for the behavor before this change and after. Would any users already setting it to empty experience a different behavior?",
        "createdAt" : "2020-11-09T20:19:35Z",
        "updatedAt" : "2020-11-09T22:21:41Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "42d768b9-4bba-4c1f-b1fa-db39624fe0af",
        "parentId" : "d9f73c51-b118-471d-8d20-c0dac70e84be",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "https://tools.ietf.org/html/rfc7231#section-5.3.4\r\n\r\n`\r\nIf the representation has no content-coding, then it is  acceptable by default unless specifically excluded by the Accept-Encoding field stating either \"identity;q=0\" or \"*;q=0\" without a more specific entry for \"identity\"\r\n`\r\n\r\nMy understanding is that the server should translate an \"Accept-Encoding: \" into \"Accept-Encoding: identity\"\r\n\r\nSo I don't anticipate any breaking change in this situation",
        "createdAt" : "2020-11-09T21:05:17Z",
        "updatedAt" : "2020-11-09T22:21:41Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      },
      {
        "id" : "fc8460b4-3aa1-4c0c-a140-f0dbadafb59d",
        "parentId" : "d9f73c51-b118-471d-8d20-c0dac70e84be",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "I was mostly asking from the client perspective. If empty string was set for `\"Accept-Encoding\"` in yaml, will it translate to no header or to empty string header before and after this PR?",
        "createdAt" : "2020-11-09T21:31:15Z",
        "updatedAt" : "2020-11-09T22:21:41Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "d41731ba-d56b-4829-aad7-e5b7b3c5e4ae",
        "parentId" : "d9f73c51-b118-471d-8d20-c0dac70e84be",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "ah, it should translate to empty string as empty string is a valid \"Accept-Encoding\". I will add a test\r\n",
        "createdAt" : "2020-11-09T21:50:33Z",
        "updatedAt" : "2020-11-09T22:21:41Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      },
      {
        "id" : "9163e672-8741-42d1-8df1-e6a75bfb43d9",
        "parentId" : "d9f73c51-b118-471d-8d20-c0dac70e84be",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "done üëç  ty",
        "createdAt" : "2020-11-09T23:11:29Z",
        "updatedAt" : "2020-11-09T23:11:29Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba514718da1a9f84e6be18cf52f8b9ca2b86aa1f",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +170,174 @@\t\t\thandler: headerEchoHandler,\n\t\t\treqHeaders: http.Header{\n\t\t\t\t\"Accept-Encoding\": {\"gzip\"},\n\t\t\t},\n\t\t\thealth:  probe.Success,"
  },
  {
    "id" : "8cae0f17-1030-4760-a655-b2c61662a9d2",
    "prId" : 96127,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96127#pullrequestreview-526728783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4333c547-deb4-44ad-9db8-ae43f7ad6f8c",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "also please add a test for the non-strandard encoding value. Important to check that the behavior is not different before and after this chnge",
        "createdAt" : "2020-11-09T20:19:56Z",
        "updatedAt" : "2020-11-09T22:21:41Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "9946aa5c-9a10-4adc-9f42-cd0edce48162",
        "parentId" : "4333c547-deb4-44ad-9db8-ae43f7ad6f8c",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "üëç done, ty",
        "createdAt" : "2020-11-09T23:11:19Z",
        "updatedAt" : "2020-11-09T23:11:19Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba514718da1a9f84e6be18cf52f8b9ca2b86aa1f",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +170,174 @@\t\t\thandler: headerEchoHandler,\n\t\t\treqHeaders: http.Header{\n\t\t\t\t\"Accept-Encoding\": {\"gzip\"},\n\t\t\t},\n\t\t\thealth:  probe.Success,"
  },
  {
    "id" : "d1de9045-0e74-4b70-8742-ac7806dcc542",
    "prId" : 95641,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95641#pullrequestreview-520143490",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14ec034a-5fdf-4224-b320-e386f261a057",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "from test coverage perspective I'm surprised there is no test that validates that there are no \"unexpected\" headers in the payload. All tests validates that adding or removing specific header works.\r\n\r\nI realize it's not relevant to this PR, but maybe you be ok adding this validation?",
        "createdAt" : "2020-10-29T18:54:59Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "d42d24f0-4493-4434-8316-e847b10020a1",
        "parentId" : "14ec034a-5fdf-4224-b320-e386f261a057",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "What would you consider an invalid header ? ü§î Isn't any string a valid header ? \r\n\r\nOr do you mean wrong types - not string ?",
        "createdAt" : "2020-10-29T19:18:48Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      },
      {
        "id" : "5bbf406d-c898-42ce-9aec-64175afd6b75",
        "parentId" : "14ec034a-5fdf-4224-b320-e386f261a057",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "sorry, I meant that I do not see a test that validates that resulting body doesn't have any additional headers. I would expect that test to fail when you would add `Accept` header by default.",
        "createdAt" : "2020-10-29T22:51:15Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "0794bf65bcde0e42fc3e5178f640bc12aec12ea0",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +198,202 @@\t\t},\n\t\t{\n\t\t\thandler: headerEchoHandler,\n\t\t\treqHeaders: http.Header{\n\t\t\t\t\"User-Agent\": {\"foo/1.0\"},"
  },
  {
    "id" : "a32f76ea-8db5-4a20-a07c-c9250b9324f1",
    "prId" : 95641,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95641#pullrequestreview-521096414",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbc70ad6-09b7-49c5-9a14-c007ba7bf62f",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "does this test case has significance comparing to one without User-Agent below?",
        "createdAt" : "2020-10-29T18:55:34Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "e9a939c6-c9aa-4d86-a42a-c505634dd476",
        "parentId" : "bbc70ad6-09b7-49c5-9a14-c007ba7bf62f",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "The idea is that since the `headers` object is being updated when there is a custom `Accept` and when there is custom `User-Agent`  I wanted to make sure one didn't ruin the other when both are customized. It could be that for some reason setting a custom `Accept` would delete/change the `User-Agent` and vice-versa. \r\n\r\nAnother option would (/can) be to improve the assert function to allow assertion of 2 headers in same test but thought it would be easier like this.",
        "createdAt" : "2020-10-29T19:11:11Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      },
      {
        "id" : "4f125e98-80ca-4229-9331-599e56d85c55",
        "parentId" : "bbc70ad6-09b7-49c5-9a14-c007ba7bf62f",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "perhaps then add another test with non-specific header `Foo` and `Accept` together. Not critical",
        "createdAt" : "2020-10-29T22:52:16Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "d6231932-d515-43bc-b1df-ac4935ab1079",
        "parentId" : "bbc70ad6-09b7-49c5-9a14-c007ba7bf62f",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "got it, will look into both suggestions. thanks! ",
        "createdAt" : "2020-10-29T22:55:33Z",
        "updatedAt" : "2020-10-30T00:33:27Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      },
      {
        "id" : "3d6d829a-f3d4-49d1-82d3-4fd56e89a0f3",
        "parentId" : "bbc70ad6-09b7-49c5-9a14-c007ba7bf62f",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "Ok, I added tests to verify the default headers and a test with a custom header + Accept\r\n\r\nPlease take a look ",
        "createdAt" : "2020-10-30T08:07:30Z",
        "updatedAt" : "2020-10-30T08:07:30Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      },
      {
        "id" : "e5579a44-e592-4906-bb64-5f36ee441ee3",
        "parentId" : "bbc70ad6-09b7-49c5-9a14-c007ba7bf62f",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "thank you!",
        "createdAt" : "2020-10-31T00:39:03Z",
        "updatedAt" : "2020-10-31T00:39:03Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "0794bf65bcde0e42fc3e5178f640bc12aec12ea0",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +200,204 @@\t\t\thandler: headerEchoHandler,\n\t\t\treqHeaders: http.Header{\n\t\t\t\t\"User-Agent\": {\"foo/1.0\"},\n\t\t\t\t\"Accept\":     {\"text/html\"},\n\t\t\t},"
  },
  {
    "id" : "8d4d338f-38de-460e-b52e-3de338320fad",
    "prId" : 95641,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95641#pullrequestreview-521917667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10c58e85-62fb-4c89-ab44-4aca620d0dfd",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "Interesting, that it already sends `Accept-Encoding` out of the box. I wonder if this is something we need to update in documentation.\r\n\r\nAlternative is to remove it when not set explicitly =) Will definitely eliminate any concerns with the size of payload",
        "createdAt" : "2020-10-31T00:35:46Z",
        "updatedAt" : "2020-10-31T00:35:46Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "0d925727-ab30-417f-8a53-241084abd102",
        "parentId" : "10c58e85-62fb-4c89-ab44-4aca620d0dfd",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "I do tend to agree with the header removal.\r\n\r\nJust to be coherent with the previous sentence \"let's not touch this to minimize changes\" I'll leave it for now and just update the docs.\r\n\r\nBut anyway I'll be happy to open a new PR to remove this header (+ and the unneeded conditions) or do it in this PR :) ",
        "createdAt" : "2020-10-31T07:40:03Z",
        "updatedAt" : "2020-10-31T07:40:03Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      },
      {
        "id" : "3c1a74ab-6855-4d8e-b0e4-3a5a58daeb66",
        "parentId" : "10c58e85-62fb-4c89-ab44-4aca620d0dfd",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "let's do documentation first and then follow up on `Accept-Encoding`. It would be great if you can drive it",
        "createdAt" : "2020-11-02T19:02:25Z",
        "updatedAt" : "2020-11-02T19:02:25Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "1db890ea-54e8-4b09-b0ca-4e97f30485d5",
        "parentId" : "10c58e85-62fb-4c89-ab44-4aca620d0dfd",
        "authorId" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "body" : "The PR for the docs is including the `Accept-Encoding` header already \r\nhttps://github.com/kubernetes/website/pull/24756\r\n \r\nYes ofc. I will work on it (removing the `Accept-Encoding` header) right afterwords",
        "createdAt" : "2020-11-02T19:06:58Z",
        "updatedAt" : "2020-11-02T19:06:58Z",
        "lastEditedBy" : "76fdcc06-3bfe-4320-921b-e6d4f80a3722",
        "tags" : [
        ]
      }
    ],
    "commit" : "0794bf65bcde0e42fc3e5178f640bc12aec12ea0",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +165,169 @@\t\t\treqHeaders: http.Header{},\n\t\t\thealth:     probe.Success,\n\t\t\taccBody:    \"Accept\\nAccept-Encoding\\nConnection\\nUser-Agent\",\n\t\t},\n\t\t{"
  },
  {
    "id" : "586b4a35-37b9-415a-bda9-a8a311d7ee36",
    "prId" : 87646,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87646#pullrequestreview-351886694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "896f3579-8ec6-4670-ae37-acaa2160bbff",
        "parentId" : null,
        "authorId" : "06a18a1b-6ca5-44b8-9cdc-5bb944ae4e29",
        "body" : "This could be just `w.Write([]byte(res))`.",
        "createdAt" : "2020-01-30T09:46:10Z",
        "updatedAt" : "2020-04-10T04:14:41Z",
        "lastEditedBy" : "06a18a1b-6ca5-44b8-9cdc-5bb944ae4e29",
        "tags" : [
        ]
      },
      {
        "id" : "e1c32f43-45c8-4acb-8c4b-687de9dd6d84",
        "parentId" : "896f3579-8ec6-4670-ae37-acaa2160bbff",
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "Thanks! Your suggestion is good, it looks clearer.",
        "createdAt" : "2020-02-01T14:25:19Z",
        "updatedAt" : "2020-04-10T04:14:41Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      }
    ],
    "commit" : "68ba2fecc10c9bb82ba3a64789c7f2cf636922ba",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +74,78 @@\tgo func() {\n\t\thttp.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\n\t\t\tfmt.Fprint(w, res)\n\t\t})\n\t\terr := http.ListenAndServe(\":9098\", nil)"
  },
  {
    "id" : "2e67b83f-df65-4fd2-84e1-ce57a8c628cd",
    "prId" : 56601,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56601#pullrequestreview-83338509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8126dd0f-95f2-4ca1-9bea-23f629d97f8d",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "s is never used?",
        "createdAt" : "2017-12-04T18:11:41Z",
        "updatedAt" : "2017-12-13T22:15:53Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "1be2e3d6-3b63-43de-b5f6-bc904b264937",
        "parentId" : "8126dd0f-95f2-4ca1-9bea-23f629d97f8d",
        "authorId" : "fa37bbb4-59dd-42f0-8202-52d5717aff5e",
        "body" : "Good catch!",
        "createdAt" : "2017-12-13T22:15:42Z",
        "updatedAt" : "2017-12-13T22:15:53Z",
        "lastEditedBy" : "fa37bbb4-59dd-42f0-8202-52d5717aff5e",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb6df34bef6444eee84f1bf69cb0b7230bb34a86",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +53,57 @@\t}\n\n\tredirectHandler := func(s int, bad bool) func(w http.ResponseWriter, r *http.Request) {\n\t\treturn func(w http.ResponseWriter, r *http.Request) {\n\t\t\tif r.URL.Path == \"/\" {"
  },
  {
    "id" : "1781d99b-cfe4-493b-959b-cc66187294f8",
    "prId" : 13058,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d43f0275-2206-41db-bf0d-66f95a3a6b2a",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "can you leave a comment here that explains why this change was necessary? (potentially include something I could grep for like `// go1.5: the error message changed`) \n",
        "createdAt" : "2015-08-31T19:44:15Z",
        "updatedAt" : "2015-09-10T21:33:35Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "eedfcef9-cb65-4c13-ae31-7a1f77be21a1",
        "parentId" : "d43f0275-2206-41db-bf0d-66f95a3a6b2a",
        "authorId" : "e17c0720-a868-4134-a8e1-a3896b8caa8b",
        "body" : "sure.\n",
        "createdAt" : "2015-08-31T19:48:49Z",
        "updatedAt" : "2015-09-10T21:33:35Z",
        "lastEditedBy" : "e17c0720-a868-4134-a8e1-a3896b8caa8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d15de72a92c8841d069b1265e433eb52edc29822",
    "line" : null,
    "diffHunk" : "@@ -1,1 +53,57 @@\t\t// go1.5: error message changed for timeout, need to support\n\t\t// both old and new\n\t\taccBodies []string\n\t}{\n\t\t// The probe will be filled in below.  This is primarily testing that an HTTP GET happens."
  }
]