[
  {
    "id" : "c3089e25-e707-4cf9-9fbd-66aceda30e53",
    "prId" : 2658,
    "prUrl" : "https://github.com/akka/alpakka/pull/2658#pullrequestreview-643415163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44ccffa2-258a-441c-82a1-ca36e75d15b7",
        "parentId" : null,
        "authorId" : "a3ed5e18-856f-4059-bff4-381924ca99be",
        "body" : "In general, I like the checks on left hand side of `=>` (actions on the right hand side of `=>`). If it is not good then I'll convert it to `if elseif else` \r\n  ",
        "createdAt" : "2021-04-23T15:23:26Z",
        "updatedAt" : "2021-04-24T09:45:32Z",
        "lastEditedBy" : "a3ed5e18-856f-4059-bff4-381924ca99be",
        "tags" : [
        ]
      }
    ],
    "commit" : "50bfdf6e427b427a819215b6bee7dcec4add2fdd",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +62,66 @@        if (parser.hasNext) {\n          parser.next() match {\n            case AsyncXMLStreamReader.EVENT_INCOMPLETE if isClosed(in) && !started => completeStage()\n            case AsyncXMLStreamReader.EVENT_INCOMPLETE if isClosed(in) => failStage(withStreamingFinishedException)\n            case AsyncXMLStreamReader.EVENT_INCOMPLETE => pull(in)"
  },
  {
    "id" : "bc4dc438-8c5f-4b00-9c2e-87c962b29073",
    "prId" : 1982,
    "prUrl" : "https://github.com/akka/alpakka/pull/1982#pullrequestreview-301715978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24988e25-b73d-4a7a-ba8f-4e0594bd7b7c",
        "parentId" : null,
        "authorId" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "body" : "While you're at it, would it make sense to allow for parser configuration with the same pattern?",
        "createdAt" : "2019-10-11T16:10:54Z",
        "updatedAt" : "2019-10-14T18:51:23Z",
        "lastEditedBy" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "tags" : [
        ]
      },
      {
        "id" : "89007330-1f13-4669-b604-cc2f77f30e30",
        "parentId" : "24988e25-b73d-4a7a-ba8f-4e0594bd7b7c",
        "authorId" : "4bf740fb-3744-4861-924e-07d5dd25af4e",
        "body" : "not sure there's any other configuration settings for the parser itself that couldn't be set in the factory. I'll look into that though...",
        "createdAt" : "2019-10-14T17:34:44Z",
        "updatedAt" : "2019-10-14T18:51:23Z",
        "lastEditedBy" : "4bf740fb-3744-4861-924e-07d5dd25af4e",
        "tags" : [
        ]
      },
      {
        "id" : "b9a55564-23e6-484c-8105-264704ebb652",
        "parentId" : "24988e25-b73d-4a7a-ba8f-4e0594bd7b7c",
        "authorId" : "4bf740fb-3744-4861-924e-07d5dd25af4e",
        "body" : "ok, so I can't spend a ton of time on this, but from the list of public methods available on the ReaderConfig instance (returned from parser.getConfig) that mutate the configuration, they all fall into one of these categories:\r\n1) it's a configuration that could be set on the factory prior to creation of the parser\r\n2) it's something that, from what I can tell, should perhaps not be public at all\r\n3) it's the setIllegalCharHandler() config\r\n\r\n1 is now implemented with what we have so far in this pull request\r\n2, it's possible that one or two of the methods I put into this category ARE in fact useful, but since that's not clear, and since there's no current ask from anyone, I would say adding support for these into alpakka is not necessary at this time.\r\n3, this is only partially supported in alpakka right now. Alpakka creates a specific IllegalCharHandler now, whereas the underlying config would allow the use of any custom handler. It might be useful to address this, but it might require a more significant impact on the signature of the parser constructors, in order to work nicely with the existing ignoreInvalidChars parameter. So I'm inclined to not take up that effort with this pull-request.",
        "createdAt" : "2019-10-14T18:49:06Z",
        "updatedAt" : "2019-10-14T18:51:23Z",
        "lastEditedBy" : "4bf740fb-3744-4861-924e-07d5dd25af4e",
        "tags" : [
        ]
      },
      {
        "id" : "5f9847e2-c8ad-4a52-a6c7-f4614d706bb6",
        "parentId" : "24988e25-b73d-4a7a-ba8f-4e0594bd7b7c",
        "authorId" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "body" : "Thank you for having a look.",
        "createdAt" : "2019-10-15T07:59:03Z",
        "updatedAt" : "2019-10-15T08:00:22Z",
        "lastEditedBy" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "tags" : [
        ]
      }
    ],
    "commit" : "179572075a300ea2722579b32321792b675593fa",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +35,39 @@      if (ignoreInvalidChars) {\n        parser.getConfig.setIllegalCharHandler(new ReplacingIllegalCharHandler(0))\n      }\n\n      setHandlers(in, out, this)"
  }
]