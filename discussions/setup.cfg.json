[
  {
    "id" : "dd6c129c-825b-4588-ab05-ca4634cc9d1f",
    "prId" : 23096,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23096#pullrequestreview-165309378",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e34b7c8-f3a5-4367-a448-d5de331a9489",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "I think isort automatically reorganizes the code. Not sure if that's your plan for later, but I think we want to run that instead of skipping everything.",
        "createdAt" : "2018-10-12T20:19:47Z",
        "updatedAt" : "2018-10-17T13:57:30Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "64c83b9a-181e-4a67-8d7e-8234ea405f75",
        "parentId" : "3e34b7c8-f3a5-4367-a448-d5de331a9489",
        "authorId" : "ebd948a0-48ff-4dbe-a0c8-476953d697fa",
        "body" : "Thanks - Yes it does i could run `isort -rc pandas` to sort the entire codebase but I will go for a more incremental approach suggested by @TomAugspurger [here](https://github.com/pandas-dev/pandas/issues/23048)",
        "createdAt" : "2018-10-16T18:39:05Z",
        "updatedAt" : "2018-10-17T13:57:30Z",
        "lastEditedBy" : "ebd948a0-48ff-4dbe-a0c8-476953d697fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b5f5244757c8c1efd6b82f6d10ef53124562092",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +86,90 @@skip=\n    pandas/lib.py,\n    pandas/tslib.py,\n    pandas/testing.py,\n    pandas/conftest.py,"
  },
  {
    "id" : "82b2c641-e0e7-443a-9a67-ddd83f2b955b",
    "prId" : 23764,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23764#pullrequestreview-177471365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdcd1a53-aabf-4960-b1bb-8dad5cfb98df",
        "parentId" : null,
        "authorId" : "ebd948a0-48ff-4dbe-a0c8-476953d697fa",
        "body" : "Sorting frame.py seems to cause a few problems will address this in separate PR",
        "createdAt" : "2018-11-22T00:36:54Z",
        "updatedAt" : "2018-11-22T00:36:54Z",
        "lastEditedBy" : "ebd948a0-48ff-4dbe-a0c8-476953d697fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "4fd715097302d7dec9e561111f36374c8d9a9342",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +113,117 @@skip=\n    pandas/core/api.py,\n    pandas/core/frame.py,\n    pandas/tests/test_errors.py,\n    pandas/tests/test_base.py,"
  },
  {
    "id" : "bcdefa26-ab4a-4864-bc8e-50877a7706ea",
    "prId" : 23847,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23847#pullrequestreview-180489016",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96c5aaab-b699-4592-9745-ce8b8d0c8067",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "aren't we adding the semicolon at the end then?",
        "createdAt" : "2018-11-25T22:35:58Z",
        "updatedAt" : "2018-12-02T15:31:44Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "fd322fb9-a788-4be4-8e17-862848e37cd9",
        "parentId" : "96c5aaab-b699-4592-9745-ce8b8d0c8067",
        "authorId" : "74e431be-b3bc-40dc-90fb-12bc297c2e6f",
        "body" : "ignoring `W503` allows for \r\n```\r\nx = (a.....\r\n       - b....)\r\n``` \r\nSo there may be a `\\n` before a `-`, `+` ...\r\n\r\nignoring `W504`? would enforce\r\n ```\r\nx = (a..... - \r\n       b....)\r\n``` \r\nWith a `\\n` after the `-`, `+`, ...",
        "createdAt" : "2018-11-30T15:00:40Z",
        "updatedAt" : "2018-12-02T15:31:44Z",
        "lastEditedBy" : "74e431be-b3bc-40dc-90fb-12bc297c2e6f",
        "tags" : [
        ]
      },
      {
        "id" : "ec3c1328-438d-439c-ae3e-b65a587820d7",
        "parentId" : "96c5aaab-b699-4592-9745-ce8b8d0c8067",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "the question was if you wanted to ignore the errors for the semicolon in `df.plot();` in this PR.",
        "createdAt" : "2018-11-30T23:13:28Z",
        "updatedAt" : "2018-12-02T15:31:44Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "005a4854-c61f-4b1c-bed7-dfef36e41587",
        "parentId" : "96c5aaab-b699-4592-9745-ce8b8d0c8067",
        "authorId" : "74e431be-b3bc-40dc-90fb-12bc297c2e6f",
        "body" : "No, I'd rather have it on a per file based setting. It's only useful if there are many plots in one file that create cryptic outputs. If not it's better to have it checked.",
        "createdAt" : "2018-11-30T23:32:32Z",
        "updatedAt" : "2018-12-02T15:31:44Z",
        "lastEditedBy" : "74e431be-b3bc-40dc-90fb-12bc297c2e6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3d878d97e96068e51b7e9fc996016bc311785f9",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +33,37 @@[flake8-rst]\nignore = E402,  # module level import not at top of file\n         W503,  # line break before binary operator\nexclude =\n    doc/source/whatsnew/v0.7.0.rst"
  },
  {
    "id" : "ea14c90f-ecd5-422d-aa95-f5bf57a41a21",
    "prId" : 23847,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23847#pullrequestreview-180310354",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bc770e3-86c3-461e-872b-6ec481f28ab3",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "we can do it later, but I think there are many of these that can now be removed, right?",
        "createdAt" : "2018-11-25T22:36:43Z",
        "updatedAt" : "2018-12-02T15:31:44Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "20ba9615-92d4-4662-ac56-735882b86a5d",
        "parentId" : "3bc770e3-86c3-461e-872b-6ec481f28ab3",
        "authorId" : "74e431be-b3bc-40dc-90fb-12bc297c2e6f",
        "body" : "I'd do it later after giving it a final check.\r\nSome of the files still have issues regarding PEP-8 but they have to be ignored by the newly introduced `:flake8-group:` role.\r\n\r\nI found out that if somewhere in the checked code-block is an `E999` issue (even ignored) all issues relying on AST checks like `F821` no longer are checked. It's not a problem with flake8 on python code as syntax errors are eventually fixed, but in context of documentation those issues sometimes make sense like in \r\n\r\n```python\r\n.. ipython::\r\n\r\n   @verbatim\r\n   In [1]: df2.<TAB>                   \r\n   df2.A                  df2.bool\r\n   df2.abs                df2.boxplot\r\n   df2.add                df2.C\r\n   df2.add_prefix         df2.clip\r\n```\r\n\r\nThese blocks have to be manually ignored and therefore I'm including the checks after this is merged.",
        "createdAt" : "2018-11-25T22:48:23Z",
        "updatedAt" : "2018-12-02T15:31:44Z",
        "lastEditedBy" : "74e431be-b3bc-40dc-90fb-12bc297c2e6f",
        "tags" : [
        ]
      },
      {
        "id" : "13bd3ecd-170b-4f04-9884-45b2bfabcbb5",
        "parentId" : "3bc770e3-86c3-461e-872b-6ec481f28ab3",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "I'm not sure I'm following, but I wouldn't overcomplicate things. I think that could be in its own block with nothing else, and have a `noqa` for the syntax error, and I guess nothing else would be needed.\r\n\r\nOr I think the directive also has a `skip` or something like that, right?",
        "createdAt" : "2018-11-25T22:58:00Z",
        "updatedAt" : "2018-12-02T15:31:44Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "05bd6d76-9649-49c8-901e-46a23c5f4e21",
        "parentId" : "3bc770e3-86c3-461e-872b-6ec481f28ab3",
        "authorId" : "74e431be-b3bc-40dc-90fb-12bc297c2e6f",
        "body" : "Yes, however when running `flake8-rst` on the file, it looks for all the code-blocks (.. code-block::, .. ipython::), removes everything thats not code like (`>>>`, outputs, ...), and then merges everything into one big block which gets passed over to `flake8`. \r\n\r\nIf somewhere in that block is a syntax error, `flake8` stops checking for AST-related issues. putting `# noqa: E999` only prevents output, but AST checks are still broken.\r\n\r\nHowever the new `flake8` version will support to define which blocks are merged together, that way `E999` issues can be seperated from the rest of the blocks, basically creating two different checks. One with broken AST, the other with working AST. That way `F821` issues remain to be found in the rest of the file. Otherwise `flake8-rst` wouldn't output anything even when there are issues.\r\n\r\nIt's surely more complicated than just ignoring `E999`, but at least it's checking everything.\r\n\r\nflake8-rst works on the bare *.rst files, therefore `.. ipython` related skips have no effect.",
        "createdAt" : "2018-11-25T23:52:27Z",
        "updatedAt" : "2018-12-02T15:31:44Z",
        "lastEditedBy" : "74e431be-b3bc-40dc-90fb-12bc297c2e6f",
        "tags" : [
        ]
      },
      {
        "id" : "fdfdfb87-d6e3-4230-8ed4-ec6917a0fc60",
        "parentId" : "3bc770e3-86c3-461e-872b-6ec481f28ab3",
        "authorId" : "74e431be-b3bc-40dc-90fb-12bc297c2e6f",
        "body" : "Sorry didn't read it correctly:\r\n> I think that could be in its own block\r\n\r\nExactly, we could put one of these\r\n - `:flake8-group: TABOutput` + `:flake8-add-ignore: E999, E225` and later only reuse `:flake8-group: TABOutput`\r\n - `:flake8-group: None` + `# noqa: E999, E225` or  `:flake8-add-ignore: E999, E225`\r\n - `:flake8-group: Ignore` [disables checking for block]\r\n\r\n`'flake8_rst.sphinxext.custom_roles',` got added to allow these roles.\r\n\r\nI'd prefer to use a way without `# noqa` as it would get rendered in the documentation and might lead to slight confusion for readers who just use pandas and don't use `flake8` or similar.",
        "createdAt" : "2018-11-30T15:18:01Z",
        "updatedAt" : "2018-12-02T15:31:44Z",
        "lastEditedBy" : "74e431be-b3bc-40dc-90fb-12bc297c2e6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3d878d97e96068e51b7e9fc996016bc311785f9",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +89,93 @@    doc/source/timedeltas.rst\n    doc/source/timeseries.rst\n    doc/source/visualization.rst\n\n"
  }
]